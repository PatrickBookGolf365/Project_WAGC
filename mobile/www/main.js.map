{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/classes/todo-team.ts","webpack:///./src/app/classes/todo.ts","webpack:///./src/app/components/additional-info/about/about.component.html","webpack:///./src/app/components/additional-info/about/about.component.scss","webpack:///./src/app/components/additional-info/about/about.component.ts","webpack:///./src/app/components/additional-info/additional-info.component.html","webpack:///./src/app/components/additional-info/additional-info.component.scss","webpack:///./src/app/components/additional-info/additional-info.component.ts","webpack:///./src/app/components/additional-info/contact/contact.component.html","webpack:///./src/app/components/additional-info/contact/contact.component.scss","webpack:///./src/app/components/additional-info/contact/contact.component.ts","webpack:///./src/app/components/additional-info/eligibitity/eligibility.component.html","webpack:///./src/app/components/additional-info/eligibitity/eligibility.component.scss","webpack:///./src/app/components/additional-info/eligibitity/eligibility.component.ts","webpack:///./src/app/components/additional-info/news/news-quote/news-quote.component.html","webpack:///./src/app/components/additional-info/news/news-quote/news-quote.component.scss","webpack:///./src/app/components/additional-info/news/news-quote/news-quote.component.ts","webpack:///./src/app/components/additional-info/news/news.component.html","webpack:///./src/app/components/additional-info/news/news.component.scss","webpack:///./src/app/components/additional-info/news/news.component.ts","webpack:///./src/app/components/additional-info/news/news.service.ts","webpack:///./src/app/components/additional-info/schedule/schedule.component.html","webpack:///./src/app/components/additional-info/schedule/schedule.component.scss","webpack:///./src/app/components/additional-info/schedule/schedule.component.ts","webpack:///./src/app/components/admin/admin-create/admin-create.component.html","webpack:///./src/app/components/admin/admin-create/admin-create.component.scss","webpack:///./src/app/components/admin/admin-create/admin-create.component.ts","webpack:///./src/app/components/admin/admin-quote/admin-quote.component.html","webpack:///./src/app/components/admin/admin-quote/admin-quote.component.scss","webpack:///./src/app/components/admin/admin-quote/admin-quote.component.ts","webpack:///./src/app/components/admin/admin.component.html","webpack:///./src/app/components/admin/admin.component.scss","webpack:///./src/app/components/admin/admin.component.ts","webpack:///./src/app/components/event/event.component.html","webpack:///./src/app/components/event/event.component.scss","webpack:///./src/app/components/event/event.component.ts","webpack:///./src/app/components/event/event.service.ts","webpack:///./src/app/components/geolocation/bottom-sheet/bottom-sheet-overview.component.html","webpack:///./src/app/components/geolocation/bottom-sheet/bottom-sheet-overview.component.scss","webpack:///./src/app/components/geolocation/bottom-sheet/bottom-sheet-overview.component.ts","webpack:///./src/app/components/geolocation/geolocation-detail/geolocation-detail.component.html","webpack:///./src/app/components/geolocation/geolocation-detail/geolocation-detail.component.scss","webpack:///./src/app/components/geolocation/geolocation-detail/geolocation-detail.component.ts","webpack:///./src/app/components/geolocation/geolocation-maynooth-detail/geolocation-maynooth-detail.component.html","webpack:///./src/app/components/geolocation/geolocation-maynooth-detail/geolocation-maynooth-detail.component.scss","webpack:///./src/app/components/geolocation/geolocation-maynooth-detail/geolocation-maynooth-detail.component.ts","webpack:///./src/app/components/geolocation/geolocation.component.html","webpack:///./src/app/components/geolocation/geolocation.component.scss","webpack:///./src/app/components/geolocation/geolocation.component.ts","webpack:///./src/app/components/geolocation/services/haversine.service.ts","webpack:///./src/app/components/geolocation/services/map.service.ts","webpack:///./src/app/components/geolocation/services/maynooth-map.service.ts","webpack:///./src/app/components/geolocation/services/montgomorie.service.ts","webpack:///./src/app/components/geolocation/side-nav/sidenav.component.html","webpack:///./src/app/components/geolocation/side-nav/sidenav.component.scss","webpack:///./src/app/components/geolocation/side-nav/sidenav.component.ts","webpack:///./src/app/components/homepage/homepage.component.html","webpack:///./src/app/components/homepage/homepage.component.scss","webpack:///./src/app/components/homepage/homepage.component.ts","webpack:///./src/app/components/homepage/instagram-feed/instagram-feed.component.html","webpack:///./src/app/components/homepage/instagram-feed/instagram-feed.component.scss","webpack:///./src/app/components/homepage/instagram-feed/instagram-feed.component.ts","webpack:///./src/app/components/homepage/quote/quote.component.html","webpack:///./src/app/components/homepage/quote/quote.component.scss","webpack:///./src/app/components/homepage/quote/quote.component.ts","webpack:///./src/app/components/homepage/quotes/quotes.component.html","webpack:///./src/app/components/homepage/quotes/quotes.component.scss","webpack:///./src/app/components/homepage/quotes/quotes.component.ts","webpack:///./src/app/components/homepage/services/weather.service.ts","webpack:///./src/app/components/live-score/live-player-score/live-player-score.component.html","webpack:///./src/app/components/live-score/live-player-score/live-player-score.component.scss","webpack:///./src/app/components/live-score/live-player-score/live-player-score.component.ts","webpack:///./src/app/components/live-score/live-score.component.html","webpack:///./src/app/components/live-score/live-score.component.scss","webpack:///./src/app/components/live-score/live-score.component.ts","webpack:///./src/app/components/live-score/live-score.service.ts","webpack:///./src/app/components/live-score/live-team-score/live-team-score.component.html","webpack:///./src/app/components/live-score/live-team-score/live-team-score.component.scss","webpack:///./src/app/components/live-score/live-team-score/live-team-score.component.ts","webpack:///./src/app/components/navigation/nav/navigation.component.html","webpack:///./src/app/components/navigation/nav/navigation.component.scss","webpack:///./src/app/components/navigation/nav/navigation.component.ts","webpack:///./src/app/components/navigation/toolbar/toolbar.component.html","webpack:///./src/app/components/navigation/toolbar/toolbar.component.scss","webpack:///./src/app/components/navigation/toolbar/toolbar.component.ts","webpack:///./src/app/components/team-profiles/team-profiles.component.html","webpack:///./src/app/components/team-profiles/team-profiles.component.scss","webpack:///./src/app/components/team-profiles/team-profiles.component.ts","webpack:///./src/app/components/todo-item/todo-item.component.html","webpack:///./src/app/components/todo-item/todo-item.component.scss","webpack:///./src/app/components/todo-item/todo-item.component.ts","webpack:///./src/app/components/transport/transport.component.html","webpack:///./src/app/components/transport/transport.component.scss","webpack:///./src/app/components/transport/transport.component.ts","webpack:///./src/app/pipes/sort/sort.pipe.ts","webpack:///./src/app/services/todo-team.service.ts","webpack:///./src/app/services/todo.service.ts","webpack:///./src/app/shared/material.module.ts","webpack:///./src/app/shared/quote.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-navigation></app-navigation>\\r\\n\\r\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\r\nimport { TodoService} from './services/todo.service';\r\nimport {TodoTeamService} from './services/todo-team.service';\r\n\r\n// import * as $ from 'jquery';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n\r\n  constructor(private todoservice: TodoService, private todoTeamService: TodoTeamService){\r\n    \r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule, Component } from '@angular/core';\r\nimport { MaterialModule } from './shared/material.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { HttpModule } from '@angular/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { routing } from './app.routing';\r\nimport { NavigationComponent } from './components/navigation/nav/navigation.component';\r\nimport { HomepageComponent } from './components//homepage/homepage.component';\r\nimport { LiveScoreComponent } from './components//live-score/live-score.component';\r\nimport { TransportComponent } from './components/transport/transport.component';\r\nimport { TeamProfilesComponent } from './components/team-profiles/team-profiles.component';\r\nimport { ToolbarComponent } from './components/navigation/toolbar/toolbar.component';\r\n\r\nimport { AdditionalInfoComponent } from './components/additional-info/additional-info.component';\r\nimport { NewsComponent } from './components/additional-info/news/news.component';\r\nimport { AboutComponent } from './components/additional-info/about/about.component';\r\nimport { EligibilityComponent } from './components/additional-info/eligibitity/eligibility.component';\r\nimport { ScheduleComponent } from './components/additional-info/schedule/schedule.component';\r\nimport { ContactComponent } from './components/additional-info/contact/contact.component';\r\n\r\nimport { WeatherService, InstagramFeedService} from './components/homepage/services/weather.service';\r\nimport { NewsService} from './components/additional-info/news/news.service';\r\nimport { HomeNewsService } from './components/homepage/services/weather.service';\r\nimport { YelpService } from './components/event/event.service';\r\nimport { QuoteService } from './shared/quote.service';\r\nimport { LiveScoreService } from './components/live-score/live-score.service';\r\nimport { TodoService} from './services/todo.service';\r\nimport { TodoTeamService} from './services/todo-team.service';\r\n\r\n\r\n\r\nimport { EventComponent } from './components/event/event.component';\r\nimport { LivePlayerScoreComponent } from './components/live-score/live-player-score/live-player-score.component';\r\nimport { LiveTeamScoreComponent } from './components/live-score/live-team-score/live-team-score.component';\r\nimport { SidenavComponent } from './components/geolocation/side-nav/sidenav.component';\r\nimport { QuotesComponent } from './components/homepage/quotes/quotes.component';\r\nimport { QuoteComponent } from './components/homepage/quote/quote.component';\r\nimport { NewsQuoteComponent } from './components/additional-info/news/news-quote/news-quote.component';\r\nimport { AdminCreateComponent } from './components/admin/admin-create/admin-create.component';\r\nimport { AdminQuoteComponent } from './components/admin/admin-quote/admin-quote.component';\r\nimport { AdminComponent } from './components/admin/admin.component';\r\nimport { GeolocationComponent } from './components/geolocation/geolocation.component';\r\nimport { SortPipe } from './pipes/sort/sort.pipe';\r\nimport { InstagramFeedComponent } from './components/homepage/instagram-feed/instagram-feed.component';\r\nimport { GeolocationDetailComponent } from './components/geolocation/geolocation-detail/geolocation-detail.component';\r\nimport { MapService } from './components/geolocation/services/map.service';\r\nimport { HaversineService } from './components/geolocation/services/haversine.service';\r\n// tslint:disable-next-line:max-line-length\r\nimport { GeolocationMaynoothDetailComponent } from './components/geolocation/geolocation-maynooth-detail/geolocation-maynooth-detail.component';\r\nimport { BottomSheetOverviewComponent } from './components/geolocation/bottom-sheet/bottom-sheet-overview.component';\r\nimport { TodoItemComponent } from './components/todo-item/todo-item.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SortPipe,\r\n    AppComponent,\r\n    NavigationComponent,\r\n    HomepageComponent,\r\n    LiveScoreComponent,\r\n    TransportComponent,\r\n    AdditionalInfoComponent,\r\n    NewsComponent,\r\n    AboutComponent,\r\n    EligibilityComponent,\r\n    ScheduleComponent,\r\n    ContactComponent,\r\n    TransportComponent,\r\n    EventComponent,\r\n    TeamProfilesComponent,\r\n    ToolbarComponent,\r\n    EventComponent,\r\n    LivePlayerScoreComponent,\r\n    LiveTeamScoreComponent,\r\n    SidenavComponent,\r\n    QuotesComponent,\r\n    QuoteComponent,\r\n    NewsQuoteComponent,\r\n    AdminCreateComponent,\r\n    AdminQuoteComponent,\r\n    AdminComponent,\r\n    GeolocationComponent,\r\n    InstagramFeedComponent,\r\n    GeolocationDetailComponent,\r\n    BottomSheetOverviewComponent,\r\n    GeolocationMaynoothDetailComponent,\r\n    TodoItemComponent,\r\n   \r\n  \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    HttpClientModule,\r\n    HttpModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyCPZDSf-Sp9Ivqq7ojJx39IZhHPK54bjnI'\r\n    }),\r\n    routing\r\n  ],\r\n  entryComponents: [ BottomSheetOverviewComponent ],\r\n  providers: [\r\n    WeatherService,\r\n    NewsService,\r\n    InstagramFeedService,\r\n    HomeNewsService,\r\n    YelpService,\r\n    LiveScoreService,\r\n    QuoteService,\r\n    MapService,\r\n    HaversineService,\r\n    TodoService,\r\n    TodoTeamService,\r\n   \r\n    \r\n   \r\n   ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomepageComponent } from './components//homepage/homepage.component';\r\nimport { LiveScoreComponent } from './components//live-score/live-score.component';\r\nimport { TransportComponent } from './components/transport/transport.component';\r\nimport { TeamProfilesComponent } from './components/team-profiles/team-profiles.component';\r\nimport { ToolbarComponent } from './components/navigation/toolbar/toolbar.component';\r\n\r\nimport { AdditionalInfoComponent } from './components/additional-info/additional-info.component';\r\nimport { NewsComponent } from './components/additional-info/news/news.component';\r\nimport { AboutComponent } from './components/additional-info/about/about.component';\r\nimport { EligibilityComponent } from './components/additional-info/eligibitity/eligibility.component';\r\nimport { ScheduleComponent } from './components/additional-info/schedule/schedule.component';\r\nimport { ContactComponent } from './components/additional-info/contact/contact.component';\r\n\r\n\r\nimport { EventComponent } from './components/event/event.component';\r\n// import { FavTeamProfilesComponent } from './components/fav-team-profiles/fav-team-profiles.component';\r\n\r\n\r\nimport { AdminCreateComponent } from './components/admin/admin-create/admin-create.component';\r\nimport { AdminComponent } from './components/admin/admin.component';\r\nimport { GeolocationComponent } from './components/geolocation/geolocation.component';\r\nimport { GeolocationDetailComponent } from './components/geolocation/geolocation-detail/geolocation-detail.component';\r\n// tslint:disable-next-line:max-line-length\r\nimport { GeolocationMaynoothDetailComponent } from './components/geolocation/geolocation-maynooth-detail/geolocation-maynooth-detail.component';\r\n\r\nconst appRoutes:\r\n  Routes = [\r\n    { path: '', component: HomepageComponent },\r\n    { path: 'live-score', component: LiveScoreComponent },\r\n    { path: 'events', component: EventComponent },\r\n    { path: 'add-info', component: AdditionalInfoComponent },\r\n    { path: 'teamprofiles', component: TeamProfilesComponent },\r\n    // { path: 'favteamprofiles' , component: FavTeamProfilesComponent},\r\n    { path: 'about', component: AboutComponent },\r\n    { path: 'news' , component: NewsComponent},\r\n    { path: 'eligibility', component: EligibilityComponent },\r\n    { path: 'schedule', component: ScheduleComponent },\r\n    { path: 'contact', component: ContactComponent },\r\n    { path: 'livescoring', component: LiveScoreComponent },\r\n    { path: 'transport', component: TransportComponent },\r\n    { path: 'contact', component: ContactComponent },\r\n    { path: 'admin', component: AdminComponent },\r\n    { path: 'admin-create', component: AdminCreateComponent },\r\n    { path: 'geolocation', component: GeolocationComponent },\r\n    { path: 'geolocation/:id', component: GeolocationDetailComponent },\r\n    { path: 'geolocation-maynooth', component: GeolocationMaynoothDetailComponent },\r\n    { path: '**', redirectTo: '', pathMatch: 'full'}\r\n  ];\r\n\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\r\n","export class TodoTeam {\n    id: number;\n    teamName: string;\n\n    constructor(id:number, teamName:string){\n        this.id= id;\n        this.teamName = teamName;\n    }\n}\n","export class Todo {\n    id:number;\n    firstname:string;\n    lastname:string;\n\n    constructor(id: number, firstname: string, lastname:string){\n        this.id = id;\n        this.firstname = firstname;\n        this.lastname = lastname;\n    }\n}\n","module.exports = \"<mat-card class=\\\"example-card\\\">\\r\\n    <mat-card-header>\\r\\n      <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n      <mat-card-title><h3>About</h3></mat-card-title>\\r\\n      <mat-card-subtitle>World Amatuer Team Championships</mat-card-subtitle>\\r\\n    </mat-card-header>\\r\\n    <!-- C:\\\\Users\\\\HappyUser\\\\Project_WAGC-4\\\\src\\\\assets\\\\img\\\\about.jpg -->\\r\\n    <img class=\\\"mat-card-image\\\" src=\\\"assets/img/eligibility.jpg\\\" >\\r\\n    <mat-card-content class=\\\"mat-card-content\\\">\\r\\n      <h3>About WATC 2018 in Ireland</h3>\\r\\n      <p>\\r\\n          The Golfing Union of Ireland (GUI) and the Irish Ladies Golfing Union (ILGU) will host the 2018 World Amateur Team Championships - with the Epsirito Santo Trophy (women) being competed for from Wednesday 29th August until Saturday 1st September and the Eisenhower Trophy (men) being competed for from Wednesday 5th September until Saturday 8th September. The two events will be staged at Carton House, where players will be tested on the world-famous O’Meara and Montgomerie courses . The Championships together represent an international festival of golf, during which time a Championship Gala Dinner for all participants will be staged at Maynooth University and the Biennial Meeting of the International Golf Federation will be held in Carton House on Monday 3rd September.\\r\\n      </p>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-button>LIKE</button>\\r\\n      <button mat-button>SHARE</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n\"","module.exports = \".mat-card-image {\\n  position: relative;\\n  margin: 0;\\n  height: 300px;\\n  width: 100%; }\\n\\n.mat-card-content {\\n  margin-top: 10px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  text-align: justify;\\n  text-justify: inter-word; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<mat-list role=\\\"list\\\">\\r\\n  <mat-list-item role=\\\"listitem\\\" routerLink=\\\"/news\\\">\\r\\n\\r\\n    <span>News</span>\\r\\n\\r\\n    <i class=\\\"material-icons\\\">navigate_next</i>\\r\\n\\r\\n  </mat-list-item>\\r\\n  <mat-divider></mat-divider>\\r\\n\\r\\n  <mat-list-item role=\\\"listitem\\\" routerLink=\\\"/about\\\">\\r\\n\\r\\n    <span>About</span>\\r\\n\\r\\n    <i class=\\\"material-icons\\\">navigate_next</i>\\r\\n\\r\\n  </mat-list-item>\\r\\n  <mat-divider></mat-divider>\\r\\n\\r\\n  <mat-list-item role=\\\"listitem\\\" routerLink=\\\"/eligibility\\\">\\r\\n\\r\\n    <span>Eligibility</span>\\r\\n\\r\\n    <i class=\\\"material-icons\\\">navigate_next</i>\\r\\n\\r\\n  </mat-list-item>\\r\\n  <mat-divider></mat-divider>\\r\\n\\r\\n  <mat-list-item role=\\\"listitem\\\" routerLink=\\\"/schedule\\\">\\r\\n\\r\\n    <span>Full Schedule</span>\\r\\n\\r\\n    <i class=\\\"material-icons\\\">navigate_next</i>\\r\\n\\r\\n  </mat-list-item>\\r\\n  <mat-divider></mat-divider>\\r\\n\\r\\n  <mat-list-item role=\\\"listitem\\\" routerLink=\\\"/contact\\\">\\r\\n\\r\\n    <span>Contact</span>\\r\\n\\r\\n    <i class=\\\"material-icons\\\">navigate_next</i>\\r\\n  </mat-list-item>\\r\\n  <mat-divider></mat-divider>\\r\\n\\r\\n\\r\\n  <mat-list-item role=\\\"listitem\\\" routerLink=\\\"/teamprofiles\\\">\\r\\n\\r\\n    <span>Team Profiles</span>\\r\\n\\r\\n    <i class=\\\"material-icons\\\">navigate_next</i>\\r\\n  </mat-list-item>\\r\\n  <mat-divider></mat-divider>\\r\\n\\r\\n  <mat-list-item role=\\\"listitem\\\" routerLink=\\\"/livescoring\\\">\\r\\n\\r\\n    <span>Live Scoring</span>\\r\\n\\r\\n    <i class=\\\"material-icons\\\">navigate_next</i>\\r\\n  </mat-list-item>\\r\\n  <mat-divider></mat-divider>\\r\\n\\r\\n  <mat-list-item role=\\\"listitem\\\" routerLink=\\\"/geolocation\\\">\\r\\n\\r\\n    <span>Geo-location</span>\\r\\n\\r\\n    <i class=\\\"material-icons\\\">navigate_next</i>\\r\\n  </mat-list-item>\\r\\n  <mat-divider></mat-divider>\\r\\n\\r\\n  <mat-list-item role=\\\"listitem\\\" routerLink=\\\"/transport\\\">\\r\\n\\r\\n    <span>Transport</span>\\r\\n\\r\\n    <i class=\\\"material-icons\\\">navigate_next</i>\\r\\n  </mat-list-item>\\r\\n  <mat-divider></mat-divider>\\r\\n\\r\\n  <mat-list-item role=\\\"listitem\\\" routerLink=\\\"/events\\\">\\r\\n\\r\\n    <span>Events</span>\\r\\n\\r\\n    <i class=\\\"material-icons\\\">navigate_next</i>\\r\\n  </mat-list-item>\\r\\n  <mat-divider></mat-divider>\\r\\n</mat-list>\\r\\n\\r\\n<router-outlet></router-outlet>\"","module.exports = \".material-icons {\\n  position: fixed;\\n  right: 10px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-additional-info',\n  templateUrl: './additional-info.component.html',\n  styleUrls: ['./additional-info.component.scss']\n})\nexport class AdditionalInfoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\r\\n<mat-card class=\\\"example-card\\\">\\r\\n    <mat-card-header>\\r\\n      <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n      <mat-card-title><h3>Contact Us</h3></mat-card-title>\\r\\n      <mat-card-subtitle>World Amatuer Team Championships</mat-card-subtitle>\\r\\n    </mat-card-header>\\r\\n    \\r\\n    <mat-card-content>\\r\\n        <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"3:1\\\">\\r\\n          <mat-grid-tile>\\r\\n            <i class=\\\"material-icons\\\">phone</i>\\r\\n            <h3>Telephone</h3>\\r\\n          </mat-grid-tile>\\r\\n          \\r\\n          <mat-grid-tile>\\r\\n              <i class=\\\"material-icons\\\">email</i>\\r\\n            <h3>Email</h3>\\r\\n          </mat-grid-tile>\\r\\n\\r\\n          <mat-grid-tile>\\r\\n              <a  class=\\\"para\\\"href=\\\"tel:+123 123456789\\\">+123 123456789</a>\\r\\n          </mat-grid-tile>\\r\\n\\r\\n          <mat-grid-tile>\\r\\n              <a class=\\\"para\\\" href=\\\"mailto:info@watc2018.ie\\\" target=\\\"_top\\\">info@watc2018.ie</a>\\r\\n          </mat-grid-tile>\\r\\n        </mat-grid-list>\\r\\n    </mat-card-content>\\r\\n\\r\\n    <mat-card-content class=\\\"mat-card-content-head\\\">\\r\\n      \\r\\n          <h3>Address</h3>\\r\\n          <p>Carton Demesne,\\r\\n              Maynooth,\\r\\n              County Kildare,\\r\\n              ​Ireland\\r\\n          </p>\\r\\n        </mat-card-content>\\r\\n\\r\\n    <mat-card-content id=\\\"contactCard\\\">\\r\\n        <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"1.5:1\\\">\\r\\n          <mat-grid-tile>\\r\\n\\r\\n            <a href=\\\"https://www.facebook.com/golfingunionofireland/ \\\">\\r\\n              <img class=\\\"socialImage\\\" src=\\\"/assets/img/facebook.png\\\" >\\r\\n            </a>\\r\\n          </mat-grid-tile>\\r\\n\\r\\n          <mat-grid-tile>\\r\\n\\r\\n              <a href=\\\"https://www.facebook.com/golfingunionofireland/ \\\">\\r\\n                <img class=\\\"socialImage\\\" src=\\\"/assets/img/instagram.png\\\" >\\r\\n              </a>\\r\\n            </mat-grid-tile>\\r\\n\\r\\n          <mat-grid-tile>\\r\\n            <a href=\\\"https://twitter.com/guigolf?lang=en\\\">\\r\\n              <img class=\\\"socialImage\\\" src=\\\"/assets/img/twitter.png\\\">\\r\\n            </a>\\r\\n        </mat-grid-tile>\\r\\n      </mat-grid-list>    \\r\\n    </mat-card-content>\\r\\n\\r\\n\\r\\n  </mat-card>\\r\\n\"","module.exports = \".mat-card-content-head {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  text-align: justify;\\n  text-justify: inter-word;\\n  padding: -30px; }\\n\\n.mat-toolbar-add-info {\\n  width: 100%;\\n  height: 40px;\\n  background-color: #5cd65c; }\\n\\n.material-icons {\\n  font-size: 38px;\\n  height: 38px;\\n  width: 38px;\\n  margin: 5px; }\\n\\n#contactCard {\\n  text-align: center; }\\n\\n.socialImage {\\n  width: 50%; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<mat-card class=\\\"example-card\\\">\\r\\n    <mat-card-header>\\r\\n      <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n      <mat-card-title>Eligibility</mat-card-title>\\r\\n      <mat-card-subtitle>World Amatuer Team Championships</mat-card-subtitle>\\r\\n    </mat-card-header>\\r\\n    <img class=\\\"mat-card-image\\\" src=\\\"assets/img/about.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\" >\\r\\n    <mat-card-content class=\\\"mat-card-content\\\">\\r\\n      <h3>Eligibility</h3>\\r\\n      <p>\\r\\n          IGF National Federation Members may enter one women’s team and one men’s team. Players must be amateur golfers under the Rules of Amateur Status of the R&A and the United States Golf Association and nationals of the countries they represent, as defined in the IGF’s Nationality Policy.\\r\\n      </p>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n\"","module.exports = \".mat-card-image {\\n  position: relative;\\n  margin: 0;\\n  height: 300px;\\n  width: 100%; }\\n\\n.mat-card-content {\\n  margin-top: 10px;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  text-align: justify;\\n  text-justify: inter-word; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-eligibility',\n  templateUrl: './eligibility.component.html',\n  styleUrls: ['./eligibility.component.scss']\n})\nexport class EligibilityComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"news-card-severity-{{quote.severity}}\\\">\\n  <mat-list>\\n    <mat-list-item>\\n  \\n    <div class=\\\"image-card-severity-{{quote.severity}}\\\">\\n      <img src=\\\"assets/img/{{quote.severity}}.svg\\\">\\n    </div>\\n    \\n    <div>\\n      <p>{{ quote.content }}</p>\\n    </div>\\n\\n\\n    </mat-list-item>  \\n  </mat-list>\\n</div>\"","module.exports = \".news-card-severity-1 {\\n  color: white;\\n  font-size: 1.2em;\\n  background: #27ae60;\\n  padding: 3%;\\n  margin-bottom: 5%; }\\n\\n.image-card-severity-1 {\\n  margin-right: 5%; }\\n\\n.news-card-severity-2 {\\n  color: white;\\n  font-size: 1.2em;\\n  background: #3498db;\\n  padding: 3%;\\n  margin-bottom: 5%; }\\n\\n.image-card-severity-2 {\\n  margin-right: 5%; }\\n\\n.image-card-severity-3 {\\n  margin-right: 5%; }\\n\\n.news-card-severity-3 {\\n  color: white;\\n  font-size: 1.2em;\\n  background: #f39c12;\\n  padding: 3%;\\n  margin-bottom: 5%; }\\n\\n.image-card-severity-4 {\\n  margin-right: 5%; }\\n\\n.news-card-severity-4 {\\n  color: white;\\n  font-size: 1.2em;\\n  background: #e74c3c;\\n  padding: 3%;\\n  margin-bottom: 5%; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Quote } from '../../../../shared/quote.interface';\n\n@Component({\n  selector: 'app-news-quote',\n  templateUrl: './news-quote.component.html',\n  styleUrls: ['./news-quote.component.scss']\n})\nexport class NewsQuoteComponent implements OnInit {\n\n\n  @Input() quote: Quote;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\r\\n   <div *ngFor=\\\"let news of news.update\\\">\\r\\n        <mat-expansion-panel  id=\\\"newsUpdate\\\" >\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title id=\\\"newsMain\\\">\\r\\n              <div class=\\\"box\\\">\\r\\n                <span id=\\\"newsTimeStamp\\\">{{news.timeStamp}}</span>\\r\\n                <span><mat-icon id=\\\"newsSeverity{{news.severity}}\\\">{{news.type}}</mat-icon></span>\\r\\n                <span id=\\\"newsDesc\\\">{{news.desc}}</span>\\r\\n               \\r\\n                \\r\\n              </div>\\r\\n            </mat-panel-title>\\r\\n          </mat-expansion-panel-header>\\r\\n          {{news.content}}\\r\\n        </mat-expansion-panel>\\r\\n      </div>\"","module.exports = \"#newsSeverity1 {\\n  color: red;\\n  padding-right: 15px; }\\n\\n#newsSeverity2 {\\n  color: orange;\\n  padding-right: 15px; }\\n\\n#newsSeverity3 {\\n  color: green;\\n  padding-right: 15px; }\\n\\n#newsDesc {\\n  width: 100%;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis; }\\n\\n#newsTimeStamp {\\n  padding-right: 15px; }\\n\\n#newsUpdate {\\n  margin: 1%;\\n  margin-top: 2%; }\\n\\n.box {\\n  display: flex;\\n  align-items: center; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { NewsService} from './news.service';\r\nimport { INews } from './news';\r\n\r\nimport { Http, Response } from \"@angular/http\";\r\n\r\nimport { Quote } from '../../../shared/quote.interface';\r\nimport { QuoteService } from \"../../../shared/quote.service\";\r\n\r\n@Component({\r\n  selector: 'app-news',\r\n  templateUrl: './news.component.html',\r\n  styleUrls: ['./news.component.scss']\r\n})\r\nexport class NewsComponent implements OnInit {\r\n  errorMessage: string;\r\n  players: any[];\r\n  news: INews[];\r\n  quotes: Quote[];\r\n\r\n  constructor(public _newsService:NewsService, private quoteService: QuoteService) {\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n    this._newsService.getNews()\r\n    .subscribe(news => {\r\n      this.news = news;},\r\n      error => this.errorMessage=<any>error);\r\n\r\n    // this.quoteService.getQuotes()\r\n    //   .subscribe(\r\n    //     (quotes: Quote[]) => this.quotes = quotes,\r\n    //     (error: Response) => console.log(error)\r\n    //    );\r\n    }\r\n  }\r\n  ","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/observable/throw\";\r\nimport \"rxjs/add/operator/catch\";\r\nimport \"rxjs/add/operator/do\";\r\n\r\nimport {INews} from './news';\r\n\r\n\r\n@Injectable()\r\nexport class NewsService {\r\n    \r\n public _newsUrl=\"http://watc.bookgolf365.ie/news.json\"\r\n  \r\n   constructor(public _http: HttpClient){}\r\n    \r\n       getNews(): Observable<any[]>{\r\n        return this._http.get<any[]>(this._newsUrl)\r\n        .do(data => console.log(\"All: \"+JSON.stringify(data)))\r\n        .catch(this.handleError)\r\n       \r\n       }\r\n\r\n       public handleError(err: HttpErrorResponse){\r\n        console.log(err.message);\r\n        return Observable.throw(err.message);\r\n    }\r\n   } \r\n\r\n//    ga7R1k7BOp852yKSjuawnxv3kFAf2F9Tj7HYgUaJbIskAGUaNaYKIo1LHmnjSQWtCFgLeaPS_RX-vWmvgeLjH1xDrVBTUV97dslQlOrigInePWb8ukT3_5KgJR_OWnYx","module.exports = \"<div class=\\\"main\\\">\\r\\n<mat-accordion class=\\\"example-headers-align\\\">\\r\\n    <mat-expansion-panel [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\" hideToggle>\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n          Friday 24th August\\r\\n        </mat-panel-title>\\r\\n        <mat-panel-description>\\r\\n            Women's Team Arrivals\\r\\n        <mat-icon>account_circle</mat-icon>\\r\\n        </mat-panel-description>\\r\\n      </mat-expansion-panel-header>\\r\\n          <ul>\\r\\n            <li>\\r\\n              Women's Team Arrivals\\r\\n            </li>\\r\\n            <li>\\r\\n              Courses are Closed.\\r\\n            </li>\\r\\n          </ul>\\r\\n      <mat-action-row>\\r\\n        <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n      </mat-action-row>\\r\\n    </mat-expansion-panel>\\r\\n\\r\\n    <mat-expansion-panel [expanded]=\\\"step === 1\\\" (opened)=\\\"setStep(1)\\\" hideToggle>\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n            Saturday 25th August\\r\\n        </mat-panel-title>\\r\\n        <mat-panel-description>\\r\\n            Women's Registration\\r\\n          <mat-icon>map</mat-icon>\\r\\n        </mat-panel-description>\\r\\n      </mat-expansion-panel-header>\\r\\n      <ul>\\r\\n          <li>\\r\\n            Women's Team Arrivals\\r\\n          </li>\\r\\n          <li>\\r\\n            Courses are Closed.\\r\\n          </li>\\r\\n          <li>\\r\\n            Women's Registration  (10:00hrs-18:00hrs)\\r\\n          </li>\\r\\n      </ul>\\r\\n      <mat-action-row>\\r\\n          <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n        </mat-action-row>\\r\\n    </mat-expansion-panel>\\r\\n\\r\\n    <mat-expansion-panel [expanded]=\\\"step === 2\\\" (opened)=\\\"setStep(2)\\\" hideToggle>\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n            Sunday 26th August\\r\\n        </mat-panel-title>\\r\\n        <mat-panel-description>\\r\\n            Women's Registration\\r\\n          <mat-icon>date_range</mat-icon>\\r\\n        </mat-panel-description>\\r\\n      </mat-expansion-panel-header>\\r\\n      <ul>\\r\\n          <li>\\r\\n            Courses are Closed; Teams can walk courses and Practice Facilities will be Open.\\r\\n          </li>\\r\\n          <li>\\r\\n            Women's Registration  (08:00hrs-18:00hrs)\\r\\n          </li>\\r\\n      </ul>\\r\\n      <mat-action-row>\\r\\n        <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n        <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n      </mat-action-row>\\r\\n    </mat-expansion-panel>\\r\\n\\r\\n    <mat-expansion-panel [expanded]=\\\"step === 3\\\" (opened)=\\\"setStep(3)\\\" hideToggle>\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>\\r\\n              Monday 27th August\\r\\n          </mat-panel-title>\\r\\n          <mat-panel-description>\\r\\n            Women's Practice Round\\r\\n          <mat-icon>date_range</mat-icon>\\r\\n          </mat-panel-description>\\r\\n        </mat-expansion-panel-header>\\r\\n        <ul>\\r\\n            <li>\\r\\n              Team Captains' Meeting (16:00hrs, Carton House Kildare Suites on first floor)\\r\\n            </li>\\r\\n        </ul>\\r\\n        <mat-action-row>\\r\\n          <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n        </mat-action-row>\\r\\n      </mat-expansion-panel>\\r\\n\\r\\n      <mat-expansion-panel [expanded]=\\\"step === 4\\\" (opened)=\\\"setStep(4)\\\" hideToggle>\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n              Tuesday 28th August\\r\\n            </mat-panel-title>\\r\\n            <mat-panel-description>\\r\\n              Women's Practice Round\\r\\n            <mat-icon>date_range</mat-icon>\\r\\n            </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n          <ul>\\r\\n              <li>\\r\\n                Referee's Meeting (1100hrs, Carton House Kildare Suites on first floor)\\r\\n              </li>\\r\\n              <li>\\r\\n                  Women's Team Photographs (Tyrconnell Room near Carton House courtyard, timetable TBC)\\r\\n              </li>\\r\\n              <li>\\r\\n                  Women's Opening Ceremony, followed by reception (Carton House)\\r\\n              </li>\\r\\n          </ul>\\r\\n          <mat-action-row>\\r\\n            <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n            <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n          </mat-action-row>\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n        <mat-expansion-panel [expanded]=\\\"step === 5\\\" (opened)=\\\"setStep(5)\\\" hideToggle>\\r\\n            <mat-expansion-panel-header>\\r\\n              <mat-panel-title>\\r\\n                  Wednesday 29th August\\r\\n              </mat-panel-title>\\r\\n              <mat-panel-description>\\r\\n                  Espirito Santo Trophy, First Round\\r\\n              <mat-icon>date_range</mat-icon>\\r\\n              </mat-panel-description>\\r\\n            </mat-expansion-panel-header>\\r\\n            <ul>\\r\\n                <li>\\r\\n                    Espirito Santo Trophy, First Round\\r\\n                </li>\\r\\n            </ul>\\r\\n            <mat-action-row>\\r\\n              <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n              <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n            </mat-action-row>\\r\\n          </mat-expansion-panel>\\r\\n\\r\\n          <mat-expansion-panel [expanded]=\\\"step === 6\\\" (opened)=\\\"setStep(6)\\\" hideToggle>\\r\\n              <mat-expansion-panel-header>\\r\\n                <mat-panel-title>\\r\\n                    Thursday 30th August\\r\\n                </mat-panel-title>\\r\\n                <mat-panel-description>\\r\\n                    Espirito Santo Trophy, Second Round\\r\\n                <mat-icon>date_range</mat-icon>\\r\\n                </mat-panel-description>\\r\\n              </mat-expansion-panel-header>\\r\\n              <ul>\\r\\n                  <li>\\r\\n              Espirito Santo Trophy, Second Round\\r\\n            </li>\\r\\n          </ul>\\r\\n        <mat-action-row>\\r\\n      <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n      <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n    </mat-action-row>\\r\\n  </mat-expansion-panel>\\r\\n\\r\\n  <mat-expansion-panel [expanded]=\\\"step === 7\\\" (opened)=\\\"setStep(7)\\\" hideToggle>\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n         Friday 31st August\\r\\n      </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n        Espirito Santo Trophy, Third Round\\r\\n      <mat-icon>date_range</mat-icon>\\r\\n    </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n      <ul>\\r\\n        <li>\\r\\n          Espirito Santo Trophy, Third Round\\r\\n       </li>\\r\\n    </ul>\\r\\n  <mat-action-row>\\r\\n    <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n  </mat-action-row>\\r\\n</mat-expansion-panel>\\r\\n\\r\\n  <mat-expansion-panel [expanded]=\\\"step === 8\\\" (opened)=\\\"setStep(8)\\\" hideToggle>\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n        Saturday 1st September\\r\\n      </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n        Men's Team Arrivals\\r\\n      <mat-icon>date_range</mat-icon>\\r\\n    </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n    <ul>\\r\\n      <li>\\r\\n        Men's Registration (1000-1800hrs)\\r\\n      </li>\\r\\n      <li>\\r\\n        Espirito Santo Trophy, Fourth Round\\r\\n      </li>\\r\\n      <li>\\r\\n        Men's Teams may walk golf courses as spectators in Espirito Santo Trophy Final Round\\r\\n      </li>\\r\\n      <li>\\r\\n         Practice Facilities Open\\r\\n      </li>\\r\\n      <li>\\r\\n          Women's Awards Ceremony / Gala Dinner (Maynooth University)\\r\\n      </li>\\r\\n    </ul>\\r\\n  <mat-action-row>\\r\\n    <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n  </mat-action-row>\\r\\n</mat-expansion-panel>\\r\\n\\r\\n<mat-expansion-panel [expanded]=\\\"step === 9\\\" (opened)=\\\"setStep(9)\\\" hideToggle>\\r\\n  <mat-expansion-panel-header>\\r\\n    <mat-panel-title>\\r\\n       Sunday 2nd September\\r\\n    </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n        Men's Team Arrivals\\r\\n      <mat-icon>date_range</mat-icon>\\r\\n    </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n      <ul>\\r\\n        <li>\\r\\n          Men's Registration (1000-1800hrs)\\r\\n        </li>\\r\\n        <li>\\r\\n          Espirito Santo Trophy, Fourth Round\\r\\n        </li>\\r\\n        <li>\\r\\n          Men's Teams may walk golf courses as spectators in Espirito Santo Trophy Final Round\\r\\n        </li>\\r\\n        <li>\\r\\n          Practice Facilities Open\\r\\n        </li>\\r\\n        <li>\\r\\n          Women's Awards Ceremony / Gala Dinner (Maynooth University)\\r\\n        </li>\\r\\n      </ul>\\r\\n      <mat-action-row>\\r\\n        <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n        <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n      </mat-action-row>\\r\\n  </mat-expansion-panel>\\r\\n\\r\\n<mat-expansion-panel [expanded]=\\\"step === 10\\\" (opened)=\\\"setStep(10)\\\" hideToggle>\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title>\\r\\n          Monday 3rd September\\r\\n      </mat-panel-title>\\r\\n      <mat-panel-description>\\r\\n          IGF Biennial Meeting (Carton House - Carton Suites)\\r\\n      <mat-icon>date_range</mat-icon>\\r\\n    </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n    <ul>\\r\\n      <li>\\r\\n        IGF Biennial Meeting (Carton House - Carton Suites)\\r\\n      </li>\\r\\n      <li>\\r\\n          Men's Practice Round\\r\\n     </li>\\r\\n      <li>\\r\\n          Team Captains' Meeting (1600hrs, Carton House Kildare Suites on first floor)\\r\\n      </li>\\r\\n      <li>\\r\\n          Delegates and Duffers Competition (Luttrellstown Castle)\\r\\n      </li>\\r\\n      <li>\\r\\n          Women's Team Departures\\r\\n      </li>\\r\\n    </ul>\\r\\n    <mat-action-row>\\r\\n      <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n      <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n    </mat-action-row>\\r\\n  </mat-expansion-panel>\\r\\n\\r\\n\\r\\n    <mat-expansion-panel [expanded]=\\\"step === 11\\\" (opened)=\\\"setStep(11)\\\" hideToggle>\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n          Tuesday 4th September\\r\\n        </mat-panel-title>\\r\\n        <mat-panel-description>\\r\\n            Men's Practice Round\\r\\n        <mat-icon>date_range</mat-icon>\\r\\n      </mat-panel-description>\\r\\n      </mat-expansion-panel-header>\\r\\n       <ul>\\r\\n         <li>\\r\\n          Referee's Meeting (1100hrs, Carton House Kildare Suites on first floor)\\r\\n        </li>\\r\\n         <li>\\r\\n          Men's Team Photographs (Tyrconnell Room near Carton House courtyard, timetable TBC)\\r\\n        </li>\\r\\n        <li>\\r\\n          Men's Opening Ceremony, followed by reception (Carton House)\\r\\n        </li>\\r\\n         <li>\\r\\n          Practice Facilities Open\\r\\n        </li>\\r\\n      </ul>\\r\\n    <mat-action-row>\\r\\n      <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n      <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n    </mat-action-row>\\r\\n  </mat-expansion-panel>\\r\\n\\r\\n\\r\\n    <mat-expansion-panel [expanded]=\\\"step === 12\\\" (opened)=\\\"setStep(12)\\\" hideToggle>\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n          Wednesday 5th September\\r\\n        </mat-panel-title>\\r\\n          <mat-panel-description>\\r\\n            Eisenhower Trophy, First Round\\r\\n          <mat-icon>date_range</mat-icon>\\r\\n        </mat-panel-description>\\r\\n      </mat-expansion-panel-header>\\r\\n      <ul>\\r\\n        <li>\\r\\n        Men's Registration (1000-1800hrs)\\r\\n       </li>\\r\\n        <li>\\r\\n          Espirito Santo Trophy, Fourth Round\\r\\n        </li>\\r\\n        <li>\\r\\n          Men's Teams may walk golf courses as spectators in Espirito Santo Trophy Final Round\\r\\n        </li>\\r\\n        <li>\\r\\n          Practice Facilities Open\\r\\n        </li>\\r\\n        <li>\\r\\n          Women's Awards Ceremony / Gala Dinner (Maynooth University)\\r\\n        </li>\\r\\n      </ul>\\r\\n       <mat-action-row>\\r\\n        <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n        <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n      </mat-action-row>\\r\\n   </mat-expansion-panel>\\r\\n\\r\\n   <mat-expansion-panel [expanded]=\\\"step === 13\\\" (opened)=\\\"setStep(13)\\\" hideToggle>\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>\\r\\n          Friday 7th September\\r\\n         </mat-panel-title>\\r\\n         <mat-panel-description>\\r\\n           Men's Team Arrivals\\r\\n        <mat-icon>date_range</mat-icon>\\r\\n      </mat-panel-description>\\r\\n      </mat-expansion-panel-header>\\r\\n            <ul>\\r\\n              <li>\\r\\n                Men's Registration (1000-1800hrs)\\r\\n              </li>\\r\\n              <li>\\r\\n                Espirito Santo Trophy, Fourth Round\\r\\n              </li>\\r\\n              <li>\\r\\n                Men's Teams may walk golf courses as spectators in Espirito Santo Trophy Final Round\\r\\n              </li>\\r\\n              <li>\\r\\n                Practice Facilities Open\\r\\n              </li>\\r\\n              <li>\\r\\n                Women's Awards Ceremony / Gala Dinner (Maynooth University)\\r\\n              </li>\\r\\n          </ul>\\r\\n        <mat-action-row>\\r\\n          <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n       </mat-action-row>\\r\\n    </mat-expansion-panel>\\r\\n\\r\\n    <mat-expansion-panel [expanded]=\\\"step === 14\\\" (opened)=\\\"setStep(14)\\\" hideToggle>\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>\\r\\n            Saturday 8th September\\r\\n         </mat-panel-title>\\r\\n         <mat-panel-description>\\r\\n           Men's Team Arrivals\\r\\n        <mat-icon>date_range</mat-icon>\\r\\n      </mat-panel-description>\\r\\n      </mat-expansion-panel-header>\\r\\n            <ul>\\r\\n              <li>\\r\\n                Eisenhower Trophy, Fourth Round\\r\\n              </li>\\r\\n              <li>\\r\\n                  Men's Awards Ceremony / Farewell Reception\\r\\n              </li>\\r\\n              <li>\\r\\n                Men's Teams may walk golf courses as spectators in Espirito Santo Trophy Final Round\\r\\n              </li>\\r\\n          </ul>\\r\\n        <mat-action-row>\\r\\n          <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n       </mat-action-row>\\r\\n    </mat-expansion-panel>\\r\\n  \\r\\n\\r\\n  <mat-expansion-panel [expanded]=\\\"step === 15\\\" (opened)=\\\"setStep(15)\\\" hideToggle>\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n        Sunday 9th September​\\r\\n       </mat-panel-title>\\r\\n       <mat-panel-description>\\r\\n         Men's Team Arrivals\\r\\n      <mat-icon>date_range</mat-icon>\\r\\n    </mat-panel-description>\\r\\n    </mat-expansion-panel-header>\\r\\n          <ul>\\r\\n            <li>\\r\\n                Completion of Eisenhower Trophy (if needed)\\r\\n            </li>\\r\\n            <li>\\r\\n                Men's Awards Ceremony (if needed)\\r\\n            </li>\\r\\n        </ul>\\r\\n      <mat-action-row>\\r\\n        <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n        <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">End</button>\\r\\n     </mat-action-row>\\r\\n  </mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n</div>\\r\\n\"","module.exports = \"body {\\n  overflow: hidden;\\n  height: 100%; }\\n\\n.main {\\n  height: 100vh;\\n  overflow-y: scroll; }\\n\\n.mat-accordion {\\n  height: 10%; }\\n\\n.example-headers-align .mat-expansion-panel-header-title,\\n.example-headers-align .mat-expansion-panel-header-description {\\n  flex-basis: 0; }\\n\\n.example-headers-align .mat-expansion-panel-header-description {\\n  justify-content: space-between;\\n  align-items: center; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-schedule',\r\n  templateUrl: './schedule.component.html',\r\n  styleUrls: ['./schedule.component.scss']\r\n})\r\nexport class ScheduleComponent implements OnInit {\r\n\r\n  step = 0;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  setStep(index: number) {\r\n    this.step = index;\r\n  }\r\n\r\n  nextStep() {\r\n    this.step++;\r\n  }\r\n\r\n  prevStep() {\r\n    this.step--;\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"example-container\\\">\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n    <mat-form-field>\\n      <input matInput id=\\\"title\\\" name=\\\"title\\\" ngModel placeholder=\\\"Title\\\">\\n    </mat-form-field>\\n  \\n    <mat-form-field>\\n      <textarea matInput id=\\\"content\\\" name=\\\"content\\\" ngModel placeholder=\\\"Content\\\"></textarea>\\n    </mat-form-field>\\n  \\n    <mat-form-field>\\n        <input matInput id=\\\"severity\\\" name=\\\"severity\\\" ngModel placeholder=\\\"Severity\\\">\\n    </mat-form-field>\\n    <button mat-button type=\\\"submit\\\" class=\\\"button\\\">Submit</button>\\n</form> \\n</div>\"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column; }\\n\\n.example-container > * {\\n  width: 100%; }\\n\\nmat-form-field {\\n  width: 100%; }\\n\\n.button {\\n  color: white;\\n  background-color: #0066ff; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { QuoteService } from '../../../shared/quote.service';\n\n@Component({\n  selector: 'app-admin-create',\n  templateUrl: './admin-create.component.html',\n  styleUrls: ['./admin-create.component.scss']\n})\nexport class AdminCreateComponent implements OnInit {\n\n  constructor(private quoteService: QuoteService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(form: NgForm) {\n    this.quoteService.addQuote(form.value.title, form.value.content, form.value.severity)\n      .subscribe(\n        () => alert('Quote created!')\n      );\n    form.reset();\n  }\n\n}\n","module.exports = \"<div class=\\\"news-card-severity-{{quote.severity}}\\\">\\n  <mat-list>\\n    <mat-list-item>\\n      \\n      <div class=\\\"image-card-severity-{{quote.severity}}\\\">\\n        <img src=\\\"assets/img/{{quote.severity}}.svg\\\">\\n      </div>\\n        \\n      <div>\\n        <p>{{ quote.content }}</p>\\n      </div>\\n\\n  </mat-list-item> \\n</mat-list>\\n<div *ngIf=\\\"editing\\\">\\n    <input type=\\\"text\\\" class=\\\"input\\\" [(ngModel)]=\\\"editValueTitle\\\">\\n    <input type=\\\"text\\\" class=\\\"input\\\" [(ngModel)]=\\\"editValueContent\\\">\\n    <input type=\\\"text\\\" class=\\\"input\\\" [(ngModel)]=\\\"editValueSeverity\\\">\\n    <button mat-button (click)=\\\"onUpdate()\\\">Update</button>\\n    <button mat-button (click)=\\\"onCancel()\\\">Cancel</button>\\n  </div>\\n  <div *ngIf=\\\"!editing\\\">\\n    <button mat-button (click)=\\\"onEdit()\\\">Edit</button>\\n    <button mat-button (click)=\\\"onDelete()\\\">Delete</button>\\n</div>\\n</div>\\n\"","module.exports = \".news-card-severity-1 {\\n  color: white;\\n  font-size: 1.2em;\\n  background: #27ae60;\\n  padding: 3%;\\n  margin-bottom: 5%; }\\n\\n.image-card-severity-1 {\\n  margin-right: 5%; }\\n\\n.news-card-severity-2 {\\n  color: white;\\n  font-size: 1.2em;\\n  background: #3498db;\\n  padding: 3%;\\n  margin-bottom: 5%; }\\n\\n.image-card-severity-2 {\\n  margin-right: 5%; }\\n\\n.image-card-severity-3 {\\n  margin-right: 5%; }\\n\\n.news-card-severity-3 {\\n  color: white;\\n  font-size: 1.2em;\\n  background: #f39c12;\\n  padding: 3%;\\n  margin-bottom: 5%; }\\n\\n.image-card-severity-4 {\\n  margin-right: 5%; }\\n\\n.news-card-severity-4 {\\n  color: white;\\n  font-size: 1.2em;\\n  background: #e74c3c;\\n  padding: 3%;\\n  margin-bottom: 5%; }\\n\\n.input {\\n  height: 25px;\\n  width: 80%;\\n  margin: 3%;\\n  margin-right: 10%; }\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Quote } from '../../../shared/quote.interface';\nimport { QuoteService } from '../../../shared/quote.service';\n\n\n@Component({\n  selector: 'app-admin-quote',\n  templateUrl: './admin-quote.component.html',\n  styleUrls: ['./admin-quote.component.scss']\n})\nexport class AdminQuoteComponent implements OnInit {\n\n  @Input() quote: Quote;\n  @Output() quoteDeleted = new EventEmitter<Quote>();\n\n  editing = false;\n  editValueTitle = '';\n  editValueContent = '';\n  editValueSeverity = '';\n\n  constructor(private quoteService: QuoteService) { }\n\n  ngOnInit() {\n  }\n\n  onEdit() {\n    this.editing = true;\n    this.editValueTitle = this.quote.title;\n    this.editValueContent = this.quote.content;\n    this.editValueSeverity = this.quote.severity;\n  }\n\n  onUpdate() {\n    this.quoteService.updateQuote(this.quote.id, this.editValueTitle, this.editValueContent, this.editValueSeverity)\n    .subscribe(\n      (quote: Quote) => {\n        this.quote.title = this.editValueTitle;\n        this.quote.content = this.editValueContent;\n        this.quote.severity = this.editValueSeverity;\n        this.editValueTitle = '';\n        this.editValueContent = '';\n        this.editValueSeverity = '';\n      }\n    );\n    this.editing = false;\n  }\n\n  onDelete() {\n    this.quoteService.deleteQuote(this.quote.id)\n      .subscribe(\n        () => {\n          this.quoteDeleted.emit(this.quote);\n          console.log('Quote deleted');\n        }\n      );\n    }\n\n  onCancel() {\n    this.editValueTitle = '';\n    this.editValueContent = '';\n    this.editValueSeverity = '';\n    this.editing = false;\n  }\n\n\n}\n","module.exports = \"<button mat-button class=\\\"button\\\"  [routerLink]=\\\"['/admin-create']\\\" >Create</button>\\n\\n<app-admin-quote *ngFor=\\\"let quote of quotes\\\" [quote]=\\\"quote\\\" (quoteDeleted)=\\\"onDeleted($event)\\\"></app-admin-quote>\\n\"","module.exports = \"body {\\n  height: 100%; }\\n\\n.button {\\n  color: white;\\n  background-color: purple;\\n  margin-bottom: 20px; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Http, Response } from '@angular/http';\n\nimport { Quote } from '../../shared/quote.interface';\nimport { QuoteService } from '../../shared/quote.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  quotes: Quote[];\n\n  constructor(private quoteService: QuoteService) { }\n\n  ngOnInit() {\n    this.quoteService.getQuotes()\n      .subscribe(\n        (quotes: Quote[]) => this.quotes = quotes,\n        (error: Response) => console.log(error)\n       );\n  }\n\n}\n","module.exports = \"<div id=\\\"event-main\\\" >\\r\\n    <ng-container>\\r\\n        <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"zoom\\\"  [disableDefaultUI] =\\\"true\\\">\\r\\n            \\r\\n          <!-- Automatic locations -->\\r\\n          <agm-marker *ngFor=\\\"let yelp of yelp.businesses\\\" [latitude]=\\\"yelp.coordinates.latitude\\\" [longitude]=\\\"yelp.coordinates.longitude\\\">\\r\\n              <agm-info-window>\\r\\n                  <!-- <ng-container *ngFor=\\\"let yelp of yelp.businesses\\\"> -->\\r\\n                    <strong>\\r\\n                      <table>\\r\\n                        <tr>\\r\\n                            <th id=\\\"nameMiddle\\\">{{yelp.name}}</th>\\r\\n                          <th>\\r\\n                              <span *ngIf=\\\"yelp.is_closed == 'true'\\\" id=\\\"foot-status-closed\\\">Closed</span>\\r\\n                              <span *ngIf=\\\"yelp.is_closed == 'false'\\\" id=\\\"foot-status-open\\\">Open</span>\\r\\n                          </th>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <td id=\\\"star-img\\\">\\r\\n                              <span *ngIf=\\\"yelp.rating >= 1 && yelp.rating <= 1.5\\\">\\r\\n                                <img src=\\\"./assets/img/1star.png\\\">\\r\\n                              </span>\\r\\n                              <span *ngIf=\\\"yelp.rating >= 2 && yelp.rating <= 2.5\\\">\\r\\n                                <img src=\\\"./assets/img/2star.png\\\">\\r\\n                              </span>\\r\\n                              <span *ngIf=\\\"yelp.rating >= 3 && yelp.rating <= 3.5\\\">\\r\\n                                <img src=\\\"./assets/img/3star.png\\\">\\r\\n                              </span>\\r\\n                              <span *ngIf=\\\"yelp.rating >= 4 && yelp.rating <= 4.5\\\">\\r\\n                                <img src=\\\"./assets/img/4star.png\\\">\\r\\n                              </span>\\r\\n                              <span *ngIf=\\\"yelp.rating >= 5\\\">\\r\\n                                <img src=\\\"./assets/img/5star.png\\\">\\r\\n                              </span>\\r\\n                          </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{yelp.location.city}}</td>\\r\\n                          </tr>\\r\\n                          <tr>\\r\\n                            <td>{{yelp.location.address1}}</td>\\r\\n                          </tr>\\r\\n                          <tr>\\r\\n                            <td><a class=\\\"para\\\" href=\\\"tel:{{yelp.display_phone}}\\\">{{yelp.display_phone}}</a></td>\\r\\n                          </tr>\\r\\n                          <tr>\\r\\n                            <td><a href=\\\"{{yelp.url}}\\\">More Info</a></td>\\r\\n                          </tr>\\r\\n                      </table>\\r\\n                    </strong>\\r\\n                  <!-- </ng-container>   -->\\r\\n                  </agm-info-window>\\r\\n            </agm-marker>\\r\\n            \\r\\n            \\r\\n          <!-- Player picked location -->\\r\\n            <agm-marker [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\">\\r\\n              <agm-info-window>\\r\\n                <!-- <ng-container *ngFor=\\\"let yelp of yelp.businesses\\\"> -->\\r\\n                  <strong>\\r\\n                    <table>\\r\\n                      <tr>\\r\\n                          <th id=\\\"nameMiddle\\\">{{yelpName}}</th>\\r\\n                        <th>\\r\\n                            <span *ngIf=\\\"yelpClose == 'true'\\\" id=\\\"foot-status-closed\\\">Closed</span>\\r\\n                            <span *ngIf=\\\"yelpClose == 'false'\\\" id=\\\"foot-status-open\\\">Open</span>\\r\\n                        </th>\\r\\n                      </tr>\\r\\n                      <tr>\\r\\n                        <td id=\\\"star-img\\\">\\r\\n                            <span *ngIf=\\\"yelpRating >= 1 && yelpRating <= 1.5\\\">\\r\\n                              <img src=\\\"./assets/img/1star.png\\\">\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"yelpRating >= 2 && yelpRating <= 2.5\\\">\\r\\n                              <img src=\\\"./assets/img/2star.png\\\">\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"yelpRating >= 3 && yelpRating <= 3.5\\\">\\r\\n                              <img src=\\\"./assets/img/3star.png\\\">\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"yelpRating >= 4 && yelpRating <= 4.5\\\">\\r\\n                              <img src=\\\"./assets/img/4star.png\\\">\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"yelpRating >= 5\\\">\\r\\n                              <img src=\\\"./assets/img/5star.png\\\">\\r\\n                            </span>\\r\\n                        </td>\\r\\n                      </tr>\\r\\n                      <tr>\\r\\n                          <td>{{yelpCity}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <td>{{yelpAddress}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <td><a class=\\\"para\\\" href=\\\"tel:{{yelpNumber}}\\\">{{yelpNumber}}</a></td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <td><a href=\\\"{{YelpURL}}\\\">More Info</a></td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n                    \\r\\n                  </strong>\\r\\n                <!-- </ng-container>   -->\\r\\n                \\r\\n                </agm-info-window>\\r\\n          </agm-marker>\\r\\n        </agm-map>\\r\\n        </ng-container>\\r\\n        \\r\\n        \\r\\n        <div id=\\\"yelp-container-child\\\">\\r\\n            <ng-container *ngFor=\\\"let yelp of yelp.businesses\\\">\\r\\n          <mat-toolbar id=\\\"head-toolbar\\\">\\r\\n            \\r\\n            <div id=\\\"name\\\">\\r\\n              {{yelp.name}}\\r\\n            </div>\\r\\n            <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n            <button mat-button id=\\\"foot-button\\\" (click)=\\\"lat = (yelp.coordinates.latitude); lng = (yelp.coordinates.longitude); \\r\\n            yelpID     = [yelp.id]; \\r\\n            yelpName   = [yelp.name];\\r\\n            yelpClose  = [yelp.is_closed];\\r\\n            yelpRating = [yelp.rating];\\r\\n            yelpCity   = [yelp.location.city];\\r\\n            yelpAddress= [yelp.location.address1];\\r\\n            yelpNumber = [yelp.display_phone];\\r\\n            YelpURL    = [yelp.url];\\r\\n            \\\">Location</button>\\r\\n            \\r\\n           \\r\\n          </mat-toolbar>\\r\\n          <mat-divider></mat-divider>\\r\\n          </ng-container>\\r\\n                    </div>\\r\\n                   \\r\\n                   \\r\\n          <!-- <mat-toolbar id=\\\"foot-toolbar\\\" >\\r\\n             \\r\\n          \\r\\n          <!-- <span *ngIf=\\\"yelp.is_closed == true\\\" id=\\\"foot-status-closed\\\">Closed</span>\\r\\n          <span *ngIf=\\\"yelp.is_closed == false\\\" id=\\\"foot-status-open\\\">Open</span> -->\\r\\n        <!-- </mat-toolbar> -->\\r\\n       \\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \".example-fill-remaining-space {\\n  /* This fills the remaining space, by using flexbox. \\r\\n       Every toolbar row uses a flexbox row layout. */\\n  flex: 1 1 auto; }\\n\\n#head-toolbar img {\\n  width: 90%;\\n  height: 90%;\\n  vertical-align: middle;\\n  float: right; }\\n\\nagm-map {\\n  height: 250px; }\\n\\n#foot-button {\\n  font-size: 78%;\\n  background-color: #999999; }\\n\\n#yelp-container-child {\\n  margin: 2%;\\n  overflow-y: auto;\\n  height: 260px; }\\n\\n#event-main {\\n  margin-bottom: 17.5%; }\\n\\n#text-center {\\n  vertical-align: middle;\\n  margin-right: 20%; }\\n\\n#name {\\n  width: 60%;\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  font-size: 78%; }\\n\\n#nameMiddle {\\n  vertical-align: middle; }\\n\\n#star-img img {\\n  width: 115px;\\n  height: 20px; }\\n\\n#head-toolbar {\\n  background-color: #ffffff;\\n  margin-bottom: 2%;\\n  width: 100%; }\\n\\n#img-wrapper img {\\n  width: 50%;\\n  height: 50%;\\n  vertical-align: middle; }\\n\\n#foot-status-closed {\\n  color: red;\\n  font-size: 85%; }\\n\\n#foot-status-open {\\n  color: green;\\n  font-size: 85%; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { YelpService} from './event.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\ndeclare var Twitch: any;\r\n\r\n@Component({\r\n  selector: 'app-event',\r\n  templateUrl: './event.component.html',\r\n  styleUrls: ['./event.component.scss']\r\n})\r\nexport class EventComponent implements OnInit {\r\n  errorMessage: string;\r\n  yelp: any[] = [];\r\n\r\n  zoom = 17;\r\n  lat = 53.360258;\r\n  lng = -6.265690;\r\n\r\n  constructor(public _newsService: YelpService) { }\r\n\r\n  ngOnInit() {\r\n    this._newsService.getYelp()\r\n    .subscribe(yelp => {\r\n      this.yelp = yelp;\r\n    }, error => this.errorMessage = <any>error);\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/do';\r\n\r\n@Injectable()\r\nexport class YelpService {\r\n\r\n    public _yelpUrl = 'https://api.yelp.com/v3/businesses/search?location=Dublin,Ireland';\r\n    public _yelpBUrl = 'https://api.yelp.com/v3/businesses?locale=en_IE';\r\n    public _LiveBus = '';\r\n\r\n    constructor(public _http: HttpClient) { }\r\n\r\n    getYelp(): Observable<any[]> {\r\n        return this._http.get<any[]>(this._yelpUrl, {\r\n            headers: new HttpHeaders({\r\n                // tslint:disable-next-line:max-line-length\r\n                'Authorization': 'Bearer ga7R1k7BOp852yKSjuawnxv3kFAf2F9Tj7HYgUaJbIskAGUaNaYKIo1LHmnjSQWtCFgLeaPS_RX-vWmvgeLjH1xDrVBTUV97dslQlOrigInePWb8ukT3_5KgJR_OWnYx',\r\n                'Access-Control-Allow-Origin': '*'\r\n            })\r\n        })\r\n            .do(data => console.log('All: ' + JSON.stringify(data)))\r\n            .catch(this.handleError);\r\n    }\r\n    public handleError(err: HttpErrorResponse) {\r\n        console.log(err.message);\r\n        return Observable.throw(err.message);\r\n    }\r\n\r\n\r\n}\r\n","module.exports = \"<mat-nav-list >\\r\\n  <p>Info Coming Soon!</p>\\r\\n</mat-nav-list>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatBottomSheetRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-bottom-sheet-overview',\r\n  templateUrl: './bottom-sheet-overview.component.html',\r\n  styleUrls: ['./bottom-sheet-overview.component.scss']\r\n})\r\nexport class BottomSheetOverviewComponent implements OnInit {\r\n\r\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheetOverviewComponent>) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openLink(event: MouseEvent): void {\r\n    this.bottomSheetRef.dismiss();\r\n    event.preventDefault();\r\n  }\r\n\r\n}\r\n","module.exports = \"<div id=\\\"map\\\"></div>\\r\\n\\r\\n<div *ngIf=\\\"hole$ | async as hole\\\">\\r\\n    <div class=\\\"contain\\\">\\r\\n        <mat-card class=\\\"mat-elevation-z10\\\">\\r\\n          <div class=\\\"flex-item1\\\">\\r\\n              <p>Metres: {{metres}}</p>\\r\\n\\r\\n              <p>Yards: {{yards}}</p>\\r\\n\\r\\n              <p>Kilometres: {{kilometres}}</p>\\r\\n\\r\\n              <p>Miles: {{miles}}</p>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"flex-item2\\\">\\r\\n              <p>{{ hole.name }}</p>\\r\\n\\r\\n              <p>par {{ hole.par }}</p>\\r\\n\\r\\n              <p>Description {{hole.description}}</p>\\r\\n              <a href=\\\"https://vimeo.com/269921381\\\">Flyover</a>\\r\\n              <!-- <p> Flyover {{hole.flyover }}</p> -->\\r\\n          </div>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n<div>\\r\\n\\r\\n<button class=\\\"mat-button\\\" mat-button (click)=\\\"Back()\\\">Back</button>\\r\\n\"","module.exports = \"#map {\\n  margin-top: -15px;\\n  position: absolute;\\n  height: 50%;\\n  width: 100%;\\n  z-index: -1; }\\n\\n.mat-button {\\n  position: absolute;\\n  bottom: 10%;\\n  right: 5px;\\n  margin: 3%;\\n  background-color: #D8D8D8; }\\n\\n.contain {\\n  position: fixed;\\n  top: 50%;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column; }\\n\\n.flex-item1 {\\n  justify-content: space-between;\\n  text-align: center;\\n  width: 50%;\\n  float: left; }\\n\\n.flex-item2 {\\n  margin-left: 50%;\\n  justify-content: space-between;\\n  text-align: center; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { MontgomorieService, Hole } from '../services/montgomorie.service';\r\nimport { switchMap, map } from 'rxjs/operators';\r\nimport { ActivatedRoute, ParamMap, Router} from '@angular/router';\r\nimport { MapService } from '../services/map.service';\r\nimport { HaversineService } from '../services/haversine.service';\r\nimport { GeoCoord } from '../services/geo-coord';\r\n\r\ndeclare var L: any;\r\n\r\n@Component({\r\n  selector: 'app-geolocation-detail',\r\n  templateUrl: './geolocation-detail.component.html',\r\n  styleUrls: ['./geolocation-detail.component.scss']\r\n})\r\nexport class GeolocationDetailComponent implements OnInit {\r\n\r\n  hole$: Observable<Hole>;\r\n\r\n  hole;\r\n  hole1;\r\n  myLat: any;\r\n  myLng: any;\r\n  courseLat: any;\r\n  courseLng: any;\r\n  metres: any;\r\n  kilometres: any;\r\n  miles: any;\r\n  yards: any;\r\n  latId;\r\n  lngId;\r\n  id;\r\n\r\n\r\n  constructor(private _mont: MontgomorieService,\r\n              private _route: ActivatedRoute,\r\n              private _haversine: HaversineService,\r\n              private router: Router,\r\n              private _map: MapService) {}\r\n\r\n      ngOnInit() {\r\n        this.hole$ = this._route.paramMap.pipe(\r\n          switchMap((params: ParamMap) =>\r\n          this._mont.getHole(params.get('id')))\r\n        );\r\n\r\n         this._route.paramMap.\r\n         subscribe((params: ParamMap) =>\r\n         this._mont.showMap(+params.get('id'))\r\n        );\r\n\r\n        this.Haversine();\r\n\r\n      }\r\n\r\n      Back() {\r\n        this.router.navigate(['../geolocation']);\r\n      }\r\n\r\n      Haversine(): void {\r\n\r\n        const id = +this._route.snapshot.paramMap.get('id');\r\n\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition( x => {\r\n\r\n          this.myLat = x.coords.latitude;\r\n          this.myLng = x.coords.longitude;\r\n\r\n         this._mont.getHoleLat(id).subscribe(hole => this.courseLat = hole);\r\n         this._mont.getHoleLng(id).subscribe(hole => this.courseLng = hole);\r\n\r\n        console.log(`longitude: ${ this.courseLat } | latitude: ${ this.courseLng }`);\r\n        console.log(`longitude: ${ this.myLat } | latitude: ${ this.myLng }`);\r\n\r\n\r\n        const myCoords: GeoCoord = {\r\n          latitude: this.myLat,\r\n          longitude: this.myLng\r\n        };\r\n\r\n        const courseCoords: GeoCoord = {\r\n          latitude: this.courseLat,\r\n          longitude: this.courseLng\r\n        };\r\n\r\n        this.metres = this._haversine.getDistanceInMeters(myCoords, courseCoords);\r\n        this.yards = this._haversine.getDistanceInYards(myCoords, courseCoords);\r\n        this.kilometres = this._haversine.getDistanceInKilometers(myCoords, courseCoords);\r\n        this.miles = this._haversine.getDistanceInMiles(myCoords, courseCoords);\r\n\r\n        this.metres = this.metres.toFixed(2);\r\n        this.yards = this.yards.toFixed(2);\r\n        this.kilometres = this.kilometres.toFixed(2);\r\n        this.miles = this.miles.toFixed(2);\r\n     });\r\n    }\r\n  }\r\n}\r\n\r\n","module.exports = \"<app-sidenav></app-sidenav>\\r\\n\\r\\n    <p>\\r\\n      <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" class=\\\"mat-ham-button\\\">\\r\\n          <i class=\\\"material-icons\\\">bookmarks</i>\\r\\n      </button>\\r\\n    </p>\\r\\n\\r\\n    <mat-menu #menu=\\\"matMenu\\\">\\r\\n        <button mat-menu-item (click)=\\\"openBottomSheet()\\\">Dublin Bus Stops</button>\\r\\n        <button mat-menu-item>Carton House Info</button>\\r\\n    </mat-menu>\\r\\n\\r\\n<div id=\\\"map\\\"></div>\\r\\n\"","module.exports = \"#map {\\n  margin-top: -15px;\\n  position: absolute;\\n  height: 90%;\\n  width: 100%;\\n  z-index: -1; }\\n\\n.mat-ham-button {\\n  background-color: white;\\n  position: fixed;\\n  right: 12px;\\n  top: 12%; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { MaynoothMapService } from '../services/maynooth-map.service';\r\nimport { MatBottomSheet, MatBottomSheetRef } from '@angular/material';\r\nimport { BottomSheetOverviewComponent } from '../bottom-sheet/bottom-sheet-overview.component';\r\n\r\n@Component({\r\n  selector: 'app-geolocation-maynooth-detail',\r\n  templateUrl: './geolocation-maynooth-detail.component.html',\r\n  styleUrls: ['./geolocation-maynooth-detail.component.scss']\r\n})\r\nexport class GeolocationMaynoothDetailComponent implements OnInit {\r\n\r\n\r\n  constructor(private _route: ActivatedRoute,\r\n              private _maynooth: MaynoothMapService,\r\n              private bottomSheet: MatBottomSheet) { }\r\n\r\n  openBottomSheet(): void {\r\n    this.bottomSheet.open(BottomSheetOverviewComponent);\r\n    }\r\n\r\n  ngOnInit() {\r\n    this._route.paramMap.\r\n         subscribe((params: ParamMap) =>\r\n         this._maynooth.showMap(+params.get('id'))\r\n        );\r\n  }\r\n\r\n}\r\n\r\n","module.exports = \"<app-sidenav></app-sidenav>\\r\\n\\r\\n<div id=\\\"map\\\"></div>\\r\\n\"","module.exports = \"#map {\\n  margin-top: -15px;\\n  position: absolute;\\n  height: 90%;\\n  width: 100%;\\n  z-index: -1; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MontgomorieService } from './services/montgomorie.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MapService } from './services/map.service';\r\n\r\n@Component({\r\n  selector: 'app-geolocation',\r\n  templateUrl: './geolocation.component.html',\r\n  styleUrls: ['./geolocation.component.scss'],\r\n})\r\nexport class GeolocationComponent implements OnInit {\r\n\r\n  constructor(private _mont: MontgomorieService,\r\n              private _map: MapService,\r\n              private _route: ActivatedRoute) {}\r\n\r\n\r\n  ngOnInit() {\r\n    this._map.showMap(+this._route.snapshot.params['id']);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { GeoCoord } from './geo-coord';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HaversineService {\r\n\r\n  constructor() { }\r\n\r\n  private _earthRadiusInMeters = 6378137;\r\n  private _earthRadiusInYards = 6975174.98;\r\n  private _earthRadiusInKilometers = 6371;\r\n  private _earthRadiusInMiles = 3960;\r\n\r\n    private _toRadians(value: number): number {\r\n        return value * Math.PI / 180;\r\n    }\r\n\r\n    private _getDistance(coord1: GeoCoord, coord2: GeoCoord): number {\r\n        const φ1 = this._toRadians(coord1.latitude);\r\n        const φ2 = this._toRadians(coord2.latitude);\r\n        const Δφ = this._toRadians(coord2.latitude - coord1.latitude);\r\n        const Δλ = this._toRadians(coord2.longitude - coord1.longitude);\r\n        // a = sin²(Δφ / 2) + cos φ1 ⋅ cos φ2 ⋅ sin²(Δλ / 2)\r\n        const a = Math.pow(Math.sin(Δφ / 2), 2) +\r\n                Math.cos(φ1) *\r\n                Math.cos(φ2) *\r\n                Math.pow(Math.sin(Δλ / 2), 2);\r\n        // c = 2 ⋅ atan2(√a, √(1−a))\r\n        return 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    }\r\n\r\n    getDistanceInMeters(coord1: GeoCoord, coord2: GeoCoord): number {\r\n        const c = this._getDistance(coord1, coord2);\r\n        // d = R ⋅ c\r\n        return this._earthRadiusInMeters * c;\r\n    }\r\n\r\n    getDistanceInYards(coord1: GeoCoord, coord2: GeoCoord): number {\r\n      const c = this._getDistance(coord1, coord2);\r\n      // d = R ⋅ c\r\n      return this._earthRadiusInYards * c;\r\n    }\r\n\r\n    getDistanceInKilometers(coord1: GeoCoord, coord2: GeoCoord): number {\r\n        const c = this._getDistance(coord1, coord2);\r\n        // d = R ⋅ c\r\n        return this._earthRadiusInKilometers * c;\r\n    }\r\n\r\n    getDistanceInMiles(coord1: GeoCoord, coord2: GeoCoord): number {\r\n        const c = this._getDistance(coord1, coord2);\r\n        // d = R ⋅ c\r\n        return this._earthRadiusInMiles * c;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\ndeclare var L: any;\r\n\r\nexport class Hole {\r\n  constructor(public id: number, public lat: number, public lng: number) { }\r\n}\r\n\r\nconst HOLES = [\r\n  new Hole(1, 53.387792, -6.569634),\r\n  new Hole(2, 53.386737, -6.574668),\r\n  new Hole(3, 53.387792, -6.569634),\r\n  new Hole(4, 53.387792, -6.569634),\r\n  new Hole(5, 53.387792, -6.569634),\r\n  new Hole(6, 53.387792, -6.569634),\r\n  new Hole(7, 53.387792, -6.569634),\r\n  new Hole(8, 53.387792, -6.569634),\r\n  new Hole(9, 53.387792, -6.569634),\r\n  new Hole(10, 53.387792, -6.569634),\r\n  new Hole(11, 53.387792, -6.569634),\r\n  new Hole(12, 53.387792, -6.569634),\r\n  new Hole(13, 53.387792, -6.569634),\r\n  new Hole(14, 53.387792, -6.569634),\r\n  new Hole(15, 53.387792, -6.569634),\r\n  new Hole(16, 53.387792, -6.569634),\r\n  new Hole(17, 53.387792, -6.569634),\r\n  new Hole(18, 53.387792, -6.569634),\r\n];\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MapService {\r\n\r\n  constructor() { }\r\n\r\n  showMap(id: number) {\r\n // tslint:disable-next-line:no-shadowed-variable\r\n        let map;\r\n\r\n        map = L.map('map').setView([53.384973, -6.555245] , 14.6);\r\n\r\n        // tslint:disable-next-line:max-line-length\r\n        L.tileLayer('https://api.mapbox.com/styles/v1/cavinn/cjgqloyl000082roe1rz35om8/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiY2F2aW5uIiwiYSI6ImNqZW9nNjduejVrcTIyd21xMGhsYnB0bGwifQ.d1szzRngrK0u-qP_aiD64A', {\r\n          attribution: '',\r\n          maxZoom: 18\r\n        }).addTo(map);\r\n\r\n      }\r\n\r\n  getHoles() { return of(HOLES); }\r\n\r\n\r\n  getHole(id: number | string) {\r\n    return this.getHoles().pipe(\r\n      map(holes => holes.find(hole => hole.id === +id))\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\ndeclare var L: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MaynoothMapService {\r\n\r\n  constructor() { }\r\n\r\n  showMap(id: number) {\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n           let map;\r\n          // ../assets/img/map.svg\r\n           const myIcon =  L.divIcon('my-div-icon');\r\n           map = L.map('map').setView([53.381635, -6.590960] , 14.6);\r\n\r\n           // tslint:disable-next-line:max-line-length\r\n           L.tileLayer('https://api.mapbox.com/styles/v1/cavinn/cjjjwiuit35ru2smgwllle9um/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiY2F2aW5uIiwiYSI6ImNqZW9nNjduejVrcTIyd21xMGhsYnB0bGwifQ.d1szzRngrK0u-qP_aiD64A', {\r\n             attribution: '',\r\n             maxZoom: 18,\r\n           }).addTo(map);\r\n\r\n           L.marker([53.381635, -6.590960], myIcon).addTo(map);\r\n         }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\ndeclare var L: any;\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MontgomorieService {\r\n\r\n  getHoles() { return of(HOLES); }\r\n\r\n\r\n  getHole(id: number | string) {\r\n    return this.getHoles().pipe(\r\n      map(holes => holes.find(hole => hole.id === +id))\r\n      );\r\n  }\r\n\r\n  getHoleLat(id: number | string) {\r\n    return this.getHoles().pipe(\r\n      map(holes => holes.find(hole => hole.id === +id).lat)\r\n      );\r\n  }\r\n\r\n  getHoleLng(id: number | string) {\r\n    return this.getHoles().pipe(\r\n      map(holes => holes.find(hole => hole.id === +id).lng)\r\n      );\r\n  }\r\n\r\n  showMap(id: number) {\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    let map;\r\n    let coordsLng;\r\n    let coordsLat;\r\n\r\n    map = L.map('map').setView([53.384767, -6.564879] , 14);\r\n\r\n    // tslint:disable-next-line:max-line-length\r\n    L.tileLayer('https://api.mapbox.com/styles/v1/cavinn/cjgqloyl000082roe1rz35om8/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiY2F2aW5uIiwiYSI6ImNqZW9nNjduejVrcTIyd21xMGhsYnB0bGwifQ.d1szzRngrK0u-qP_aiD64A', {\r\n      attribution: '',\r\n      maxZoom: 16,\r\n    }).addTo(map);\r\n\r\n     coordsLng = HOLES.find(hole => hole.id === id).lng;\r\n     coordsLat = HOLES.find(hole => hole.id === id).lat;\r\n\r\n     map.fitBounds([\r\n       [coordsLat, coordsLng]\r\n     ]);\r\n  }\r\n}\r\n\r\nexport class Hole {\r\n  constructor(public id: number, public name: string, public lat: number, public lng: number) { }\r\n}\r\n\r\nconst HOLES = [\r\n  new Hole(1, 'Hole 1', 53.387792, -6.569634),\r\n  new Hole(2, 'Hole 2', 53.386737, -6.574668),\r\n  new Hole(3, 'Hole 3', 53.385048, -6.572094),\r\n  new Hole(4, 'Hole 4', 53.382720, -6.565754),\r\n  new Hole(5, 'Hole 5', 53.386264, -6.568703),\r\n  new Hole(6, 'Hole 6', 53.383838, -6.563968),\r\n  new Hole(7, 'Hole 7', 53.383164, -6.561684),\r\n  new Hole(8, 'Hole 8', 53.381575, -6.568951),\r\n  new Hole(9, 'Hole 9', 53.381030, -6.563088),\r\n  new Hole(10, 'Hole 10', 53.379296, -6.556906),\r\n  new Hole(11, 'Hole 11', 53.378104, -6.548422),\r\n  new Hole(12, 'Hole 12', 53.379468, -6.548469),\r\n  new Hole(13, 'Hole 13', 53.378950, -6.543071),\r\n  new Hole(14, 'Hole 14', 53.380214, -6.547637),\r\n  new Hole(15, 'Hole 15', 53.380593, -6.555184),\r\n  new Hole(16, 'Hole 16', 53.382494, -6.560319),\r\n  new Hole(17, 'Hole 17', 53.384131, -6.559146),\r\n  new Hole(18, 'Hole 18', 53.386657, -6.565981),\r\n];\r\n\r\n","module.exports = \"<div *ngIf=\\\"showIndicator\\\">Loading...</div>\\r\\n\\r\\n <mat-sidenav-container class=\\\"example-container\\\" (backdropClick)=\\\"close('backdrop')\\\">\\r\\n    <mat-sidenav #sidenav (keydown.escape)=\\\"close('escape')\\\" disableClose>\\r\\n      <mat-toolbar class=\\\"geo-heading\\\">\\r\\n            <h3>Geolocation</h3>\\r\\n      </mat-toolbar>\\r\\n\\r\\n      <div class=\\\"banner\\\"></div>\\r\\n\\r\\n      <mat-expansion-panel>\\r\\n          <mat-expansion-panel-header>\\r\\n            Montgomorie\\r\\n          </mat-expansion-panel-header>\\r\\n\\r\\n      <mat-list role=\\\"list\\\" *ngFor=\\\"let hole of hole$ | async\\\">\\r\\n        <mat-list-item role=\\\"listitem\\\" class=\\\"mat-side-list\\\">\\r\\n            <button mat-button [routerLink]=\\\"['/geolocation', hole.id]\\\"><span>Hole {{hole.id}}</span></button>\\r\\n        </mat-list-item>\\r\\n      </mat-list>\\r\\n    </mat-expansion-panel>\\r\\n\\r\\n    <mat-expansion-panel>\\r\\n        <mat-expansion-panel-header>\\r\\n          O'Meara\\r\\n        </mat-expansion-panel-header>\\r\\n\\r\\n    <mat-list role=\\\"list\\\" *ngFor=\\\"let hole of hole$ | async\\\">\\r\\n      <mat-list-item role=\\\"listitem\\\" class=\\\"mat-side-list\\\">\\r\\n          <button mat-button [routerLink]=\\\"['/geolocation', hole.id]\\\"><span>Hole {{hole.id}}</span></button>\\r\\n      </mat-list-item>\\r\\n    </mat-list>\\r\\n  </mat-expansion-panel>\\r\\n\\r\\n  <!-- geolocation-maynooth -->\\r\\n  <button class=\\\"mat-raised-button\\\" mat-raised-button [routerLink]=\\\"['/geolocation-maynooth']\\\"><span>Maynooth</span></button><br>\\r\\n\\r\\n  </mat-sidenav>\\r\\n</mat-sidenav-container>\\r\\n\\r\\n  <p>\\r\\n    <button mat-icon-button class=\\\"mat-ham-button\\\" (click)=\\\"sidenav.open()\\\">\\r\\n      <i class=\\\"material-icons\\\">menu</i>\\r\\n    </button>\\r\\n  </p>\\r\\n<!-- asdada -->\\r\\n\"","module.exports = \".example-container {\\n  position: static;\\n  width: 100%;\\n  min-width: 100%;\\n  height: 100%;\\n  min-height: 100%; }\\n\\n.mat-side-list {\\n  margin: 0; }\\n\\n.mat-ham-button {\\n  background-color: #d3d3d3;\\n  margin-right: 20px;\\n  float: right; }\\n\\n.mat-raised-button {\\n  width: 200px;\\n  height: 6%; }\\n\\n.banner {\\n  height: 50px;\\n  background-color: #5cd65c; }\\n\\n.geo-heading {\\n  background-color: #5cd65c;\\n  position: fixed;\\n  top: 0; }\\n\\n.right-bottom {\\n  position: absolute;\\n  left: 0;\\n  bottom: 60px; }\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { MatSidenav, MatBottomSheet } from '@angular/material';\r\nimport { Hole, MontgomorieService } from '../services/montgomorie.service';\r\nimport { ActivatedRoute, ParamMap, Router, Event, NavigationEnd, NavigationStart } from '@angular/router';\r\nimport { trigger, transition, style, animate, query, stagger } from '@angular/animations';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { MapService } from '../services/map.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.scss'],\r\n  animations: [\r\n  trigger('listAnimation', [\r\n    transition('* => *', [ // each time the binding value changes\r\n      query(':leave', [\r\n        stagger(100, [\r\n          animate('0.5s', style({ opacity: 0 }))\r\n        ])\r\n      ]),\r\n      query(':enter', [\r\n        style({ opacity: 0 }),\r\n        stagger(100, [\r\n          animate('0.5s', style({ opacity: 1 }))\r\n        ])\r\n      ])\r\n    ])\r\n  ])\r\n]\r\n})\r\nexport class SidenavComponent implements OnInit {\r\n\r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n\r\n  hole$: Observable<Hole[]>;\r\n\r\n  hole;\r\n  reason;\r\n  selectedId: number;\r\n  showIndicator = true;\r\n\r\n  constructor(private _mont: MontgomorieService,\r\n              private _map: MapService,\r\n              private _route: ActivatedRoute,\r\n              private route: Router\r\n              ) {\r\n            this.route.events.subscribe((routerEvent: Event) => {\r\n              if (routerEvent instanceof NavigationStart) {\r\n                this.showIndicator = true;\r\n              }\r\n\r\n            if (routerEvent instanceof NavigationEnd) {\r\n              this.showIndicator = false;\r\n            }\r\n         });\r\n        }\r\n        // get working!\r\n\r\n        close(reason: string) {\r\n          this.reason = reason;\r\n          this.sidenav.close();\r\n        }\r\n\r\n  ngOnInit() {\r\n    this.hole$ = this._route.paramMap.pipe(\r\n      switchMap((params: ParamMap) => {\r\n        this.selectedId = +params.get('id');\r\n        return this._mont.getHoles();\r\n      })\r\n    );\r\n\r\n    // this._route.paramMap.\r\n    // subscribe((params: ParamMap) =>\r\n    // this._mont.showMap(+params.get('id')));\r\n\r\n  }\r\n}\r\n","module.exports = \"<!-- <div id=\\\"headerImg\\\">\\r\\n  <img src=\\\"./assets/img/WATC.jpg\\\">\\r\\n</div> -->\\r\\n<div id=\\\"homepage-body\\\">\\r\\n  \\r\\n\\r\\n\\r\\n<div id=\\\"content\\\" *ngFor=\\\"let news of homeNews.update| slice:0:1; let i=index\\\">\\r\\n    <mat-accordion class=\\\"example-headers-align\\\">\\r\\n        <mat-expansion-panel [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\" hideToggle>\\r\\n              <mat-expansion-panel-header>\\r\\n               <mat-panel-description>\\r\\n                  {{homeNews.update[0].desc}}\\r\\n              <mat-icon id=\\\"newsSeverity{{homeNews.update[0].severity}}\\\">{{homeNews.update[0].type}}</mat-icon>\\r\\n            </mat-panel-description>\\r\\n            </mat-expansion-panel-header>\\r\\n            <mat-progress-bar class=\\\"my-color\\\" mode=\\\"determinate\\\" value=\\\"100\\\"></mat-progress-bar>\\r\\n                  <ul>\\r\\n                    <li>\\r\\n                      {{homeNews.update[1].timeStamp}}: {{homeNews.update[0].content}}\\r\\n                    </li>\\r\\n                </ul>\\r\\n              <mat-action-row>\\r\\n                <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n             </mat-action-row>\\r\\n          </mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n\\r\\n<mat-accordion class=\\\"example-headers-align\\\">\\r\\n<mat-expansion-panel [expanded]=\\\"step === 1\\\" (opened)=\\\"setStep(1)\\\" hideToggle>\\r\\n    <mat-expansion-panel-header>\\r\\n  <mat-panel-description>\\r\\n    {{homeNews.update[1].desc}}\\r\\n<mat-icon id=\\\"newsSeverity{{homeNews.update[1].severity}}\\\">{{homeNews.update[1].type}}</mat-icon>\\r\\n</mat-panel-description>\\r\\n  </mat-expansion-panel-header>\\r\\n  <mat-progress-bar class=\\\"mat-progress-green\\\" mode=\\\"determinate\\\" value=\\\"100\\\"></mat-progress-bar>\\r\\n    <ul>\\r\\n      <li>\\r\\n          {{homeNews.update[1].timeStamp}}: {{homeNews.update[1].content}}\\r\\n     </li>\\r\\n    </ul>\\r\\n  <mat-action-row>\\r\\n     <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n     <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\r\\n  </mat-action-row>\\r\\n</mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n\\r\\n<mat-accordion class=\\\"example-headers-align\\\">\\r\\n    <mat-expansion-panel [expanded]=\\\"step === 2\\\" (opened)=\\\"setStep(2)\\\" hideToggle>\\r\\n        <mat-expansion-panel-header>\\r\\n      <mat-panel-description>\\r\\n        {{homeNews.update[2].desc}}\\r\\n  <mat-icon id=\\\"newsSeverity{{homeNews.update[2].severity}}\\\">{{homeNews.update[2].type}}</mat-icon>\\r\\n    </mat-panel-description>\\r\\n      </mat-expansion-panel-header>\\r\\n      <mat-progress-bar mode=\\\"determinate\\\" value=\\\"100\\\"></mat-progress-bar>\\r\\n        <ul>\\r\\n          <li>\\r\\n              {{homeNews.update[2].timeStamp}}: {{homeNews.update[2].content}}\\r\\n         </li>\\r\\n        </ul>\\r\\n      <mat-action-row>\\r\\n         <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\r\\n         <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">End</button>\\r\\n      </mat-action-row>\\r\\n    </mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n\\r\\n</div>\\r\\n\\r\\n  \\r\\n  <div>\\r\\n    <ng-container *ngIf=\\\"!metric\\\">\\r\\n      <mat-accordion>\\r\\n        <mat-expansion-panel>\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n\\r\\n              <div class=\\\"weather_child\\\">\\r\\n                <div class=\\\"box\\\">\\r\\n                  <span>\\r\\n                    Current:\\r\\n                  </span>\\r\\n                  <ng-container id=\\\"ImgTemp\\\">\\r\\n                    <span>\\r\\n                      <img src=\\\"https://openweathermap.org/img/w/{{forecast.list[0].weather[0].icon}}.png\\\">\\r\\n                    </span>\\r\\n                    <span>\\r\\n                      {{forecast.list[0].main.temp | number:'1.0-0'}}&deg;C\\r\\n                    </span>\\r\\n                  </ng-container>\\r\\n                  <span>\\r\\n                  </span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-panel-title>\\r\\n          </mat-expansion-panel-header>\\r\\n          <button mat-button (click)=\\\"metric = !metric\\\">{{metric ? '&deg;C' : '&deg;F'}}</button>\\r\\n          <div id=\\\"\\\">\\r\\n            <!-- index 1 -->\\r\\n            <ng-container *ngFor=\\\"let loop of [1,2,3,4]\\\">\\r\\n              <div class=\\\"weather_child\\\">\\r\\n                <div class=\\\"box\\\">\\r\\n                  <span>\\r\\n                    {{(forecast.list[loop].dt_txt[11]) + (forecast.list[loop].dt_txt[12]) + (forecast.list[loop].dt_txt[13]) + (forecast.list[loop].dt_txt[14])\\r\\n                    + (forecast.list[loop].dt_txt[15])}} - {{(forecast.list[loop+1].dt_txt[11]) + (forecast.list[loop+1].dt_txt[12])\\r\\n                    + (forecast.list[loop+1].dt_txt[13]) + (forecast.list[loop+1].dt_txt[14]) + (forecast.list[loop+1].dt_txt[15])}}\\r\\n                  </span>\\r\\n                  <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n                  <span>\\r\\n                    <img src=\\\"https://openweathermap.org/img/w/{{forecast.list[loop].weather[0].icon}}.png\\\">\\r\\n                  </span>\\r\\n                  <span>\\r\\n                    {{forecast.list[loop].main.temp | number:'1.0-0'}}&deg;C\\r\\n                  </span>\\r\\n\\r\\n                  <!-- <ng-container id=\\\"compass\\\">\\r\\n                      <span *ngIf=\\\"forecast.list[loop].wind.deg >= 0 && forecast.list[loop].wind.deg <= 45\\\">\\r\\n\\r\\n                        <mat-icon>\\r\\n                          <img class=\\\"compass-img\\\" src=\\\"./assets/img/north.png\\\">\\r\\n                        </mat-icon>\\r\\n\\r\\n                      </span>\\r\\n                      <span *ngIf=\\\"forecast.list[loop].wind.deg > 45 && forecast.list[loop].wind.deg <= 135\\\">\\r\\n\\r\\n                        <mat-icon>\\r\\n                          <img class=\\\"compass-img\\\" src=\\\"./assets/img/east.png\\\">\\r\\n                        </mat-icon>\\r\\n\\r\\n                      </span>\\r\\n                      <span *ngIf=\\\"forecast.list[loop].wind.deg > 135 && forecast.list[loop].wind.deg <= 225\\\">\\r\\n\\r\\n                        <mat-icon>\\r\\n                          <img class=\\\"compass-img\\\" src=\\\"./assets/img/south.png\\\">\\r\\n                        </mat-icon>\\r\\n\\r\\n                      </span>\\r\\n                      <span *ngIf=\\\"forecast.list[loop].wind.deg > 225 && forecast.list[loop].wind.deg <= 315\\\">\\r\\n\\r\\n                        <mat-icon>\\r\\n                          <img class=\\\"compass-img\\\" src=\\\"./assets/img/west.png\\\">\\r\\n                        </mat-icon>\\r\\n\\r\\n                      </span>\\r\\n                      <span *ngIf=\\\"forecast.list[loop].wind.deg > 315 && forecast.list[loop].wind.deg <= 360\\\">\\r\\n\\r\\n                        <mat-icon>\\r\\n                          <img class=\\\"compass-img\\\" src=\\\"./assets/img/north.png\\\">\\r\\n                        </mat-icon>\\r\\n                      </span>\\r\\n                      <span *ngIf=\\\"forecast.list[loop].wind.deg == null\\\">\\r\\n                        Calm\\r\\n                      </span>\\r\\n                      </ng-container> -->\\r\\n                </div>\\r\\n              </div>\\r\\n              <mat-divider></mat-divider>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </mat-expansion-panel>\\r\\n      </mat-accordion>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div>\\r\\n    <ng-container *ngIf=\\\"metric\\\">\\r\\n      <mat-accordion>\\r\\n        <mat-expansion-panel>\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n\\r\\n              <div class=\\\"weather_child\\\">\\r\\n                <div class=\\\"box\\\">\\r\\n                  <span>\\r\\n                    Current:\\r\\n                  </span>\\r\\n                  <span>\\r\\n                    <img src=\\\"https://openweathermap.org/img/w/{{forecastFH.list[0].weather[0].icon}}.png\\\">\\r\\n                  </span>\\r\\n                  <span>\\r\\n                    {{forecastFH.list[0].main.temp | number:'1.0-0'}}&deg;F\\r\\n                  </span>\\r\\n                  <span>\\r\\n                  </span>\\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-panel-title>\\r\\n          </mat-expansion-panel-header>\\r\\n          <button mat-button (click)=\\\"metric = !metric\\\">{{metric ? '&deg;C' : '&deg;F'}}</button>\\r\\n          <div id=\\\"\\\">\\r\\n            <!-- index 1 -->\\r\\n            <ng-container *ngFor=\\\"let loop of [1,2,3,4]\\\">\\r\\n              <div class=\\\"weather_child\\\">\\r\\n                <div class=\\\"box\\\">\\r\\n                  <span>\\r\\n                    {{(forecastFH.list[loop].dt_txt[11]) + (forecastFH.list[loop].dt_txt[12]) + (forecastFH.list[loop].dt_txt[13]) + (forecastFH.list[loop].dt_txt[14])\\r\\n                    + (forecastFH.list[loop].dt_txt[15])}} - {{(forecastFH.list[loop+1].dt_txt[11]) + (forecastFH.list[loop+1].dt_txt[12])\\r\\n                    + (forecastFH.list[loop+1].dt_txt[13]) + (forecastFH.list[loop+1].dt_txt[14]) + (forecastFH.list[loop+1].dt_txt[15])}}\\r\\n                  </span>\\r\\n                  <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n                  <span>\\r\\n                    <img src=\\\"https://openweathermap.org/img/w/{{forecastFH.list[loop].weather[0].icon}}.png\\\">\\r\\n                  </span>\\r\\n                  <span>\\r\\n                    {{forecastFH.list[loop].main.temp | number:'1.0-0'}}&deg;F\\r\\n                  </span>\\r\\n\\r\\n                  <!-- <ng-container id=\\\"compass\\\">\\r\\n                  <span *ngIf=\\\"forecast.list[loop].wind.deg >= 0 && forecast.list[loop].wind.deg <= 45\\\">\\r\\n\\r\\n                    <mat-icon>\\r\\n                      <img class=\\\"compass-img\\\" src=\\\"./assets/img/north.png\\\">\\r\\n                    </mat-icon>\\r\\n                  </span>\\r\\n                  <span *ngIf=\\\"forecast.list[loop].wind.deg > 45 && forecast.list[loop].wind.deg <= 135\\\">\\r\\n\\r\\n                    <mat-icon>\\r\\n                      <img class=\\\"compass-img\\\" src=\\\"./assets/img/east.png\\\">\\r\\n                    </mat-icon>\\r\\n                  </span>\\r\\n                  <span *ngIf=\\\"forecast.list[loop].wind.deg > 135 && forecast.list[loop].wind.deg <= 225\\\">\\r\\n\\r\\n                    <mat-icon>\\r\\n                      <img class=\\\"compass-img\\\" src=\\\"./assets/img/south.png\\\">\\r\\n                    </mat-icon>\\r\\n                  </span>\\r\\n                  <span *ngIf=\\\"forecast.list[loop].wind.deg > 225 && forecast.list[loop].wind.deg <= 315\\\">\\r\\n                    <mat-icon>\\r\\n                      <img class=\\\"compass-img\\\" src=\\\"./assets/img/west.png\\\">\\r\\n                    </mat-icon>\\r\\n                  </span>\\r\\n                  <span *ngIf=\\\"forecast.list[loop].wind.deg > 315 && forecast.list[loop].wind.deg <= 360\\\">\\r\\n\\r\\n                    <mat-icon>\\r\\n                      <img class=\\\"compass-img\\\" src=\\\"./assets/img/north.png\\\">\\r\\n                    </mat-icon>\\r\\n                  </span>\\r\\n                  <span *ngIf=\\\"forecast.list[loop].wind.deg == null\\\">\\r\\n                    Calm\\r\\n                  </span>\\r\\n                  </ng-container> -->\\r\\n                </div>\\r\\n              </div>\\r\\n              <mat-divider></mat-divider>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </mat-expansion-panel>\\r\\n      </mat-accordion>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n\\r\\n\\r\\n     <app-instagram-feed></app-instagram-feed>\\r\\n<!--\\r\\n\\r\\n  <div id=\\\"newsUpdate\\\" *ngFor=\\\"let news of homeNews.update\\\">\\r\\n    <mat-expansion-panel id=\\\"newsUpdate\\\" *ngIf=\\\"news.homepage == 'true'\\\">\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n          <div class=\\\"box\\\">\\r\\n            <span id=\\\"newsTimeStamp\\\">{{news.timeStamp}}</span>\\r\\n            <span><mat-icon id=\\\"newsSeverity{{news.severity}}\\\">{{news.type}}</mat-icon></span>\\r\\n            <span id=\\\"newsDesc\\\">{{news.desc}}</span>\\r\\n          </div>\\r\\n        </mat-panel-title>\\r\\n      </mat-expansion-panel-header>\\r\\n      {{news.content}}\\r\\n    </mat-expansion-panel>\\r\\n  </div> -->\\r\\n</div>\\r\\n\"","module.exports = \"#homepage-body {\\n  margin-bottom: 20%;\\n  overflow: hidden; }\\n\\n.box {\\n  display: flex;\\n  align-items: center; }\\n\\n.box span {\\n  font-size: 100%; }\\n\\n#headerImg img {\\n  width: 100%;\\n  height: 100%;\\n  vertical-align: middle; }\\n\\nmat-progress-bar {\\n  background-color: #33ba3a; }\\n\\n.compass-img {\\n  width: 245%;\\n  height: 245%; }\\n\\n.wind-small {\\n  font-size: 70%; }\\n\\n.up {\\n  color: blue; }\\n\\n.down {\\n  color: red; }\\n\\n.flex-item {\\n  width: 100%;\\n  text-align: center;\\n  font-size: 150%;\\n  margin-top: 2%; }\\n\\n.flex-temp .small {\\n  font-size: 70%; }\\n\\n#wind {\\n  font-size: 80%;\\n  width: 70%;\\n  text-align: center; }\\n\\n#direction {\\n  float: right; }\\n\\n#forecast {\\n  vertical-align: middle;\\n  font-size: 50%; }\\n\\n#compass {\\n  float: right; }\\n\\n.weather_child {\\n  font-size: 110%; }\\n\\n.news-image-right {\\n  position: fixed;\\n  margin: 3%;\\n  overflow: hidden; }\\n\\n.news-content-aside {\\n  position: relative;\\n  left: 50px;\\n  margin: 5px; }\\n\\n.example-fill-remaining-space {\\n  /* This fills the remaining space, by using flexbox.\\r\\n       Every toolbar row uses a flexbox row layout. */\\n  flex: 1 1 auto; }\\n\\n.weather_card {\\n  margin-bottom: 3%; }\\n\\n#newsSeverity1 {\\n  color: red;\\n  padding-right: 15px; }\\n\\n#newsSeverity2 {\\n  color: orange;\\n  padding-right: 15px; }\\n\\n#newsSeverity3 {\\n  color: green;\\n  padding-right: 15px; }\\n\\n#newsDesc {\\n  width: 100%;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis; }\\n\\n#newsTimeStamp {\\n  padding-right: 15px; }\\n\\n#newsUpdate {\\n  margin: 1%;\\n  margin-top: 2%; }\\n\\n.mat-accordion {\\n  height: 10%; }\\n\\n.example-headers-align .mat-expansion-panel-header-title,\\n.example-headers-align .mat-expansion-panel-header-description {\\n  flex-basis: 0; }\\n\\n.example-headers-align .mat-expansion-panel-header-description {\\n  justify-content: space-between;\\n  align-items: center; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { WeatherService, HomeNewsService, InstagramFeedService} from './services/weather.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { trigger, state, transition, style, animate } from '@angular/animations';\r\n\r\ndeclare var Instafeed;\r\n\r\n@Component({\r\n  selector: 'app-homepage',\r\n  templateUrl: './homepage.component.html',\r\n  styleUrls: ['./homepage.component.scss'],\r\n  animations: [\r\n    trigger('fade', [\r\n      transition('void => *', [\r\n        style({opacity: 0}),\r\n        animate(2000, style({opacity: 1}))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\n\r\nexport class HomepageComponent implements OnInit {\r\n\r\n  private inputText: string;\r\n\r\n\r\n  errorMessage: string;\r\n  weather;\r\n  forecastFH;\r\n  forecast;\r\n  instaFeed;\r\n  homeNews = [];\r\n  forecast_repeat;\r\n  step = 0;\r\n\r\n  constructor(private _weatherService: WeatherService,\r\n              private _homeNewsService: HomeNewsService,\r\n              private _instagramFeed: InstagramFeedService) {\r\n                this.inputText = \"\";\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    this.InjectableService();\r\n\r\n  }\r\n\r\n  private addText(): void{\r\n    console.log(\"Saved Text\", this.inputText);\r\n    this.inputText = \"\";\r\n  }\r\n\r\n\r\n   onActivate(event) {\r\n\r\n   // preventDefault();\r\n\r\n   }\r\n\r\n\r\n   InjectableService() {\r\n\r\n    this._weatherService.getForecast()\r\n    .subscribe(forecast => {\r\n      this.forecast = forecast;\r\n    });\r\n\r\n      this._weatherService.getForecastFH()\r\n      .subscribe(forecastFH => {\r\n        this.forecastFH = forecastFH;\r\n\r\n      this._homeNewsService.getHomeNews()\r\n      .subscribe(homeNews => {\r\n        this.homeNews = homeNews;\r\n        });\r\n\r\n        \r\n      },\r\n      error => this.errorMessage = <any>error);\r\n   }\r\n\r\n   setStep(index: number) {\r\n    this.step = index;\r\n  }\r\n\r\n  nextStep() {\r\n    this.step++;\r\n  }\r\n\r\n  prevStep() {\r\n    this.step--;\r\n  }\r\n}\r\n","module.exports = \"<div id=\\\"instagram-feed\\\">\\r\\n  <div class=\\\"instafeed-container\\\">\\r\\n    <!-- ng if video-->\\r\\n      <video class=\\\"transparent-instafeed\\\" src={{link}} autoplay controls loop></video>\\r\\n    <!-- else image -->\\r\\n    <p class=\\\"para\\\">Caption</p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"instafeed-container\\\">\\r\\n    <img class=\\\"transparent-instafeed\\\" src=\\\"{{instaFeed.data[1].images.standard_resolution.url}}\\\">\\r\\n    <p class=\\\"para\\\">Caption</p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"instafeed-container\\\">\\r\\n    <img class=\\\"transparent-instafeed\\\" src=\\\"{{instaFeed.data[2].images.standard_resolution.url}}\\\">\\r\\n    <p class=\\\"para\\\">Caption</p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"instafeed-container\\\">\\r\\n    <img class=\\\"transparent-instafeed\\\" src=\\\"{{instaFeed.data[3].images.standard_resolution.url}}\\\">\\r\\n    <p class=\\\"para\\\">Caption</p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"instafeed-container\\\">\\r\\n    <img class=\\\"transparent-instafeed\\\" src=\\\"{{instaFeed.data[4].images.standard_resolution.url}}\\\">\\r\\n    <p class=\\\"para\\\">Caption</p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"instafeed-container\\\">\\r\\n    <img class=\\\"transparent-instafeed\\\" src=\\\"{{instaFeed.data[5].images.standard_resolution.url}}\\\">\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"#instagram-feed {\\n  display: flex;\\n  flex-direction: row;\\n  overflow-x: scroll;\\n  overflow-y: hidden;\\n  white-space: nowrap; }\\n\\n.instafeed-container {\\n  width: 100%; }\\n\\n.transparent-instafeed {\\n  height: 40vh;\\n  width: 90vw; }\\n\\n.para {\\n  color: white;\\n  position: relative;\\n  top: -17%;\\n  left: -90%; }\\n\\nimg {\\n  width: 90%; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { InstagramFeedService } from '../services/weather.service';\r\n\r\n@Component({\r\n  selector: 'app-instagram-feed',\r\n  templateUrl: './instagram-feed.component.html',\r\n  styleUrls: ['./instagram-feed.component.scss']\r\n})\r\nexport class InstagramFeedComponent implements OnInit {\r\n\r\n  instaFeed;\r\n  title = 'title';\r\n  // tslint:disable-next-line:max-line-length\r\n  link = 'https://scontent.cdninstagram.com/vp/9c0895b9ad69153a42bd0230f29ec056/5B515265/t50.2886-16/36945138_1068663479958683_2957417478189219840_n.mp4';\r\n\r\n  constructor(private _instagramFeed: InstagramFeedService) { }\r\n\r\n  ngOnInit() {\r\n    this._instagramFeed.getInstagramFeed()\r\n    .subscribe(instaFeed => {\r\n      this.instaFeed = instaFeed;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-list>\\n  <mat-list-item class=\\\"mat-item\\\">\\n\\n          \\n  <img src=\\\"./assets/img/ILGU.png\\\" class=\\\"mat-item-img\\\">\\n    \\n      <div class=\\\"mat-item-content\\\">\\n        <div class=\\\"mat-item-heading\\\">\\n          <h3>{{ quote.title }}</h3>\\n        </div>\\n                      \\n        <div class=\\\"mat-item-para\\\">\\n          {{ quote.content }}\\n        </div>\\n\\n      </div>\\n    </mat-list-item>\\n  </mat-list>\\n<mat-divider></mat-divider>\"","module.exports = \".news-content-wrapper {\\n  height: 400px;\\n  width: 100%;\\n  overflow-y: hidden; }\\n\\n.mat-item {\\n  height: 200px;\\n  padding: 5%; }\\n\\n.mat-item-img {\\n  height: 200%;\\n  width: 33%;\\n  margin-left: -50px; }\\n\\n.mat-item-content {\\n  margin-left: 30px; }\\n\\n.mat-item-para {\\n  height: 30%; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Quote } from '../../../shared/quote.interface';\n\n@Component({\n  selector: 'app-quote',\n  templateUrl: './quote.component.html',\n  styleUrls: ['./quote.component.scss']\n})\nexport class QuoteComponent implements OnInit {\n\n  @Input() quote: Quote;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<app-quote *ngFor=\\\"let quote of quotes | slice:0:2; let i=index\\\" [quote]=\\\"quote\\\"></app-quote>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Http, Response } from '@angular/http';\n\nimport { Quote } from '../../../shared/quote.interface';\nimport { QuoteService } from '../../../shared/quote.service';\n\n@Component({\n  selector: 'app-quotes',\n  templateUrl: './quotes.component.html',\n  styleUrls: ['./quotes.component.scss']\n})\nexport class QuotesComponent implements OnInit {\n\n\n  quotes: Quote[];\n\n  constructor(private quoteService: QuoteService) { }\n\n  ngOnInit() {\n    this.quoteService.getQuotes()\n      .subscribe(\n        (quotes: Quote[]) => this.quotes = quotes,\n        (error: Response) => console.log(error)\n       );\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/do';\r\n\r\n\r\n@Injectable()\r\nexport class WeatherService {\r\n\r\n   // tslint:disable-next-line:max-line-length\r\n   private _weatherForecastFH = 'http://api.openweathermap.org/data/2.5/forecast?lat=53.3909&lon=-6.5665&units=imperial&appid=6864244ceeeaa2b28fad8845b7113272';\r\n   // tslint:disable-next-line:max-line-length\r\n   private _weatherForecast = 'http://api.openweathermap.org/data/2.5/forecast?lat=53.3909&lon=-6.5665&units=metric&appid=6864244ceeeaa2b28fad8845b7113272';\r\n\r\n   constructor(private _http: HttpClient) {}\r\n\r\n   getForecast(): Observable<any[]> {\r\n    return this._http.get<any[]>(this._weatherForecast)\r\n    .do(data => console.log((data)))\r\n    .catch(this.handleError);\r\n   }\r\n\r\n   getForecastFH(): Observable<any[]> {\r\n    return this._http.get<any[]>(this._weatherForecastFH)\r\n    .do(data => console.log((data)))\r\n    .catch(this.handleError);\r\n   }\r\n\r\n       private handleError(err: HttpErrorResponse) {\r\n        console.log(err.message);\r\n        return Observable.throw(err.message);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class HomeNewsService {\r\n\r\n\r\n    private _homeNewsUrl = 'http://watc.bookgolf365.ie/news.json';\r\n\r\n    constructor(private _http: HttpClient) {}\r\n\r\n       getHomeNews(): Observable<any[]> {\r\n        return this._http.get<any[]>(this._homeNewsUrl)\r\n        .do(data =>  JSON.stringify(data))\r\n        .catch(this.handleError);\r\n       }\r\n\r\n       private handleError(err: HttpErrorResponse) {\r\n        console.log(err.message);\r\n        return Observable.throw(err.message);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class InstagramFeedService {\r\n\r\n   // tslint:disable-next-line:max-line-length\r\n   private _instagramFeedUrl = 'https://api.instagram.com/v1/users/self/media/recent/?access_token=8144523052.2216fb3.4cfe98c30fbb4c57a6049b5980ccb6fc';\r\n\r\n   constructor(private _http: HttpClient) {}\r\n\r\n   getInstagramFeed(): Observable<any[]> {\r\n     return this._http.get<any[]>(this._instagramFeedUrl)\r\n       .do(data => console.log('Insta: ' + JSON.stringify(data)))\r\n       .catch(this.handleError);\r\n      }\r\n\r\n      private handleError(err: HttpErrorResponse) {\r\n       console.log(err.message);\r\n       return Observable.throw(err.message);\r\n   }\r\n}\r\n\r\n\r\n// tslint:disable-next-line:max-line-length\r\n// https://gist.githubusercontent.com/PatrickBookGolf365/b124a8e610abd4e659b203b9b925f7fc/raw/f6ab4e4a342ecafd31e04756419b932db5d01705/news.json\r\n// http://news.bookgolf365.ie/news.json\r\n","module.exports = \"<div id=\\\"main\\\" *ngIf=\\\"hideall\\\">\\r\\n  <mat-toolbar id=\\\"team-header-toolbar\\\">\\r\\n    <span id=\\\"title\\\">\\r\\n      <span>\\r\\n        <button class=\\\"hide-btn\\\" (click)=\\\"hideall = !hideall\\\">\\r\\n          <mat-icon>arrow_back</mat-icon>\\r\\n        </button>\\r\\n      </span>\\r\\n      {{playerProfilesFirst}} {{playerProfilesLast}}\\r\\n      <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n      <button id=\\\"fav-button\\\" mat-button>\\r\\n        <!-- <mat-icon class=\\\"fav\\\">star</mat-icon> -->\\r\\n      </button>\\r\\n    </span>\\r\\n  </mat-toolbar>\\r\\n\\r\\n  <div id=\\\"team-header\\\">\\r\\n    <span>\\r\\n        <span>\\r\\n            <img id=\\\"team-image\\\" class=\\\"thumbnail-image\\\" src=\\\"http://watc.bookgolf365.ie/images/{{teamProfiles | lowercase}}.png\\\"\\r\\n            onError=\\\"this.src='./assets/img/team.jpg';\\\"  alt=\\\"...\\\" />\\r\\n        </span>\\r\\n    </span>\\r\\n    \\r\\n    <!-- <div *ngFor=\\\"let playerdata of playerdata.event.tournament.players.player\\\">\\r\\n        <div *ngFor=\\\"let coursedata of playerdata.event.tournament.courses.course\\\">\\r\\n            {{coursedata.no}}\\r\\n            {{coursedata.name}}\\r\\n            {{coursedata.shortname}}\\r\\n            </div>\\r\\n     <div *ngIf=\\\"playerdata.firstname == playerProfilesFirst && playerdata.lastname == playerProfilesLast\\\">\\r\\n      <span > {{playerdata.round[0].no}}</span>\\r\\n     \\r\\n    </div>\\r\\n    </div> -->\\r\\n    <!-- <mat-card id=\\\"score-Info\\\"> -->\\r\\n    <!-- <table> -->\\r\\n    <!-- <tr *ngFor=\\\"let teams of data.event.tournament.teams.team\\\">\\r\\n          \\r\\n          <ng-container *ngIf=\\\"teams.name == teamProfiles\\\"> -->\\r\\n    <!-- <tr>\\r\\n          <th>Thru</th>test\\r\\n          <th>Today</th>null\\r\\n          <th>Total</th>test\\r\\n          <th>Rank</th>test -->\\r\\n    <!-- </ng-container> -->\\r\\n    <!-- </tr>\\r\\n      </table>\\r\\n    </mat-card> -->\\r\\n    \\r\\n  </div>\\r\\n\\r\\n  <div *ngFor=\\\"let playerdata of playerdata.event.tournament.players.player; let i = index\\\">\\r\\n    <mat-expansion-panel id=\\\"player-expansion\\\" *ngIf=\\\"playerdata.firstname == playerProfilesFirst && playerdata.lastname == playerProfilesLast\\\">\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n          Round One\\r\\n          <br> Total Score: {{(playerdata.round[0].score[0].strokes * 1) + (playerdata.round[0].score[1].strokes * 1) + (playerdata.round[0].score[2].strokes\\r\\n          * 1) + (playerdata.round[0].score[3].strokes * 1) + (playerdata.round[0].score[4].strokes * 1) + (playerdata.round[0].score[5].strokes\\r\\n          * 1) + (playerdata.round[0].score[6].strokes * 1) + (playerdata.round[0].score[7].strokes * 1) + (playerdata.round[0].score[8].strokes\\r\\n          * 1) + (playerdata.round[0].score[9].strokes * 1) + (playerdata.round[0].score[10].strokes * 1) + (playerdata.round[0].score[11].strokes\\r\\n          * 1) + (playerdata.round[0].score[12].strokes * 1) + (playerdata.round[0].score[13].strokes * 1) + (playerdata.round[0].score[14].strokes\\r\\n          * 1) + (playerdata.round[0].score[15].strokes * 1) + (playerdata.round[0].score[16].strokes * 1) + (playerdata.round[0].score[17].strokes\\r\\n          * 1)}}\\r\\n\\r\\n        </mat-panel-title>\\r\\n      </mat-expansion-panel-header>\\r\\n      <div id=\\\"playerScore\\\">\\r\\n        <table class=\\\"holeByHole\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>1</th>\\r\\n              <th>2</th>\\r\\n              <th>3</th>\\r\\n              <th>4</th>\\r\\n              <th>5</th>\\r\\n              <th>6</th>\\r\\n              <th>7</th>\\r\\n              <th>8</th>\\r\\n              <th>9</th>\\r\\n              <th>Out</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n\\r\\n          <tbody>\\r\\n\\r\\n            <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n              <td class=\\\"holeBody\\\" *ngFor=\\\"let loop of [0,1,2,3,4,5,6,7,8]\\\">{{playerdata.round[0].score[loop].strokes}}\\r\\n                 \\r\\n                      <sup *ngIf=\\\"playerdata.round[0].course == 1\\\">I</sup>\\r\\n                      <sup *ngIf=\\\"playerdata.round[0].course == 2\\\">M</sup>\\r\\n                   \\r\\n              </td>\\r\\n              <td class=\\\"holeTotal\\\">{{(playerdata.round[0].score[0].strokes * 1) + (playerdata.round[0].score[1].strokes * 1) + (playerdata.round[0].score[2].strokes\\r\\n                * 1) + (playerdata.round[0].score[3].strokes * 1) + (playerdata.round[0].score[4].strokes * 1) + (playerdata.round[0].score[5].strokes\\r\\n                * 1) + (playerdata.round[0].score[6].strokes * 1) + (playerdata.round[0].score[7].strokes * 1) + (playerdata.round[0].score[8].strokes\\r\\n                * 1)}}</td>\\r\\n            </tr>\\r\\n            <br>\\r\\n            <tr>\\r\\n              <th>10</th>\\r\\n              <th>11</th>\\r\\n              <th>12</th>\\r\\n              <th>13</th>\\r\\n              <th>14</th>\\r\\n              <th>15</th>\\r\\n              <th>16</th>\\r\\n              <th>17</th>\\r\\n              <th>18</th>\\r\\n              <th>In</th>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n              <td class=\\\"holeBody\\\" *ngFor=\\\"let loop of [9,10,11,12,13,14,15,16,17]\\\">{{playerdata.round[0].score[loop].strokes}}\\r\\n                  <sup *ngIf=\\\"playerdata.round[0].course == 1\\\">I</sup>\\r\\n                  <sup *ngIf=\\\"playerdata.round[0].course == 2\\\">M</sup>\\r\\n              </td>\\r\\n              <td class=\\\"holeTotal\\\">{{(playerdata.round[0].score[9].strokes * 1) + (playerdata.round[0].score[10].strokes * 1) + (playerdata.round[0].score[11].strokes\\r\\n                * 1) + (playerdata.round[0].score[12].strokes * 1) + (playerdata.round[0].score[13].strokes * 1) + (playerdata.round[0].score[14].strokes\\r\\n                * 1) + (playerdata.round[0].score[15].strokes * 1) + (playerdata.round[0].score[16].strokes * 1) + (playerdata.round[0].score[17].strokes\\r\\n                * 1)}}</td>\\r\\n            </tr>\\r\\n\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </mat-expansion-panel>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div *ngFor=\\\"let playerdata of playerdata.event.tournament.players.player; let i = index\\\">\\r\\n    <mat-expansion-panel id=\\\"player-expansion\\\" *ngIf=\\\"playerdata.firstname == playerProfilesFirst && playerdata.lastname == playerProfilesLast\\\">\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n          Round Two\\r\\n          <br> Total Score: {{(playerdata.round[1].score[0].strokes * 1) + (playerdata.round[1].score[1].strokes * 1) + (playerdata.round[1].score[2].strokes\\r\\n          * 1) + (playerdata.round[1].score[3].strokes * 1) + (playerdata.round[1].score[4].strokes * 1) + (playerdata.round[1].score[5].strokes\\r\\n          * 1) + (playerdata.round[1].score[6].strokes * 1) + (playerdata.round[1].score[7].strokes * 1) + (playerdata.round[1].score[8].strokes\\r\\n          * 1) + (playerdata.round[1].score[9].strokes * 1) + (playerdata.round[1].score[10].strokes * 1) + (playerdata.round[1].score[11].strokes\\r\\n          * 1) + (playerdata.round[1].score[12].strokes * 1) + (playerdata.round[1].score[13].strokes * 1) + (playerdata.round[1].score[14].strokes\\r\\n          * 1) + (playerdata.round[1].score[15].strokes * 1) + (playerdata.round[1].score[16].strokes * 1) + (playerdata.round[1].score[17].strokes\\r\\n          * 1)}}\\r\\n        </mat-panel-title>\\r\\n      </mat-expansion-panel-header>\\r\\n      <div id=\\\"playerScore\\\">\\r\\n        <table class=\\\"holeByHole\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>1</th>\\r\\n              <th>2</th>\\r\\n              <th>3</th>\\r\\n              <th>4</th>\\r\\n              <th>5</th>\\r\\n              <th>6</th>\\r\\n              <th>7</th>\\r\\n              <th>8</th>\\r\\n              <th>9</th>\\r\\n              <th>Out</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n\\r\\n            <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n              <td class=\\\"holeBody\\\" *ngFor=\\\"let loop of [0,1,2,3,4,5,6,7,8]\\\">{{playerdata.round[1].score[loop].strokes}}\\r\\n                  <sup *ngIf=\\\"playerdata.round[1].course == 1\\\">I</sup>\\r\\n                  <sup *ngIf=\\\"playerdata.round[1].course == 2\\\">M</sup>\\r\\n              </td>\\r\\n              <td class=\\\"holeTotal\\\">{{(playerdata.round[1].score[0].strokes * 1) + (playerdata.round[1].score[1].strokes * 1) + (playerdata.round[1].score[2].strokes\\r\\n                * 1) + (playerdata.round[1].score[3].strokes * 1) + (playerdata.round[1].score[4].strokes * 1) + (playerdata.round[1].score[5].strokes\\r\\n                * 1) + (playerdata.round[1].score[6].strokes * 1) + (playerdata.round[1].score[7].strokes * 1) + (playerdata.round[1].score[8].strokes\\r\\n                * 1)}}</td>\\r\\n            </tr>\\r\\n            <br>\\r\\n            <tr>\\r\\n              <th>10</th>\\r\\n              <th>11</th>\\r\\n              <th>12</th>\\r\\n              <th>13</th>\\r\\n              <th>14</th>\\r\\n              <th>15</th>\\r\\n              <th>16</th>\\r\\n              <th>17</th>\\r\\n              <th>18</th>\\r\\n              <th>In</th>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n              <td class=\\\"holeBody\\\" *ngFor=\\\"let loop of [9,10,11,12,13,14,15,16,17]\\\">{{playerdata.round[1].score[loop].strokes}}\\r\\n                  <sup *ngIf=\\\"playerdata.round[1].course == 1\\\">I</sup>\\r\\n                  <sup *ngIf=\\\"playerdata.round[1].course == 2\\\">M</sup>\\r\\n              </td>\\r\\n              <td class=\\\"holeTotal\\\">{{(playerdata.round[1].score[9].strokes * 1) + (playerdata.round[1].score[10].strokes * 1) + (playerdata.round[1].score[11].strokes\\r\\n                * 1) + (playerdata.round[1].score[12].strokes * 1) + (playerdata.round[1].score[13].strokes * 1) + (playerdata.round[1].score[14].strokes\\r\\n                * 1) + (playerdata.round[1].score[15].strokes * 1) + (playerdata.round[1].score[16].strokes * 1) + (playerdata.round[1].score[17].strokes\\r\\n                * 1)}}</td>\\r\\n            </tr>\\r\\n\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </mat-expansion-panel>\\r\\n  </div>\\r\\n\\r\\n  <div *ngFor=\\\"let playerdata of playerdata.event.tournament.players.player; let i = index\\\">\\r\\n    <mat-expansion-panel id=\\\"player-expansion\\\" *ngIf=\\\"playerdata.firstname == playerProfilesFirst && playerdata.lastname == playerProfilesLast\\\">\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n          Round Three\\r\\n          <br> Total Score: {{(playerdata.round[2].score[0].strokes * 1) + (playerdata.round[2].score[1].strokes * 1) + (playerdata.round[2].score[2].strokes\\r\\n          * 1) + (playerdata.round[2].score[3].strokes * 1) + (playerdata.round[2].score[4].strokes * 1) + (playerdata.round[2].score[5].strokes\\r\\n          * 1) + (playerdata.round[2].score[6].strokes * 1) + (playerdata.round[2].score[7].strokes * 1) + (playerdata.round[2].score[8].strokes\\r\\n          * 1) + (playerdata.round[2].score[9].strokes * 1) + (playerdata.round[2].score[10].strokes * 1) + (playerdata.round[2].score[11].strokes\\r\\n          * 1) + (playerdata.round[2].score[12].strokes * 1) + (playerdata.round[2].score[13].strokes * 1) + (playerdata.round[2].score[14].strokes\\r\\n          * 1) + (playerdata.round[2].score[15].strokes * 1) + (playerdata.round[2].score[16].strokes * 1) + (playerdata.round[2].score[17].strokes\\r\\n          * 1)}}\\r\\n        </mat-panel-title>\\r\\n      </mat-expansion-panel-header>\\r\\n      <div id=\\\"playerScore\\\">\\r\\n        <table class=\\\"holeByHole\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>1</th>\\r\\n              <th>2</th>\\r\\n              <th>3</th>\\r\\n              <th>4</th>\\r\\n              <th>5</th>\\r\\n              <th>6</th>\\r\\n              <th>7</th>\\r\\n              <th>8</th>\\r\\n              <th>9</th>\\r\\n              <th>Out</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n              <td class=\\\"holeBody\\\" *ngFor=\\\"let loop of [0,1,2,3,4,5,6,7,8]\\\">{{playerdata.round[2].score[loop].strokes}}\\r\\n                  <sup *ngIf=\\\"playerdata.round[2].course == 1\\\">I</sup>\\r\\n                  <sup *ngIf=\\\"playerdata.round[2].course == 2\\\">M</sup>\\r\\n              </td>\\r\\n              <td class=\\\"holeTotal\\\">{{(playerdata.round[2].score[0].strokes * 1) + (playerdata.round[2].score[1].strokes * 1) + (playerdata.round[2].score[2].strokes\\r\\n                * 1) + (playerdata.round[2].score[3].strokes * 1) + (playerdata.round[2].score[4].strokes * 1) + (playerdata.round[2].score[5].strokes\\r\\n                * 1) + (playerdata.round[2].score[6].strokes * 1) + (playerdata.round[2].score[7].strokes * 1) + (playerdata.round[2].score[8].strokes\\r\\n                * 1)}}</td>\\r\\n            </tr>\\r\\n            <br>\\r\\n            <tr>\\r\\n              <th>10</th>\\r\\n              <th>11</th>\\r\\n              <th>12</th>\\r\\n              <th>13</th>\\r\\n              <th>14</th>\\r\\n              <th>15</th>\\r\\n              <th>16</th>\\r\\n              <th>17</th>\\r\\n              <th>18</th>\\r\\n              <th>In</th>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n              <td class=\\\"holeBody\\\" *ngFor=\\\"let loop of [9,10,11,12,13,14,15,16,17]\\\">{{playerdata.round[2].score[loop].strokes}}\\r\\n                  <sup *ngIf=\\\"playerdata.round[2].course == 1\\\">I</sup>\\r\\n                  <sup *ngIf=\\\"playerdata.round[2].course == 2\\\">M</sup>\\r\\n              </td>\\r\\n              <td class=\\\"holeTotal\\\">{{(playerdata.round[2].score[9].strokes * 1) + (playerdata.round[2].score[10].strokes * 1) + (playerdata.round[2].score[11].strokes\\r\\n                * 1) + (playerdata.round[2].score[12].strokes * 1) + (playerdata.round[2].score[13].strokes * 1) + (playerdata.round[2].score[14].strokes\\r\\n                * 1) + (playerdata.round[2].score[15].strokes * 1) + (playerdata.round[2].score[16].strokes * 1) + (playerdata.round[2].score[17].strokes\\r\\n                * 1)}}</td>\\r\\n            </tr>\\r\\n\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n    </mat-expansion-panel>\\r\\n  </div>\\r\\n  <div *ngFor=\\\"let playerdata of playerdata.event.tournament.players.player; let i = index\\\">\\r\\n    <mat-expansion-panel id=\\\"player-expansion\\\" *ngIf=\\\"playerdata.firstname == playerProfilesFirst && playerdata.lastname == playerProfilesLast\\\">\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n          Round Four\\r\\n          <br> Total Score: {{(playerdata.round[3].score[0].strokes * 1) + (playerdata.round[3].score[1].strokes * 1) + (playerdata.round[3].score[2].strokes\\r\\n          * 1) + (playerdata.round[3].score[3].strokes * 1) + (playerdata.round[3].score[4].strokes * 1) + (playerdata.round[3].score[5].strokes\\r\\n          * 1) + (playerdata.round[3].score[6].strokes * 1) + (playerdata.round[3].score[7].strokes * 1) + (playerdata.round[3].score[8].strokes\\r\\n          * 1) + (playerdata.round[3].score[9].strokes * 1) + (playerdata.round[3].score[10].strokes * 1) + (playerdata.round[3].score[11].strokes\\r\\n          * 1) + (playerdata.round[3].score[12].strokes * 1) + (playerdata.round[3].score[13].strokes * 1) + (playerdata.round[3].score[14].strokes\\r\\n          * 1) + (playerdata.round[3].score[15].strokes * 1) + (playerdata.round[3].score[16].strokes * 1) + (playerdata.round[3].score[17].strokes\\r\\n          * 1)}}\\r\\n        </mat-panel-title>\\r\\n      </mat-expansion-panel-header>\\r\\n      <div id=\\\"playerScore\\\">\\r\\n        <table class=\\\"holeByHole\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>1</th>\\r\\n              <th>2</th>\\r\\n              <th>3</th>\\r\\n              <th>4</th>\\r\\n              <th>5</th>\\r\\n              <th>6</th>\\r\\n              <th>7</th>\\r\\n              <th>8</th>\\r\\n              <th>9</th>\\r\\n              <th>Out</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n              <td class=\\\"holeBody\\\" *ngFor=\\\"let loop of [0,1,2,3,4,5,6,7,8]\\\">{{playerdata.round[3].score[loop].strokes}}\\r\\n                  <sup *ngIf=\\\"playerdata.round[3].course == 1\\\">I</sup>\\r\\n                  <sup *ngIf=\\\"playerdata.round[3].course == 2\\\">M</sup>\\r\\n              </td>\\r\\n              <td class=\\\"holeTotal\\\">{{(playerdata.round[3].score[0].strokes * 1) + (playerdata.round[3].score[1].strokes * 1) + (playerdata.round[3].score[2].strokes\\r\\n                * 1) + (playerdata.round[3].score[3].strokes * 1) + (playerdata.round[3].score[4].strokes * 1) + (playerdata.round[3].score[5].strokes\\r\\n                * 1) + (playerdata.round[3].score[6].strokes * 1) + (playerdata.round[3].score[7].strokes * 1) + (playerdata.round[3].score[8].strokes\\r\\n                * 1)}}</td>\\r\\n            </tr>\\r\\n            <br>\\r\\n            <tr>\\r\\n              <th>10</th>\\r\\n              <th>11</th>\\r\\n              <th>12</th>\\r\\n              <th>13</th>\\r\\n              <th>14</th>\\r\\n              <th>15</th>\\r\\n              <th>16</th>\\r\\n              <th>17</th>\\r\\n              <th>18</th>\\r\\n              <th>In</th>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n              <td class=\\\"holeBody\\\" *ngFor=\\\"let loop of [9,10,11,12,13,14,15,16,17]\\\">{{playerdata.round[3].score[loop].strokes}}\\r\\n                  <sup *ngIf=\\\"playerdata.round[3].course == 1\\\">I</sup>\\r\\n                  <sup *ngIf=\\\"playerdata.round[3].course == 2\\\">M</sup>\\r\\n              </td>\\r\\n              <td class=\\\"holeTotal\\\">{{(playerdata.round[3].score[9].strokes * 1) + (playerdata.round[3].score[10].strokes * 1) + (playerdata.round[3].score[11].strokes\\r\\n                * 1) + (playerdata.round[3].score[12].strokes * 1) + (playerdata.round[3].score[13].strokes * 1) + (playerdata.round[3].score[14].strokes\\r\\n                * 1) + (playerdata.round[3].score[15].strokes * 1) + (playerdata.round[3].score[16].strokes * 1) + (playerdata.round[3].score[17].strokes\\r\\n                * 1)}}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </mat-expansion-panel>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div >\\r\\n    \\r\\n    \\r\\n</div>\\r\\n<div id=\\\"live-main\\\" *ngIf=\\\"!hideall\\\">\\r\\n  <!-- <table matSort (matSortChange)=\\\"sortData($event)\\\">\\r\\n        <tr>\\r\\n         \\r\\n          <th mat-sort-header=\\\"position\\\">Pos</th>\\r\\n          <th>Name</th>\\r\\n        </tr>\\r\\n      \\r\\n        <tr *ngFor=\\\"let players of playerinfo.event.tournament.players.player; let i = index\\\">\\r\\n       {{i}}\\r\\n          \\r\\n        </tr>\\r\\n      </table> -->\\r\\n  <mat-toolbar id=\\\"live-search\\\">\\r\\n    <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n    <mat-form-field>\\r\\n      <input matInput placeholder=\\\"Search for Player\\\" #playerbox (keyup)=\\\"0\\\">\\r\\n    </mat-form-field>\\r\\n    <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n  </mat-toolbar>\\r\\n\\r\\n  <!-- Saved Players -->\\r\\n  <table id=\\\"live-table\\\">\\r\\n      <thead>\\r\\n        <tr id=\\\"live-table-header-title\\\">\\r\\n          <th></th>\\r\\n          <th>Pos</th>\\r\\n          <th>Player</th>\\r\\n          <th>Team</th>\\r\\n          <th>R1</th>\\r\\n          <th>R2</th>\\r\\n          <th>R3</th>\\r\\n          <th>R4</th>\\r\\n          <th>Total</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody id=\\\"player-tbody\\\" *ngFor=\\\"let todo of todoService.getTodos()\\\">\\r\\n        <ng-container *ngFor=\\\"let playerdata of playerdata.event.tournament.players.player; let i = index\\\"  >\\r\\n          \\r\\n              <tr id=\\\"player-tr\\\"  *ngIf=\\\"playerdata.firstname == todo.firstname && playerdata.lastname == todo.lastname\\\">\\r\\n                <td><mat-icon id=\\\"isFavourite\\\">star</mat-icon></td>\\r\\n                <td>{{playerdata.totals.position}}</td>\\r\\n                <td>{{playerdata.firstname}} {{playerdata.lastname}}</td>\\r\\n                <td><img id=\\\"favteamNameImage\\\"  src=\\\"http://watc.bookgolf365.ie/images/{{playerdata.teamname | lowercase}}.png\\\"\\r\\n                  onError=\\\"this.src='./assets/img/team.jpg';\\\"  alt=\\\"...\\\" />\\r\\n                </td>\\r\\n                <td>{{playerdata.round[0].strokes}}</td>\\r\\n                <td>{{playerdata.round[1].strokes}}</td>\\r\\n                <td>{{playerdata.round[2].strokes}}</td>\\r\\n                <td>{{playerdata.round[3].strokes}}</td>\\r\\n                <td id=\\\"total\\\">{{(playerdata.round[0].strokes * 1) + (playerdata.round[1].strokes * 1) + (playerdata.round[2].strokes * 1) + (playerdata.round[3].strokes\\r\\n                  * 1)}}</td>\\r\\n              </tr>\\r\\n              \\r\\n    \\r\\n        </ng-container> \\r\\n      </tbody>\\r\\n      </table>\\r\\n      <!--Saved Players -->\\r\\n     <br>\\r\\n      <mat-divider></mat-divider>\\r\\n      \\r\\n      <!-- Live Scrore -->\\r\\n  <table id=\\\"live-table\\\">\\r\\n    <thead>\\r\\n      <tr id=\\\"live-table-header-title\\\">\\r\\n        <th></th>\\r\\n        <th>Pos</th>\\r\\n        <th>Player</th>\\r\\n        <th>Team</th>\\r\\n        <th>R1</th>\\r\\n        <th>R2</th>\\r\\n        <th>R3</th>\\r\\n        <th>R4</th>\\r\\n        <th>Total</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    \\r\\n    <tbody id=\\\"player-tbody\\\" *ngFor=\\\"let playerdata of playerdata.event.tournament.players.player; let i = index\\\">\\r\\n      <ng-container *ngIf=\\\"playerdata.firstname == playerbox.value || playerdata.lastname == playerbox.value || playerbox.value == ''\\\">\\r\\n\\r\\n        <tr id=\\\"player-tr\\\" *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n\\r\\n          <td (click)=\\\"todoFirstname = (playerdata.firstname); todoLastname = (playerdata.lastname); addTodo()\\\"><mat-icon id=\\\"favourite\\\">star</mat-icon></td>\\r\\n          <td>{{playerdata.totals.position}}</td>\\r\\n          <td (click)=\\\"hideall = !hideall; teamProfiles = (playerdata.teamname); playerProfilesFirst = [playerdata.firstname]; playerProfilesLast = [playerdata.lastname]\\\">{{playerdata.firstname}} {{playerdata.lastname}}</td>\\r\\n          <td>\\r\\n\\r\\n              <img  id=\\\"teamNameImage\\\" class=\\\"thumbnail-image\\\" src=\\\"http://watc.bookgolf365.ie/images/{{playerdata.teamname | lowercase}}.png\\\"\\r\\n              onError=\\\"this.src='./assets/img/team.jpg';\\\"  alt=\\\"...\\\" />\\r\\n\\r\\n          </td>\\r\\n          <td>{{playerdata.round[0].strokes}}</td>\\r\\n          <td>{{playerdata.round[1].strokes}}</td>\\r\\n          <td>{{playerdata.round[2].strokes}}</td>\\r\\n          <td>{{playerdata.round[3].strokes}}</td>\\r\\n          <td id=\\\"total\\\">{{(playerdata.round[0].strokes * 1) + (playerdata.round[1].strokes * 1) + (playerdata.round[2].strokes * 1) + (playerdata.round[3].strokes\\r\\n            * 1)}}</td>\\r\\n        </tr>\\r\\n\\r\\n      </ng-container>\\r\\n    </tbody>\\r\\n\\r\\n  </table>\\r\\n  <!-- Live Score -->\\r\\n</div>\"","module.exports = \"#live-table {\\n  font-size: 75%;\\n  width: 100%;\\n  border-collapse: collapse; }\\n\\n#player-tbody:nth-child(even) {\\n  background-color: #adebad; }\\n\\n#player-expansion {\\n  margin: 2%; }\\n\\n.example-fill-remaining-space {\\n  /* This fills the remaining space, by using flexbox. \\r\\n       Every toolbar row uses a flexbox row layout. */\\n  flex: 1 1 auto; }\\n\\n.roundsPanel {\\n  width: 100%; }\\n\\n#teamNameImage {\\n  width: 28%; }\\n\\n#favteamNameImage {\\n  width: 20%; }\\n\\n#isFavourite {\\n  color: #DAA520; }\\n\\n.mat-button {\\n  min-width: 1%; }\\n\\n#live-search {\\n  width: 100%; }\\n\\n#live-search mat-form-field {\\n  width: 45%;\\n  font-size: 68%; }\\n\\n#live-table-header-title {\\n  height: 40px;\\n  text-align: center; }\\n\\n#live-main {\\n  margin-bottom: 31%; }\\n\\n#total_plus {\\n  color: blue; }\\n\\n#total {\\n  color: red; }\\n\\n#total_Even {\\n  color: red; }\\n\\n#player-tr:nth-child(even) {\\n  background: #56ab2f;\\n  /* fallback for old browsers */\\n  /* Chrome 10-25, Safari 5.1-6 */\\n  background: linear-gradient(to right, #a8e063, #56ab2f);\\n  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */ }\\n\\n#live-table td {\\n  text-align: center; }\\n\\n#main {\\n  margin-bottom: 30%; }\\n\\n#team-header-toolbar #title {\\n  width: 100%;\\n  font-size: 130%; }\\n\\n.hide-btn {\\n  min-width: 1%;\\n  background-color: Transparent;\\n  background-repeat: no-repeat;\\n  border: none;\\n  cursor: pointer;\\n  overflow: hidden;\\n  outline: none; }\\n\\n.fav {\\n  color: #cccc00; }\\n\\n#fav-button {\\n  min-width: 1%; }\\n\\n#team-header {\\n  text-align: center; }\\n\\n#team-image {\\n  width: 50%;\\n  height: 50%;\\n  margin: auto; }\\n\\n#score-Info table {\\n  width: 100%;\\n  text-align: center; }\\n\\n.scroll-main {\\n  height: 100%;\\n  margin-top: 3%;\\n  overflow: hidden; }\\n\\n.scroll-child {\\n  height: 250px;\\n  overflow-y: scroll; }\\n\\n.roundCard {\\n  margin: 2%; }\\n\\n.roundCard span {\\n  font-size: 75%; }\\n\\n#team-body {\\n  margin-bottom: 5%; }\\n\\n.holeHeader {\\n  text-align: center;\\n  border: 1px solid black; }\\n\\n.holeByHole {\\n  width: 100%;\\n  border-collapse: collapse; }\\n\\n.holeTotal {\\n  text-align: center;\\n  border: 1px solid black;\\n  color: red; }\\n\\n.holeBody {\\n  text-align: center;\\n  border: 1px solid black; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { LiveScoreService } from '../live-score.service';\r\nimport { TodoService} from '../../../services/todo.service';\r\nimport {Todo} from '../../../classes/todo';\r\n\r\n\r\n\r\n\r\nimport {Sort} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-live-player-score',\r\n  templateUrl: './live-player-score.component.html',\r\n  styleUrls: ['./live-player-score.component.scss']\r\n})\r\nexport class LivePlayerScoreComponent implements OnInit {\r\n\r\n  @Input()\r\n  private todo: Todo;\r\n\r\n  private todoFirstname: string;\r\n  private todoLastname: string;\r\n  errorMessage: string;\r\n  playerdata ;\r\n  data;\r\n \r\n\r\n  ngOnInit(){\r\n\r\n    this._liveScoreService.getRealJsonData()\r\n    .subscribe(playerdata => {\r\n      this.playerdata = playerdata;},\r\n    error => this.errorMessage=<any>error);\r\n      }\r\n  \r\n  \r\n\r\n   constructor(public _liveScoreService:LiveScoreService, private todoService:TodoService) {\r\n    this.todoFirstname = '';\r\n    this.todoLastname = '';\r\n    }\r\n\r\n    private addTodo(): void{\r\n      this.todoService.addTodo(this.todoFirstname, this.todoLastname);\r\n      \r\n      \r\n    }\r\n\r\n    private removeTodo(): void {\r\n      this.todoService.removeTodo(this.todo.id);\r\n    }\r\n\r\n\r\n \r\n}","module.exports = \"<div>\\r\\n  \\r\\n<mat-tab-group id=\\\"tab\\\">\\r\\n  <mat-tab label=\\\"Team Score\\\">\\r\\n    <app-live-team-score></app-live-team-score>\\r\\n  </mat-tab>\\r\\n  \\r\\n  <mat-tab label=\\\"Player Score\\\">\\r\\n    <app-live-player-score></app-live-player-score>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\\r\\n</div>\"","module.exports = \"#tab {\\n  width: 100%;\\n  height: 100%;\\n  position: fixed; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-live-score',\r\n  templateUrl: './live-score.component.html',\r\n  styleUrls: ['./live-score.component.scss']\r\n})\r\nexport class LiveScoreComponent implements OnInit {\r\n\r\n  public todoText: string;\r\n\r\n\r\n  constructor() {\r\n    this.todoText = '';\r\n   }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n}\r\n\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/observable/throw\";\r\nimport \"rxjs/add/operator/catch\";\r\nimport \"rxjs/add/operator/do\";\r\n\r\n@Injectable()\r\nexport class LiveScoreService {\r\n\r\n   \r\n    public _RealJsonData=\"http://scores.usga.org/2018/generic/stroke.json\"\r\n    constructor(public _http: HttpClient){}\r\n\r\n  \r\n       getRealJsonData(){\r\n        return this._http.get(this._RealJsonData)\r\n        .do(data =>  console.log(\"real data:\"+JSON.stringify(data)))\r\n        .catch(this.handleError);\r\n       \r\n    }   \r\n\r\n\r\n    \r\n\r\n public handleError(err: HttpErrorResponse){\r\n        console.log(err.message);\r\n        return Observable.throw(err.message);\r\n    }\r\n    \r\n\r\n}","module.exports = \"<div *ngIf=\\\"hideTeam\\\">\\r\\n  <mat-toolbar id=\\\"team-header-toolbar\\\">\\r\\n    <span id=\\\"title\\\">\\r\\n      <span>\\r\\n        <button class=\\\"hide-btn\\\" (click)=\\\"hideTeam = !hideTeam; hideScore = !hideScore\\\">\\r\\n          <mat-icon>arrow_back</mat-icon>\\r\\n        </button>\\r\\n      </span>\\r\\n      {{profiles}}\\r\\n      <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n      <button id=\\\"fav-button\\\" mat-button>\\r\\n        <mat-icon class=\\\"fav\\\">star</mat-icon>\\r\\n      </button>\\r\\n    </span>\\r\\n  </mat-toolbar>\\r\\n\\r\\n  <div id=\\\"team-header\\\">\\r\\n    \\r\\n        <span>\\r\\n            <img id=\\\"team-image\\\" class=\\\"thumbnail-image\\\" src=\\\"http://watc.bookgolf365.ie/images/{{profiles | lowercase}}.png\\\"\\r\\n            onError=\\\"this.src='./assets/img/team.jpg';\\\"  alt=\\\"...\\\" />\\r\\n        </span>\\r\\n    \\r\\n   \\r\\n    <!-- <mat-card id=\\\"score-Info\\\"> -->\\r\\n    <!-- <table> -->\\r\\n    <!-- <tr *ngFor=\\\"let teams of data.event.tournament.teams.team\\\">\\r\\n            \\r\\n            <ng-container *ngIf=\\\"teams.name == profiles\\\"> -->\\r\\n    <!-- <tr>\\r\\n          <th>Thru</th>test\\r\\n          <th>Today</th>null\\r\\n          <th>Total</th>test\\r\\n          <th>Rank</th>test -->\\r\\n    <!-- </ng-container> -->\\r\\n    <!-- </tr>\\r\\n      </table>\\r\\n    </mat-card> -->\\r\\n  </div>\\r\\n  <div class=\\\"scroll-main\\\">\\r\\n    <div class=\\\"scroll-child\\\">\\r\\n\\r\\n      <!-- Round one -->\\r\\n      \\r\\n      <mat-expansion-panel id=\\\"team-expansion\\\">\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>\\r\\n                <td>Round One</td>\\r\\n          </mat-panel-title>\\r\\n        </mat-expansion-panel-header>\\r\\n\\r\\n        <div id=\\\"staticTable\\\">\\r\\n          <table>\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Holes</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n              <ng-container *ngIf=\\\"playerdata.teamname == profiles\\\">\\r\\n                <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n                    <!-- (click)=\\\"hideTeam = !hideTeam; hidePlayer = !hidePlayer; teamProfiles = [playerdata.teamname]; playerProfilesFirst = [playerdata.firstname]; playerProfilesLast = [playerdata.lastname]\\\" -->\\r\\n                  <td>{{playerdata.firstname}} {{playerdata.lastname}}</td>\\r\\n                </tr>\\r\\n\\r\\n              </ng-container>\\r\\n            </tbody>\\r\\n\\r\\n          </table>\\r\\n        </div>\\r\\n        <div id=\\\"scrollingTable\\\">\\r\\n          <div class=\\\"scrollingCard\\\">\\r\\n            <table>\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>01</th>\\r\\n                  <th>02</th>\\r\\n                  <th>03</th>\\r\\n                  <th>04</th>\\r\\n                  <th>05</th>\\r\\n                  <th>06</th>\\r\\n                  <th>07</th>\\r\\n                  <th>08</th>\\r\\n                  <th>09</th>\\r\\n                  <th>Out</th>\\r\\n                  <th>10</th>\\r\\n                  <th>11</th>\\r\\n                  <th>12</th>\\r\\n                  <th>13</th>\\r\\n                  <th>14</th>\\r\\n                  <th>15</th>\\r\\n                  <th>16</th>\\r\\n                  <th>17</th>\\r\\n                  <th>18</th>\\r\\n                  <th>In</th>\\r\\n                  <th>Total</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n                <ng-container *ngIf=\\\"playerdata.teamname == profiles\\\">\\r\\n                  <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n                    <td *ngFor=\\\"let loop of [0,1,2,3,4,5,6,7,8]\\\">{{playerdata.round[0].score[loop].strokes}}</td>\\r\\n                    <td id=\\\"total\\\">{{(playerdata.round[0].score[0].strokes * 1) + (playerdata.round[0].score[1].strokes * 1) + (playerdata.round[0].score[2].strokes\\r\\n                      * 1) + (playerdata.round[0].score[3].strokes * 1) + (playerdata.round[0].score[4].strokes * 1) + (playerdata.round[0].score[5].strokes\\r\\n                      * 1) + (playerdata.round[0].score[6].strokes * 1) + (playerdata.round[0].score[7].strokes * 1) + (playerdata.round[0].score[8].strokes\\r\\n                      * 1)}}</td>\\r\\n                    <td *ngFor=\\\"let loop of [9,10,11,12,13,14,15,16,17]\\\">{{playerdata.round[0].score[loop].strokes}}</td>\\r\\n                    <td id=\\\"total\\\">{{(playerdata.round[0].score[9].strokes * 1) + (playerdata.round[0].score[10].strokes * 1) + (playerdata.round[0].score[11].strokes\\r\\n                      * 1) + (playerdata.round[0].score[12].strokes * 1) + (playerdata.round[0].score[13].strokes * 1) +\\r\\n                      (playerdata.round[0].score[14].strokes * 1) + (playerdata.round[0].score[15].strokes * 1) + (playerdata.round[0].score[17].strokes\\r\\n                      * 1) + (playerdata.round[0].score[17].strokes * 1)}}</td>\\r\\n                    <td id=\\\"total\\\">{{(playerdata.round[0].score[0].strokes * 1) + (playerdata.round[0].score[1].strokes * 1) + (playerdata.round[0].score[2].strokes\\r\\n                      * 1) + (playerdata.round[0].score[3].strokes * 1) + (playerdata.round[0].score[4].strokes * 1) + (playerdata.round[0].score[5].strokes\\r\\n                      * 1) + (playerdata.round[0].score[6].strokes * 1) + (playerdata.round[0].score[7].strokes * 1) + (playerdata.round[0].score[8].strokes\\r\\n                      * 1) + (playerdata.round[0].score[9].strokes * 1) + (playerdata.round[0].score[10].strokes * 1) + (playerdata.round[0].score[11].strokes\\r\\n                      * 1) + (playerdata.round[0].score[12].strokes * 1) + (playerdata.round[0].score[13].strokes * 1) +\\r\\n                      (playerdata.round[0].score[14].strokes * 1) + (playerdata.round[0].score[15].strokes * 1) + (playerdata.round[0].score[16].strokes\\r\\n                      * 1) + (playerdata.round[0].score[17].strokes * 1)}}</td>\\r\\n                  </tr>\\r\\n                </ng-container>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-expansion-panel>\\r\\n      <!-- </div> -->\\r\\n      <!-- </mat-card> -->\\r\\n\\r\\n      <!-- Round Two -->\\r\\n      <mat-expansion-panel id=\\\"team-expansion\\\">\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>\\r\\n             \\r\\n            Round Two\\r\\n          </mat-panel-title>\\r\\n        </mat-expansion-panel-header>\\r\\n        <div id=\\\"staticTable\\\">\\r\\n          <table>\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Holes</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n                <ng-container *ngIf=\\\"playerdata.teamname == profiles\\\">\\r\\n                  <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n                    <td>{{playerdata.firstname}} {{playerdata.lastname}}</td>\\r\\n                  </tr>\\r\\n  \\r\\n                </ng-container>\\r\\n              </tbody>\\r\\n\\r\\n          </table>\\r\\n        </div>\\r\\n        <div id=\\\"scrollingTable\\\">\\r\\n          <div class=\\\"scrollingCard\\\">\\r\\n            <table>\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>01</th>\\r\\n                  <th>02</th>\\r\\n                  <th>03</th>\\r\\n                  <th>04</th>\\r\\n                  <th>05</th>\\r\\n                  <th>06</th>\\r\\n                  <th>07</th>\\r\\n                  <th>08</th>\\r\\n                  <th>09</th>\\r\\n                  <th>Out</th>\\r\\n                  <th>10</th>\\r\\n                  <th>11</th>\\r\\n                  <th>12</th>\\r\\n                  <th>13</th>\\r\\n                  <th>14</th>\\r\\n                  <th>15</th>\\r\\n                  <th>16</th>\\r\\n                  <th>17</th>\\r\\n                  <th>18</th>\\r\\n                  <th>In</th>\\r\\n                  <th>Total</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n                <ng-container *ngIf=\\\"playerdata.teamname == profiles\\\">\\r\\n                  <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n                    <td *ngFor=\\\"let loop of [0,1,2,3,4,5,6,7,8]\\\">{{playerdata.round[1].score[loop].strokes}}</td>\\r\\n                    <td id=\\\"total\\\">{{(playerdata.round[1].score[0].strokes * 1) + (playerdata.round[1].score[1].strokes * 1) + (playerdata.round[1].score[2].strokes\\r\\n                      * 1) + (playerdata.round[1].score[3].strokes * 1) + (playerdata.round[1].score[4].strokes * 1) + (playerdata.round[1].score[5].strokes\\r\\n                      * 1) + (playerdata.round[1].score[6].strokes * 1) + (playerdata.round[1].score[7].strokes * 1) + (playerdata.round[1].score[8].strokes\\r\\n                      * 1)}}</td>\\r\\n                    <td *ngFor=\\\"let loop of [9,10,11,12,13,14,15,16,17]\\\">{{playerdata.round[1].score[loop].strokes}}</td>\\r\\n                    <td id=\\\"total\\\">{{(playerdata.round[1].score[9].strokes * 1) + (playerdata.round[1].score[10].strokes * 1) + (playerdata.round[1].score[11].strokes\\r\\n                      * 1) + (playerdata.round[1].score[12].strokes * 1) + (playerdata.round[1].score[13].strokes * 1) +\\r\\n                      (playerdata.round[1].score[14].strokes * 1) + (playerdata.round[1].score[15].strokes * 1) + (playerdata.round[1].score[17].strokes\\r\\n                      * 1) + (playerdata.round[1].score[17].strokes * 1)}}</td>\\r\\n                    <td id=\\\"total\\\">{{(playerdata.round[1].score[0].strokes * 1) + (playerdata.round[1].score[1].strokes * 1) + (playerdata.round[1].score[2].strokes\\r\\n                      * 1) + (playerdata.round[1].score[3].strokes * 1) + (playerdata.round[1].score[4].strokes * 1) + (playerdata.round[1].score[5].strokes\\r\\n                      * 1) + (playerdata.round[1].score[6].strokes * 1) + (playerdata.round[1].score[7].strokes * 1) + (playerdata.round[1].score[8].strokes\\r\\n                      * 1) + (playerdata.round[1].score[9].strokes * 1) + (playerdata.round[1].score[10].strokes * 1) + (playerdata.round[1].score[11].strokes\\r\\n                      * 1) + (playerdata.round[1].score[12].strokes * 1) + (playerdata.round[1].score[13].strokes * 1) +\\r\\n                      (playerdata.round[1].score[14].strokes * 1) + (playerdata.round[1].score[15].strokes * 1) + (playerdata.round[1].score[16].strokes\\r\\n                      * 1) + (playerdata.round[1].score[17].strokes * 1)}}</td>\\r\\n\\r\\n                  </tr>\\r\\n                </ng-container>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-expansion-panel>\\r\\n\\r\\n\\r\\n      <!-- Round three -->\\r\\n      <mat-expansion-panel id=\\\"team-expansion\\\">\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>\\r\\n              Round Three\\r\\n          </mat-panel-title>\\r\\n        </mat-expansion-panel-header>\\r\\n        <div id=\\\"staticTable\\\">\\r\\n          <table>\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Holes</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n                <ng-container *ngIf=\\\"playerdata.teamname == profiles\\\">\\r\\n                  <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n                    <td>{{playerdata.firstname}} {{playerdata.lastname}}</td>\\r\\n                  </tr>\\r\\n  \\r\\n                </ng-container>\\r\\n              </tbody>\\r\\n\\r\\n          </table>\\r\\n        </div>\\r\\n        <div id=\\\"scrollingTable\\\">\\r\\n          <div class=\\\"scrollingCard\\\">\\r\\n            <table>\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>01</th>\\r\\n                  <th>02</th>\\r\\n                  <th>03</th>\\r\\n                  <th>04</th>\\r\\n                  <th>05</th>\\r\\n                  <th>06</th>\\r\\n                  <th>07</th>\\r\\n                  <th>08</th>\\r\\n                  <th>09</th>\\r\\n                  <th>Out</th>\\r\\n                  <th>10</th>\\r\\n                  <th>11</th>\\r\\n                  <th>12</th>\\r\\n                  <th>13</th>\\r\\n                  <th>14</th>\\r\\n                  <th>15</th>\\r\\n                  <th>16</th>\\r\\n                  <th>17</th>\\r\\n                  <th>18</th>\\r\\n                  <th>In</th>\\r\\n                  <th>Total</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n                <ng-container *ngIf=\\\"playerdata.teamname == profiles\\\">\\r\\n                  <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n                    <td *ngFor=\\\"let loop of [0,1,2,3,4,5,6,7,8]\\\">{{playerdata.round[2].score[loop].strokes}}</td>\\r\\n                    <td id=\\\"total\\\">{{(playerdata.round[2].score[0].strokes * 1) + (playerdata.round[2].score[1].strokes * 1) + (playerdata.round[2].score[2].strokes\\r\\n                      * 1) + (playerdata.round[2].score[3].strokes * 1) + (playerdata.round[2].score[4].strokes * 1) + (playerdata.round[2].score[5].strokes\\r\\n                      * 1) + (playerdata.round[2].score[6].strokes * 1) + (playerdata.round[2].score[7].strokes * 1) + (playerdata.round[2].score[8].strokes\\r\\n                      * 1)}}</td>\\r\\n                    <td *ngFor=\\\"let loop of [9,10,11,12,13,14,15,16,17]\\\">{{playerdata.round[2].score[loop].strokes}}</td>\\r\\n                    <td id=\\\"total\\\">{{(playerdata.round[2].score[9].strokes * 1) + (playerdata.round[2].score[10].strokes * 1) + (playerdata.round[2].score[11].strokes\\r\\n                      * 1) + (playerdata.round[2].score[12].strokes * 1) + (playerdata.round[2].score[13].strokes * 1) +\\r\\n                      (playerdata.round[2].score[14].strokes * 1) + (playerdata.round[2].score[15].strokes * 1) + (playerdata.round[2].score[17].strokes\\r\\n                      * 1) + (playerdata.round[2].score[17].strokes * 1)}}</td>\\r\\n                    <td id=\\\"total\\\">{{(playerdata.round[2].score[0].strokes * 1) + (playerdata.round[2].score[1].strokes * 1) + (playerdata.round[2].score[2].strokes\\r\\n                      * 1) + (playerdata.round[2].score[3].strokes * 1) + (playerdata.round[2].score[4].strokes * 1) + (playerdata.round[2].score[5].strokes\\r\\n                      * 1) + (playerdata.round[2].score[6].strokes * 1) + (playerdata.round[2].score[7].strokes * 1) + (playerdata.round[2].score[8].strokes\\r\\n                      * 1) + (playerdata.round[2].score[9].strokes * 1) + (playerdata.round[2].score[10].strokes * 1) + (playerdata.round[2].score[11].strokes\\r\\n                      * 1) + (playerdata.round[2].score[12].strokes * 1) + (playerdata.round[2].score[13].strokes * 1) +\\r\\n                      (playerdata.round[2].score[14].strokes * 1) + (playerdata.round[2].score[15].strokes * 1) + (playerdata.round[2].score[16].strokes\\r\\n                      * 1) + (playerdata.round[2].score[17].strokes * 1)}}</td>\\r\\n\\r\\n                  </tr>\\r\\n                </ng-container>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-expansion-panel>\\r\\n\\r\\n      <!-- Round Four -->\\r\\n\\r\\n      <mat-expansion-panel id=\\\"team-expansion\\\">\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>\\r\\n              Round Four\\r\\n          </mat-panel-title>\\r\\n        </mat-expansion-panel-header>\\r\\n        <div id=\\\"staticTable\\\">\\r\\n          <table>\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>Holes</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n                <ng-container *ngIf=\\\"playerdata.teamname == profiles\\\">\\r\\n                  <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n                    <td>{{playerdata.firstname}} {{playerdata.lastname}}</td>\\r\\n                  </tr>\\r\\n  \\r\\n                </ng-container>\\r\\n              </tbody>\\r\\n\\r\\n          </table>\\r\\n        </div>\\r\\n        <div id=\\\"scrollingTable\\\">\\r\\n          <div class=\\\"scrollingCard\\\">\\r\\n            <table>\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>1</th>\\r\\n                  <th>2</th>\\r\\n                  <th>3</th>\\r\\n                  <th>4</th>\\r\\n                  <th>5</th>\\r\\n                  <th>6</th>\\r\\n                  <th>7</th>\\r\\n                  <th>8</th>\\r\\n                  <th>9</th>\\r\\n                  <th>Out</th>\\r\\n                  <th>10</th>\\r\\n                  <th>11</th>\\r\\n                  <th>12</th>\\r\\n                  <th>13</th>\\r\\n                  <th>14</th>\\r\\n                  <th>15</th>\\r\\n                  <th>16</th>\\r\\n                  <th>17</th>\\r\\n                  <th>18</th>\\r\\n                  <th>In</th>\\r\\n                  <th>Total</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n                <ng-container *ngIf=\\\"playerdata.teamname == profiles\\\">\\r\\n                  <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n                    <td *ngFor=\\\"let loop of [0,1,2,3,4,5,6,7,8]\\\">{{playerdata.round[3].score[loop].strokes}}</td>\\r\\n                    <td id=\\\"total\\\">{{(playerdata.round[3].score[0].strokes * 1) + (playerdata.round[3].score[1].strokes * 1) + (playerdata.round[3].score[2].strokes\\r\\n                      * 1) + (playerdata.round[3].score[3].strokes * 1) + (playerdata.round[3].score[4].strokes * 1) + (playerdata.round[3].score[5].strokes\\r\\n                      * 1) + (playerdata.round[3].score[6].strokes * 1) + (playerdata.round[3].score[7].strokes * 1) + (playerdata.round[3].score[8].strokes\\r\\n                      * 1)}}</td>\\r\\n                    <td *ngFor=\\\"let loop of [9,10,11,12,13,14,15,16,17]\\\">{{playerdata.round[3].score[loop].strokes}}</td>\\r\\n                    <td id=\\\"total\\\">{{(playerdata.round[3].score[9].strokes * 1) + (playerdata.round[3].score[10].strokes * 1) + (playerdata.round[3].score[11].strokes\\r\\n                      * 1) + (playerdata.round[3].score[12].strokes * 1) + (playerdata.round[3].score[13].strokes * 1) +\\r\\n                      (playerdata.round[3].score[14].strokes * 1) + (playerdata.round[3].score[15].strokes * 1) + (playerdata.round[3].score[17].strokes\\r\\n                      * 1) + (playerdata.round[3].score[17].strokes * 1)}}</td>\\r\\n                    <td id=\\\"total\\\">{{(playerdata.round[3].score[0].strokes * 1) + (playerdata.round[3].score[1].strokes * 1) + (playerdata.round[3].score[2].strokes\\r\\n                      * 1) + (playerdata.round[3].score[3].strokes * 1) + (playerdata.round[3].score[4].strokes * 1) + (playerdata.round[3].score[5].strokes\\r\\n                      * 1) + (playerdata.round[3].score[6].strokes * 1) + (playerdata.round[3].score[7].strokes * 1) + (playerdata.round[3].score[8].strokes\\r\\n                      * 1) + (playerdata.round[3].score[9].strokes * 1) + (playerdata.round[3].score[10].strokes * 1) + (playerdata.round[3].score[11].strokes\\r\\n                      * 1) + (playerdata.round[3].score[12].strokes * 1) + (playerdata.round[3].score[13].strokes * 1) +\\r\\n                      (playerdata.round[3].score[14].strokes * 1) + (playerdata.round[3].score[15].strokes * 1) + (playerdata.round[3].score[16].strokes\\r\\n                      * 1) + (playerdata.round[3].score[17].strokes * 1)}}</td>\\r\\n\\r\\n                  </tr>\\r\\n                </ng-container>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </mat-expansion-panel>\\r\\n\\r\\n  \\r\\n      <!-- <mat-expansion-panel id=\\\"team-expansion\\\" *ngFor=\\\"let roundLoop of [0,1,2,3]\\\">\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n                  <td>Round {{roundLoop + 1}}</td>\\r\\n            </mat-panel-title>\\r\\n          </mat-expansion-panel-header>\\r\\n  \\r\\n          <div id=\\\"staticTable\\\">\\r\\n            <table>\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>Holes</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n                <ng-container *ngIf=\\\"playerdata.teamname == profiles\\\">\\r\\n                  <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n                    <td (click)=\\\"hideTeam = !hideTeam; hidePlayer = !hidePlayer; teamProfiles = [playerdata.teamname]; playerProfilesFirst = [playerdata.firstname]; playerProfilesLast = [playerdata.lastname]\\\">{{playerdata.firstname}} {{playerdata.lastname}}</td>\\r\\n                  </tr>\\r\\n  \\r\\n                </ng-container>\\r\\n              </tbody>\\r\\n  \\r\\n            </table>\\r\\n          </div>\\r\\n          <div id=\\\"scrollingTable\\\">\\r\\n            <div class=\\\"scrollingCard\\\">\\r\\n              <table>\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>01</th>\\r\\n                    <th>02</th>\\r\\n                    <th>03</th>\\r\\n                    <th>04</th>\\r\\n                    <th>05</th>\\r\\n                    <th>06</th>\\r\\n                    <th>07</th>\\r\\n                    <th>08</th>\\r\\n                    <th>09</th>\\r\\n                    <th>Out</th>\\r\\n                    <th>10</th>\\r\\n                    <th>11</th>\\r\\n                    <th>12</th>\\r\\n                    <th>13</th>\\r\\n                    <th>14</th>\\r\\n                    <th>15</th>\\r\\n                    <th>16</th>\\r\\n                    <th>17</th>\\r\\n                    <th>18</th>\\r\\n                    <th>In</th>\\r\\n                    <th>Total</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n                  <ng-container *ngIf=\\\"playerdata.teamname == profiles\\\">\\r\\n                    <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n                      <td *ngFor=\\\"let loop of [0,1,2,3,4,5,6,7,8]\\\">{{playerdata.round[roundLoop].score[0].strokes}}</td>\\r\\n                      <td id=\\\"total\\\">{{(playerdata.round[roundLoop].score[0].strokes * 1) + (playerdata.round[roundLoop].score[1].strokes * 1) + (playerdata.round[roundLoop].score[2].strokes\\r\\n                        * 1) + (playerdata.round[roundLoop].score[3].strokes * 1) + (playerdata.round[roundLoop].score[4].strokes * 1) + (playerdata.round[roundLoop].score[5].strokes\\r\\n                        * 1) + (playerdata.round[roundLoop].score[6].strokes * 1) + (playerdata.round[roundLoop].score[7].strokes * 1) + (playerdata.round[roundLoop].score[8].strokes\\r\\n                        * 1)}}</td>\\r\\n                      <td *ngFor=\\\"let loop of [9,10,11,12,13,14,15,16,17]\\\">{{playerdata.round[roundLoop].score[loop].strokes}}</td>\\r\\n                      <td id=\\\"total\\\">{{(playerdata.round[roundLoop].score[9].strokes * 1) + (playerdata.round[roundLoop].score[10].strokes * 1) + (playerdata.round[roundLoop].score[11].strokes\\r\\n                        * 1) + (playerdata.round[roundLoop].score[12].strokes * 1) + (playerdata.round[roundLoop].score[13].strokes * 1) +\\r\\n                        (playerdata.round[roundLoop].score[14].strokes * 1) + (playerdata.round[roundLoop].score[15].strokes * 1) + (playerdata.round[roundLoop].score[17].strokes\\r\\n                        * 1) + (playerdata.round[roundLoop].score[17].strokes * 1)}}</td>\\r\\n                      <td id=\\\"total\\\">{{(playerdata.round[roundLoop].score[0].strokes * 1) + (playerdata.round[roundLoop].score[1].strokes * 1) + (playerdata.round[roundLoop].score[2].strokes\\r\\n                        * 1) + (playerdata.round[roundLoop].score[3].strokes * 1) + (playerdata.round[roundLoop].score[4].strokes * 1) + (playerdata.round[roundLoop].score[5].strokes\\r\\n                        * 1) + (playerdata.round[roundLoop].score[6].strokes * 1) + (playerdata.round[roundLoop].score[7].strokes * 1) + (playerdata.round[roundLoop].score[8].strokes\\r\\n                        * 1) + (playerdata.round[roundLoop].score[9].strokes * 1) + (playerdata.round[roundLoop].score[10].strokes * 1) + (playerdata.round[roundLoop].score[11].strokes\\r\\n                        * 1) + (playerdata.round[roundLoop].score[12].strokes * 1) + (playerdata.round[roundLoop].score[13].strokes * 1) +\\r\\n                        (playerdata.round[roundLoop].score[14].strokes * 1) + (playerdata.round[roundLoop].score[15].strokes * 1) + (playerdata.round[roundLoop].score[16].strokes\\r\\n                        * 1) + (playerdata.round[roundLoop].score[17].strokes * 1)}}</td>\\r\\n                    </tr>\\r\\n                  </ng-container>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-expansion-panel> -->\\r\\n\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div id=\\\"main\\\" *ngIf=\\\"hidePlayer\\\">\\r\\n  <mat-toolbar id=\\\"team-header-toolbar\\\">\\r\\n    <span id=\\\"title\\\">\\r\\n      <span>\\r\\n        <button class=\\\"hide-btn\\\" (click)=\\\"hidePlayer = !hidePlayer;  hideScore = !hideScore\\\">\\r\\n          <mat-icon>arrow_back</mat-icon>\\r\\n        </button>\\r\\n      </span>\\r\\n      {{playerProfilesFirst}} {{playerProfilesLast}} {{teamProfiles}}\\r\\n      <button id=\\\"fav-button\\\" mat-button>\\r\\n        <mat-icon class=\\\"fav\\\">star</mat-icon>\\r\\n      </button>\\r\\n    </span>\\r\\n  </mat-toolbar>\\r\\n\\r\\n  <div id=\\\"team-header\\\">\\r\\n    <span>\\r\\n        <img id=\\\"team-image\\\" class=\\\"thumbnail-image\\\" src=\\\"http://watc.bookgolf365.ie/images/{{teamProfiles | lowercase}}.png\\\"\\r\\n            onError=\\\"this.src='./assets/img/team.jpg';\\\"  alt=\\\"...\\\" />\\r\\n    \\r\\n    </span>\\r\\n    <!-- <mat-card id=\\\"score-Info\\\"> -->\\r\\n    <!-- <table> -->\\r\\n    <!-- <tr *ngFor=\\\"let teams of data.event.tournament.teams.team\\\">\\r\\n            \\r\\n            <ng-container *ngIf=\\\"teams.name == teamProfiles\\\"> -->\\r\\n    <!-- <tr>\\r\\n            <th>Thru</th>test\\r\\n            <th>Today</th>null\\r\\n            <th>Total</th>test\\r\\n            <th>Rank</th>test -->\\r\\n    <!-- </ng-container> -->\\r\\n    <!-- </tr>\\r\\n        </table>\\r\\n      </mat-card> -->\\r\\n  </div>\\r\\n\\r\\n  <div *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n    <mat-expansion-panel id=\\\"player-expansion\\\" *ngIf=\\\"playerdata.firstname == playerProfilesFirst && playerdata.lastname == playerProfilesLast\\\">\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n          Round One\\r\\n          <br> Total Score: {{(playerdata.round[0].score[0].strokes * 1) + (playerdata.round[0].score[1].strokes * 1) + (playerdata.round[0].score[2].strokes\\r\\n          * 1) + (playerdata.round[0].score[3].strokes * 1) + (playerdata.round[0].score[4].strokes * 1) + (playerdata.round[0].score[5].strokes\\r\\n          * 1) + (playerdata.round[0].score[6].strokes * 1) + (playerdata.round[0].score[7].strokes * 1) + (playerdata.round[0].score[8].strokes\\r\\n          * 1) + (playerdata.round[0].score[9].strokes * 1) + (playerdata.round[0].score[10].strokes * 1) + (playerdata.round[0].score[11].strokes\\r\\n          * 1) + (playerdata.round[0].score[12].strokes * 1) + (playerdata.round[0].score[13].strokes * 1) + (playerdata.round[0].score[14].strokes\\r\\n          * 1) + (playerdata.round[0].score[15].strokes * 1) + (playerdata.round[0].score[16].strokes * 1) + (playerdata.round[0].score[17].strokes\\r\\n          * 1)}}\\r\\n\\r\\n        </mat-panel-title>\\r\\n      </mat-expansion-panel-header>\\r\\n      <div id=\\\"playerScore\\\">\\r\\n        <table class=\\\"holeByHole\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>1</th>\\r\\n              <th>2</th>\\r\\n              <th>3</th>\\r\\n              <th>4</th>\\r\\n              <th>5</th>\\r\\n              <th>6</th>\\r\\n              <th>7</th>\\r\\n              <th>8</th>\\r\\n              <th>9</th>\\r\\n              <th>Out</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n\\r\\n          <tbody>\\r\\n\\r\\n            <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n              <td class=\\\"holeBody\\\" *ngFor=\\\"let loop of [0,1,2,3,4,5,6,7,8]\\\">{{playerdata.round[0].score[loop].strokes}}</td>\\r\\n              <td class=\\\"holeTotal\\\">{{(playerdata.round[0].score[0].strokes * 1) + (playerdata.round[0].score[1].strokes * 1) + (playerdata.round[0].score[2].strokes\\r\\n                * 1) + (playerdata.round[0].score[3].strokes * 1) + (playerdata.round[0].score[4].strokes * 1) + (playerdata.round[0].score[5].strokes\\r\\n                * 1) + (playerdata.round[0].score[6].strokes * 1) + (playerdata.round[0].score[7].strokes * 1) + (playerdata.round[0].score[8].strokes\\r\\n                * 1)}}</td>\\r\\n            </tr>\\r\\n            <br>\\r\\n            <tr>\\r\\n              <th>10</th>\\r\\n              <th>11</th>\\r\\n              <th>12</th>\\r\\n              <th>13</th>\\r\\n              <th>14</th>\\r\\n              <th>15</th>\\r\\n              <th>16</th>\\r\\n              <th>17</th>\\r\\n              <th>18</th>\\r\\n              <th>In</th>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n              <td class=\\\"holeBody\\\" *ngFor=\\\"let loop of [9,10,11,12,13,14,15,16,17]\\\">{{playerdata.round[0].score[loop].strokes}}\\r\\n                <sup>\\r\\n                  <sup>m</sup>\\r\\n                </sup>\\r\\n              </td>\\r\\n              <td class=\\\"holeTotal\\\">{{(playerdata.round[0].score[9].strokes * 1) + (playerdata.round[0].score[10].strokes * 1) + (playerdata.round[0].score[11].strokes\\r\\n                * 1) + (playerdata.round[0].score[12].strokes * 1) + (playerdata.round[0].score[13].strokes * 1) + (playerdata.round[0].score[14].strokes\\r\\n                * 1) + (playerdata.round[0].score[15].strokes * 1) + (playerdata.round[0].score[16].strokes * 1) + (playerdata.round[0].score[17].strokes\\r\\n                * 1)}}</td>\\r\\n            </tr>\\r\\n\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </mat-expansion-panel>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n    <mat-expansion-panel id=\\\"player-expansion\\\" *ngIf=\\\"playerdata.firstname == playerProfilesFirst && playerdata.lastname == playerProfilesLast\\\">\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n          Round Two\\r\\n          <br> Total Score: {{(playerdata.round[1].score[0].strokes * 1) + (playerdata.round[1].score[1].strokes * 1) + (playerdata.round[1].score[2].strokes\\r\\n          * 1) + (playerdata.round[1].score[3].strokes * 1) + (playerdata.round[1].score[4].strokes * 1) + (playerdata.round[1].score[5].strokes\\r\\n          * 1) + (playerdata.round[1].score[6].strokes * 1) + (playerdata.round[1].score[7].strokes * 1) + (playerdata.round[1].score[8].strokes\\r\\n          * 1) + (playerdata.round[1].score[9].strokes * 1) + (playerdata.round[1].score[10].strokes * 1) + (playerdata.round[1].score[11].strokes\\r\\n          * 1) + (playerdata.round[1].score[12].strokes * 1) + (playerdata.round[1].score[13].strokes * 1) + (playerdata.round[1].score[14].strokes\\r\\n          * 1) + (playerdata.round[1].score[15].strokes * 1) + (playerdata.round[1].score[16].strokes * 1) + (playerdata.round[1].score[17].strokes\\r\\n          * 1)}}\\r\\n        </mat-panel-title>\\r\\n      </mat-expansion-panel-header>\\r\\n      <div id=\\\"playerScore\\\">\\r\\n        <table class=\\\"holeByHole\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>1</th>\\r\\n              <th>2</th>\\r\\n              <th>3</th>\\r\\n              <th>4</th>\\r\\n              <th>5</th>\\r\\n              <th>6</th>\\r\\n              <th>7</th>\\r\\n              <th>8</th>\\r\\n              <th>9</th>\\r\\n              <th>Out</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n\\r\\n            <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n              <td class=\\\"holeBody\\\" *ngFor=\\\"let loop of [0,1,2,3,4,5,6,7,8]\\\">{{playerdata.round[1].score[loop].strokes}}</td>\\r\\n              <td class=\\\"holeTotal\\\">{{(playerdata.round[1].score[0].strokes * 1) + (playerdata.round[1].score[1].strokes * 1) + (playerdata.round[1].score[2].strokes\\r\\n                * 1) + (playerdata.round[1].score[3].strokes * 1) + (playerdata.round[1].score[4].strokes * 1) + (playerdata.round[1].score[5].strokes\\r\\n                * 1) + (playerdata.round[1].score[6].strokes * 1) + (playerdata.round[1].score[7].strokes * 1) + (playerdata.round[1].score[8].strokes\\r\\n                * 1)}}</td>\\r\\n            </tr>\\r\\n            <br>\\r\\n            <tr>\\r\\n              <th>10</th>\\r\\n              <th>11</th>\\r\\n              <th>12</th>\\r\\n              <th>13</th>\\r\\n              <th>14</th>\\r\\n              <th>15</th>\\r\\n              <th>16</th>\\r\\n              <th>17</th>\\r\\n              <th>18</th>\\r\\n              <th>In</th>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n              <td class=\\\"holeBody\\\" *ngFor=\\\"let loop of [9,10,11,12,13,14,15,16,17]\\\">{{playerdata.round[1].score[loop].strokes}}</td>\\r\\n              <td class=\\\"holeTotal\\\">{{(playerdata.round[1].score[9].strokes * 1) + (playerdata.round[1].score[10].strokes * 1) + (playerdata.round[1].score[11].strokes\\r\\n                * 1) + (playerdata.round[1].score[12].strokes * 1) + (playerdata.round[1].score[13].strokes * 1) + (playerdata.round[1].score[14].strokes\\r\\n                * 1) + (playerdata.round[1].score[15].strokes * 1) + (playerdata.round[1].score[16].strokes * 1) + (playerdata.round[1].score[17].strokes\\r\\n                * 1)}}</td>\\r\\n            </tr>\\r\\n\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </mat-expansion-panel>\\r\\n  </div>\\r\\n\\r\\n  <div *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n    <mat-expansion-panel id=\\\"player-expansion\\\" *ngIf=\\\"playerdata.firstname == playerProfilesFirst && playerdata.lastname == playerProfilesLast\\\">\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n          Round Three\\r\\n          <br> Total Score: {{(playerdata.round[2].score[0].strokes * 1) + (playerdata.round[2].score[1].strokes * 1) + (playerdata.round[2].score[2].strokes\\r\\n          * 1) + (playerdata.round[2].score[3].strokes * 1) + (playerdata.round[2].score[4].strokes * 1) + (playerdata.round[2].score[5].strokes\\r\\n          * 1) + (playerdata.round[2].score[6].strokes * 1) + (playerdata.round[2].score[7].strokes * 1) + (playerdata.round[2].score[8].strokes\\r\\n          * 1) + (playerdata.round[2].score[9].strokes * 1) + (playerdata.round[2].score[10].strokes * 1) + (playerdata.round[2].score[11].strokes\\r\\n          * 1) + (playerdata.round[2].score[12].strokes * 1) + (playerdata.round[2].score[13].strokes * 1) + (playerdata.round[2].score[14].strokes\\r\\n          * 1) + (playerdata.round[2].score[15].strokes * 1) + (playerdata.round[2].score[16].strokes * 1) + (playerdata.round[2].score[17].strokes\\r\\n          * 1)}}\\r\\n        </mat-panel-title>\\r\\n      </mat-expansion-panel-header>\\r\\n      <div id=\\\"playerScore\\\">\\r\\n        <table class=\\\"holeByHole\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>1</th>\\r\\n              <th>2</th>\\r\\n              <th>3</th>\\r\\n              <th>4</th>\\r\\n              <th>5</th>\\r\\n              <th>6</th>\\r\\n              <th>7</th>\\r\\n              <th>8</th>\\r\\n              <th>9</th>\\r\\n              <th>Out</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n              <td class=\\\"holeBody\\\" *ngFor=\\\"let loop of [0,1,2,3,4,5,6,7,8]\\\">{{playerdata.round[2].score[loop].strokes}}</td>\\r\\n              <td class=\\\"holeTotal\\\">{{(playerdata.round[2].score[0].strokes * 1) + (playerdata.round[2].score[1].strokes * 1) + (playerdata.round[2].score[2].strokes\\r\\n                * 1) + (playerdata.round[2].score[3].strokes * 1) + (playerdata.round[2].score[4].strokes * 1) + (playerdata.round[2].score[5].strokes\\r\\n                * 1) + (playerdata.round[2].score[6].strokes * 1) + (playerdata.round[2].score[7].strokes * 1) + (playerdata.round[2].score[8].strokes\\r\\n                * 1)}}</td>\\r\\n            </tr>\\r\\n            <br>\\r\\n            <tr>\\r\\n              <th>10</th>\\r\\n              <th>11</th>\\r\\n              <th>12</th>\\r\\n              <th>13</th>\\r\\n              <th>14</th>\\r\\n              <th>15</th>\\r\\n              <th>16</th>\\r\\n              <th>17</th>\\r\\n              <th>18</th>\\r\\n              <th>In</th>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n              <td class=\\\"holeBody\\\" *ngFor=\\\"let loop of [9,10,11,12,13,14,15,16,17]\\\">{{playerdata.round[2].score[loop].strokes}}</td>\\r\\n              <td class=\\\"holeTotal\\\">{{(playerdata.round[2].score[9].strokes * 1) + (playerdata.round[2].score[10].strokes * 1) + (playerdata.round[2].score[11].strokes\\r\\n                * 1) + (playerdata.round[2].score[12].strokes * 1) + (playerdata.round[2].score[13].strokes * 1) + (playerdata.round[2].score[14].strokes\\r\\n                * 1) + (playerdata.round[2].score[15].strokes * 1) + (playerdata.round[2].score[16].strokes * 1) + (playerdata.round[2].score[17].strokes\\r\\n                * 1)}}</td>\\r\\n            </tr>\\r\\n\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n    </mat-expansion-panel>\\r\\n  </div>\\r\\n  <div *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n    <mat-expansion-panel id=\\\"player-expansion\\\" *ngIf=\\\"playerdata.firstname == playerProfilesFirst && playerdata.lastname == playerProfilesLast\\\">\\r\\n      <mat-expansion-panel-header>\\r\\n        <mat-panel-title>\\r\\n          Round Four\\r\\n          <br> Total Score: {{(playerdata.round[3].score[0].strokes * 1) + (playerdata.round[3].score[1].strokes * 1) + (playerdata.round[3].score[2].strokes\\r\\n          * 1) + (playerdata.round[3].score[3].strokes * 1) + (playerdata.round[3].score[4].strokes * 1) + (playerdata.round[3].score[5].strokes\\r\\n          * 1) + (playerdata.round[3].score[6].strokes * 1) + (playerdata.round[3].score[7].strokes * 1) + (playerdata.round[3].score[8].strokes\\r\\n          * 1) + (playerdata.round[3].score[9].strokes * 1) + (playerdata.round[3].score[10].strokes * 1) + (playerdata.round[3].score[11].strokes\\r\\n          * 1) + (playerdata.round[3].score[12].strokes * 1) + (playerdata.round[3].score[13].strokes * 1) + (playerdata.round[3].score[14].strokes\\r\\n          * 1) + (playerdata.round[3].score[15].strokes * 1) + (playerdata.round[3].score[16].strokes * 1) + (playerdata.round[3].score[17].strokes\\r\\n          * 1)}}\\r\\n        </mat-panel-title>\\r\\n      </mat-expansion-panel-header>\\r\\n      <div id=\\\"playerScore\\\">\\r\\n        <table class=\\\"holeByHole\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>1</th>\\r\\n              <th>2</th>\\r\\n              <th>3</th>\\r\\n              <th>4</th>\\r\\n              <th>5</th>\\r\\n              <th>6</th>\\r\\n              <th>7</th>\\r\\n              <th>8</th>\\r\\n              <th>9</th>\\r\\n              <th>Out</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n              <td class=\\\"holeBody\\\" *ngFor=\\\"let loop of [0,1,2,3,4,5,6,7,8]\\\">{{playerdata.round[3].score[loop].strokes}}</td>\\r\\n              <td class=\\\"holeTotal\\\">{{(playerdata.round[3].score[0].strokes * 1) + (playerdata.round[3].score[1].strokes * 1) + (playerdata.round[3].score[2].strokes\\r\\n                * 1) + (playerdata.round[3].score[3].strokes * 1) + (playerdata.round[3].score[4].strokes * 1) + (playerdata.round[3].score[5].strokes\\r\\n                * 1) + (playerdata.round[3].score[6].strokes * 1) + (playerdata.round[3].score[7].strokes * 1) + (playerdata.round[3].score[8].strokes\\r\\n                * 1)}}</td>\\r\\n            </tr>\\r\\n            <br>\\r\\n            <tr>\\r\\n              <th>10</th>\\r\\n              <th>11</th>\\r\\n              <th>12</th>\\r\\n              <th>13</th>\\r\\n              <th>14</th>\\r\\n              <th>15</th>\\r\\n              <th>16</th>\\r\\n              <th>17</th>\\r\\n              <th>18</th>\\r\\n              <th>In</th>\\r\\n            </tr>\\r\\n            <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n              <td class=\\\"holeBody\\\" *ngFor=\\\"let loop of [9,10,11,12,13,14,15,16,17]\\\">{{playerdata.round[3].score[loop].strokes}}</td>\\r\\n              <td class=\\\"holeTotal\\\">{{(playerdata.round[3].score[9].strokes * 1) + (playerdata.round[3].score[10].strokes * 1) + (playerdata.round[3].score[11].strokes\\r\\n                * 1) + (playerdata.round[3].score[12].strokes * 1) + (playerdata.round[3].score[13].strokes * 1) + (playerdata.round[3].score[14].strokes\\r\\n                * 1) + (playerdata.round[3].score[15].strokes * 1) + (playerdata.round[3].score[16].strokes * 1) + (playerdata.round[3].score[17].strokes\\r\\n                * 1)}}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </mat-expansion-panel>\\r\\n  </div>\\r\\n</div>\\r\\n<div id=\\\"live-main\\\" *ngIf=\\\"!hideScore\\\">\\r\\n  <!-- <table matSort (matSortChange)=\\\"sortData($event)\\\">\\r\\n        <tr>\\r\\n         \\r\\n          <th mat-sort-header=\\\"position\\\">Pos</th>\\r\\n          <th>Name</th>\\r\\n        </tr>\\r\\n      \\r\\n        <tr *ngFor=\\\"let players of sortedData\\\">\\r\\n          <td>{{players.position}}</td>\\r\\n          <td>{{players.name}}</td>\\r\\n          <td>{{players.fat}}</td>\\r\\n          \\r\\n        </tr>\\r\\n      </table>\\r\\n   -->\\r\\n\\r\\n\\r\\n  <mat-toolbar id=\\\"live-search\\\">\\r\\n      <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n    <mat-form-field>\\r\\n      <input type=\\\"text\\\" matInput placeholder=\\\"Search for Team\\\" #box (keyup)=\\\"0\\\">\\r\\n    </mat-form-field>\\r\\n    <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n  </mat-toolbar>\\r\\n  <!-- saved team -->\\r\\n  <table id=\\\"live-table\\\">\\r\\n      <thead>\\r\\n        <tr id=\\\"live-table-header-title\\\">\\r\\n          <th></th>\\r\\n          <th></th>\\r\\n          <th>Pos</th>\\r\\n          <th>Team</th>\\r\\n          <th>Par</th>\\r\\n          <th>R1</th>\\r\\n          <th>R2</th>\\r\\n          <th>R3</th>\\r\\n          <th>R4</th>\\r\\n          <th>Total</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody id=\\\"player-tbody\\\" *ngFor=\\\"let teamdata of data.event.tournament.teams.team; let i = index;\\\" class=\\\"tbody\\\">\\r\\n        <ng-container *ngFor=\\\"let todoTeam of todoTeamService.getTodosTeam()\\\">\\r\\n          <tr id=\\\"live-table-header\\\" *ngIf=\\\"teamdata.name == todoTeam.teamName\\\">\\r\\n            <td><mat-icon>star</mat-icon></td>\\r\\n            <td>\\r\\n              <button class=\\\"hide-btn\\\" (click)=\\\"hideStuff[i] = !hideStuff[i]\\\">\\r\\n                <mat-icon>expand_{{hideStuff[i] ? 'less' : 'more'}}</mat-icon>\\r\\n              </button>\\r\\n            </td>\\r\\n            <td>{{teamdata.totals.position}}</td>\\r\\n            <td>\\r\\n             \\r\\n                  <img (click)=\\\"hideTeam = !hideTeam;  hideScore = !hideScore; profiles = (teamdata.name) ;\\\" id=\\\"teamNameImage\\\" class=\\\"thumbnail-image\\\" src=\\\"http://watc.bookgolf365.ie/images/{{teamdata.name | lowercase}}.png\\\"\\r\\n                  onError=\\\"this.src='./assets/img/team.jpg';\\\"  alt=\\\"...\\\" />\\r\\n              \\r\\n             \\r\\n            </td>\\r\\n            <ng-container *ngIf=\\\"teamdata.totals.totaltopar[0] == '+'\\\">\\r\\n              <td id=\\\"parblue\\\">{{teamdata.totals.totaltopar}}</td>\\r\\n            </ng-container>\\r\\n            <ng-container *ngIf=\\\"teamdata.totals.totaltopar[0] == '-'\\\">\\r\\n              <td id=\\\"parred\\\">{{teamdata.totals.totaltopar}}</td>\\r\\n            </ng-container>\\r\\n            <ng-container *ngIf=\\\"teamdata.totals.totaltopar[0] != '-' && teamdata.totals.totaltopar[0] != '+'\\\">\\r\\n              <td>{{teamdata.totals.totaltopar}}</td>\\r\\n            </ng-container>\\r\\n            <td>{{teamdata.round[0].strokes}}</td>\\r\\n            <td>{{teamdata.round[1].strokes}}</td>\\r\\n            <td>{{teamdata.round[2].strokes}}</td>\\r\\n            <td>{{teamdata.round[3].strokes}}</td>\\r\\n            <td>\\r\\n              <span id=\\\"total\\\">{{(teamdata.round[0].strokes * 1) + (teamdata.round[1].strokes * 1) + (teamdata.round[2].strokes * 1) + (teamdata.round[3].strokes\\r\\n                * 1)}}</span>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <ng-container *ngIf=\\\"hideStuff[i]\\\">\\r\\n            <tr class=\\\"player\\\" *ngFor=\\\"let players of data.event.tournament.players.player\\\">\\r\\n              <ng-container *ngIf=\\\"teamdata.name == todoTeam.teamName\\\">\\r\\n              <ng-container *ngIf=\\\"teamdata.name == players.teamname\\\">\\r\\n                <ng-container *ngIf=\\\"players.totals.status == 'ok'\\\">\\r\\n                  <td></td>\\r\\n                  <td></td>\\r\\n                  <td>{{players.totals.position}}</td>\\r\\n                  <td>{{players.firstname}} {{players.lastname}}</td>\\r\\n                  <td *ngIf=\\\"players.totals.totaltopar[0] == '+'\\\" id=\\\"parblue\\\">{{players.totals.totaltopar}}</td>\\r\\n                  <td *ngIf=\\\"players.totals.totaltopar[0] == '-'\\\" id=\\\"parred\\\">{{players.totals.totaltopar}}</td>\\r\\n                  <!-- <td *ngFor=\\\"let loop of [0,1,2,4,5,6,7,8]\\\">{{players.round[0].score[loop].strokes}}</td> -->\\r\\n                  <td>{{players.round[0].strokes}}</td>\\r\\n                  <td>{{players.round[1].strokes}}</td>\\r\\n                  <td>{{players.round[2].strokes}}</td>\\r\\n                  <td>{{players.round[3].strokes}}</td>\\r\\n                  <td id=\\\"total\\\">{{(players.round[0].strokes * 1) + (players.round[1].strokes * 1) + (players.round[2].strokes * 1) + (players.round[3].strokes\\r\\n                    * 1)}}</td>\\r\\n                </ng-container>\\r\\n              </ng-container>\\r\\n              </ng-container>\\r\\n            </tr>\\r\\n          </ng-container>\\r\\n        </ng-container>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <br>\\r\\n    <mat-divider></mat-divider>\\r\\n      \\r\\n  <!-- saved team -->\\r\\n  <table id=\\\"live-table\\\">\\r\\n    <thead>\\r\\n      <tr id=\\\"live-table-header-title\\\">\\r\\n        <th></th>\\r\\n        <th></th>\\r\\n        <th>Pos</th>\\r\\n        <th>Team</th>\\r\\n        <th>Par</th>\\r\\n        <th>R1</th>\\r\\n        <th>R2</th>\\r\\n        <th>R3</th>\\r\\n        <th>R4</th>\\r\\n        <th>Total</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody id=\\\"player-tbody\\\" *ngFor=\\\"let teamdata of data.event.tournament.teams.team; let x = index;\\\" class=\\\"tbody \\\">\\r\\n      <ng-container *ngIf=\\\"teamdata.name == box.value || box.value == ''\\\">\\r\\n        <tr id=\\\"live-table-header\\\">\\r\\n          <td (click)=\\\"todoTeamText = (teamdata.name); addTodoTeam()\\\"><mat-icon>star</mat-icon></td>\\r\\n          <td>\\r\\n            <button class=\\\"hide-btn\\\" (click)=\\\"hideStuff[x] = !hideStuff[x]\\\">\\r\\n              <mat-icon>expand_{{hideStuff[x] ? 'less' : 'more'}}</mat-icon>\\r\\n            </button>\\r\\n          </td>\\r\\n          <td>{{teamdata.totals.position}}</td>\\r\\n          <td>\\r\\n           \\r\\n                <img (click)=\\\"hideTeam = !hideTeam;  hideScore = !hideScore; profiles = (teamdata.name) ;\\\" id=\\\"teamNameImage\\\" class=\\\"thumbnail-image\\\" src=\\\"http://watc.bookgolf365.ie/images/{{teamdata.name | lowercase}}.png\\\"\\r\\n                onError=\\\"this.src='./assets/img/team.jpg';\\\"  alt=\\\"...\\\" />\\r\\n            \\r\\n           \\r\\n          </td>\\r\\n          <ng-container *ngIf=\\\"teamdata.totals.totaltopar[0] == '+'\\\">\\r\\n            <td id=\\\"parblue\\\">{{teamdata.totals.totaltopar}}</td>\\r\\n          </ng-container>\\r\\n          <ng-container *ngIf=\\\"teamdata.totals.totaltopar[0] == '-'\\\">\\r\\n            <td id=\\\"parred\\\">{{teamdata.totals.totaltopar}}</td>\\r\\n          </ng-container>\\r\\n          <ng-container *ngIf=\\\"teamdata.totals.totaltopar[0] != '-' && teamdata.totals.totaltopar[0] != '+'\\\">\\r\\n            <td>{{teamdata.totals.totaltopar}}</td>\\r\\n          </ng-container>\\r\\n          <td>{{teamdata.round[0].strokes}}</td>\\r\\n          <td>{{teamdata.round[1].strokes}}</td>\\r\\n          <td>{{teamdata.round[2].strokes}}</td>\\r\\n          <td>{{teamdata.round[3].strokes}}</td>\\r\\n          <td>\\r\\n            <span id=\\\"total\\\">{{(teamdata.round[0].strokes * 1) + (teamdata.round[1].strokes * 1) + (teamdata.round[2].strokes * 1) + (teamdata.round[3].strokes\\r\\n              * 1)}}</span>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <ng-container *ngIf=\\\"hideStuff[x]\\\">\\r\\n          <tr class=\\\"player\\\" *ngFor=\\\"let players of data.event.tournament.players.player\\\">\\r\\n            <ng-container *ngIf=\\\"teamdata.name == players.teamname\\\">\\r\\n              <ng-container *ngIf=\\\"players.totals.status == 'ok'\\\">\\r\\n                <td></td>\\r\\n                <td></td>\\r\\n                <td>{{players.totals.position}}</td>\\r\\n                <td>{{players.firstname}} {{players.lastname}}</td>\\r\\n                <td *ngIf=\\\"players.totals.totaltopar[0] == '+'\\\" id=\\\"parblue\\\">{{players.totals.totaltopar}}</td>\\r\\n                <td *ngIf=\\\"players.totals.totaltopar[0] == '-'\\\" id=\\\"parred\\\">{{players.totals.totaltopar}}</td>\\r\\n                <!-- <td *ngFor=\\\"let loop of [0,1,2,4,5,6,7,8]\\\">{{players.round[0].score[loop].strokes}}</td> -->\\r\\n                <td>{{players.round[0].strokes}}</td>\\r\\n                <td>{{players.round[1].strokes}}</td>\\r\\n                <td>{{players.round[2].strokes}}</td>\\r\\n                <td>{{players.round[3].strokes}}</td>\\r\\n                <td id=\\\"total\\\">{{(players.round[0].strokes * 1) + (players.round[1].strokes * 1) + (players.round[2].strokes * 1) + (players.round[3].strokes\\r\\n                  * 1)}}</td>\\r\\n              </ng-container>\\r\\n            </ng-container>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n      </ng-container>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <!-- *ngFor=\\\"let team of data.event.tournament.players.player -->\\r\\n\\r\\n  <!--  -->\\r\\n\\r\\n  <!--player 1-->\\r\\n  <mat-divider></mat-divider>\\r\\n</div>\"","module.exports = \"#live-main {\\n  margin-bottom: 31%; }\\n\\n#main {\\n  margin-bottom: 30%; }\\n\\n.holeHeader {\\n  text-align: center;\\n  border: 1px solid black; }\\n\\n.holeByHole {\\n  width: 100%;\\n  border-collapse: collapse; }\\n\\n.holeTotal {\\n  text-align: center;\\n  border: 1px solid black;\\n  color: red; }\\n\\n.holeBody {\\n  text-align: center;\\n  border: 1px solid black; }\\n\\n#staticTable {\\n  width: 40%;\\n  float: left; }\\n\\n#scrollingTable {\\n  overflow-x: scroll;\\n  overflow-y: hidden;\\n  white-space: nowrap;\\n  text-align: center; }\\n\\n.scrollingCard {\\n  display: inline-block;\\n  width: 100%; }\\n\\n#live-table {\\n  font-size: 75%;\\n  width: 100%;\\n  border-collapse: collapse; }\\n\\n#live-table-header-title {\\n  height: 40px;\\n  text-align: center; }\\n\\n#live-table-header {\\n  text-align: center; }\\n\\n.player {\\n  text-align: center; }\\n\\n.scroll-main {\\n  height: 100%;\\n  margin-top: 3%;\\n  overflow: hidden; }\\n\\n.scroll-child {\\n  height: 250px;\\n  overflow-y: scroll; }\\n\\n.hide-btn {\\n  min-width: 1%;\\n  background-color: Transparent;\\n  background-repeat: no-repeat;\\n  border: none;\\n  cursor: pointer;\\n  overflow: hidden;\\n  outline: none; }\\n\\n.roundCard {\\n  margin: 2%; }\\n\\n#player-expansion {\\n  margin: 2%; }\\n\\n.roundCard span {\\n  font-size: 75%; }\\n\\n#live-search {\\n  width: 100%; }\\n\\n#live-search mat-form-field {\\n  width: 45%;\\n  font-size: 68%; }\\n\\n#total {\\n  color: red; }\\n\\n#parblue {\\n  color: blue; }\\n\\n#parred {\\n  color: red; }\\n\\n#player-tbody:nth-child(even) {\\n  background: #adebad; }\\n\\n.example-fill-remaining-space {\\n  /* This fills the remaining space, by using flexbox. \\r\\n       Every toolbar row uses a flexbox row layout. */\\n  flex: 1 1 auto; }\\n\\n.fav {\\n  color: #cccc00; }\\n\\n#fav-button {\\n  min-width: 1%; }\\n\\n#team-header-toolbar #title {\\n  width: 100%;\\n  font-size: 130%; }\\n\\n#team-header {\\n  text-align: center; }\\n\\n#score-Info table {\\n  width: 100%;\\n  text-align: center; }\\n\\n#team-image {\\n  width: 50%;\\n  height: 50%;\\n  margin: auto; }\\n\\n#teamNameImage {\\n  width: 25%; }\\n\\n.example-fill-remaining-space {\\n  /* This fills the remaining space, by using flexbox. \\r\\n       Every toolbar row uses a flexbox row layout. */\\n  flex: 1 1 auto; }\\n\\n.flexcontainer {\\n  display: flex; }\\n\\n#team-expansion {\\n  margin: 2%; }\\n\\n.static-table {\\n  width: 40%;\\n  float: left;\\n  table-layout: fixed;\\n  border-collapse: collapse;\\n  white-space: nowrap;\\n  overflow: hidden; }\\n\\n.static-table th {\\n  font-size: 120%;\\n  text-align: left; }\\n\\n.static-table td {\\n  font-size: 100%;\\n  text-align: left; }\\n\\n.scrolling-wrapper {\\n  overflow-x: scroll;\\n  overflow-y: hidden;\\n  white-space: nowrap; }\\n\\n.scroll-table {\\n  width: 100%;\\n  border-collapse: collapse; }\\n\\n.scroll-table th {\\n  font-size: 120%;\\n  text-align: center; }\\n\\n.scroll-table td {\\n  font-size: 100%;\\n  text-align: center; }\\n\"","import { Component, OnInit, AfterViewInit, Input } from '@angular/core';\r\nimport { LiveScoreService } from '../live-score.service';\r\nimport { TodoTeamService} from '../../../services/todo-team.service';\r\nimport { TodoTeam } from '../../../classes/todo-team';\r\n\r\nimport { ITeam } from './live-team-score';\r\nimport { Sort } from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'app-live-team-score',\r\n  templateUrl: './live-team-score.component.html',\r\n  styleUrls: ['./live-team-score.component.scss']\r\n})\r\n\r\nexport class LiveTeamScoreComponent implements OnInit {\r\n\r\n  @Input()\r\n  private todoTeam: TodoTeam;\r\n\r\n  private todoTeamText: string;\r\n  errorMessage: string;\r\n  hideStuff = [];\r\n  data;\r\n\r\n  constructor(public _liveScoreService: LiveScoreService, private todoTeamService: TodoTeamService) {\r\n    this.todoTeamText = '';\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this._liveScoreService.getRealJsonData()\r\n      .subscribe(data => {\r\n        this.data = data;\r\n      },\r\n        error => this.errorMessage = <any>error);\r\n  }\r\n\r\n  private removeTodoTeam(): void{\r\n    this.todoTeamService.removeTodoTeam(this.todoTeam.id);\r\n  }\r\n\r\n  private addTodoTeam(): void{\r\n    this.todoTeamService.addTodoTeam(this.todoTeamText);\r\n    this.todoTeamText = '';\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n// function compare(a, b, isAsc) {\r\n//   return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n// }\r\n// class Defualt {\r\n//   private profiles: string;\r\n// }\r\n\r\n// get default(){\r\n//       return this.profiles \r\n// }\r\n// playerdata = [\r\n  //   {players:{\r\n  //     player:[\r\n  //       {id: 1, position: 1, name: \"patrick\"},\r\n  //       {id: 2, position: 5, name: \"pat\"},\r\n  //       {id: 3, position: 3, name: \"rick\"},\r\n  //       {id: 4, position: 6, name: \"daniel\"},\r\n  //       {id: 5, position: 2, name: \"dan\"},\r\n  //       {id: 6, position: 7, name: \"iel\"},\r\n  //       {id: 7, position: 4, name: \"ham\"},\r\n  //       {id: 8, position: 8, name: \"pig\"}\r\n  //     ]\r\n  //    }}\r\n  // ];\r\n  //       sortData(sort: Sort) {\r\n//         const data = this.playerdata;\r\n//         if (!sort.active || sort.direction === '') {\r\n//           this.sortedData = data;\r\n//           return;\r\n//         }\r\n//         this.sortedData = data.sort((a, b) => {\r\n//           const isAsc = sort.direction === 'asc';\r\n//           switch (sort.active) {\r\n//             case 'position': return compare(a.position, b.position, isAsc);\r\n//             default: return 0;\r\n//           }\r\n//         });\r\n\r\n// }\r\n","module.exports = \"<app-toolbar></app-toolbar>\\r\\n\\r\\n\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\\r\\n<mat-toolbar class=\\\"app-toolbar\\\">\\r\\n  <button type=\\\"button\\\" mat-button routerLink=\\\"\\\">\\r\\n    <i class=\\\"material-icons md-dark\\\">home</i>\\r\\n  </button>\\r\\n\\r\\n\\r\\n  <button type=\\\"button\\\" mat-button routerLink=\\\"live-score\\\">\\r\\n    <i class=\\\"material-icons md-dark\\\">flag</i>\\r\\n  </button>\\r\\n\\r\\n  <button type=\\\"button\\\" mat-button routerLink=\\\"transport\\\">\\r\\n    <i class=\\\"material-icons md-dark md-inactive\\\">directions_bus</i>\\r\\n  </button>\\r\\n\\r\\n  <button type=\\\"button\\\" mat-button routerLink=\\\"geolocation\\\">\\r\\n    <i class=\\\"material-icons md-dark md-inactive\\\">location_on</i>\\r\\n  </button>\\r\\n\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \".app-toolbar {\\n  position: fixed;\\n  bottom: 0;\\n  background-color: #5cd65c;\\n  width: 100%; }\\n\\n.material-icons.md-dark {\\n  color: black; }\\n\\n.mat-button {\\n  min-width: 1%;\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.scss']\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div id=\\\"top-nav\\\">\\r\\n    <mat-toolbar class=\\\"header-toolbar\\\">\\r\\n        \\r\\n    \\r\\n    <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n    <img routerLink=\\\"\\\" id=\\\"watcShort\\\"src=\\\"./assets/img/WATC.png\\\">\\r\\n    <button mat-button>Women</button>\\r\\n    <button mat-button>Men</button>\\r\\n   \\r\\n        \\r\\n    <span><button  type=\\\"button\\\" mat-button routerLink=\\\"add-info\\\"><i class=\\\"material-icons md-dark md-inactive\\\">reorder</i></button></span>\\r\\n</mat-toolbar>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \".header-toolbar {\\n  background-color: #D8D8D8;\\n  width: 100%;\\n  height: 100%; }\\n\\n#watcShort {\\n  width: 40%;\\n  float: left;\\n  padding-right: 10px; }\\n\\n.example-fill-remaining-space {\\n  flex: 1 1 auto; }\\n\\n.mat-button {\\n  min-width: 1%;\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"!hideTeam\\\">\\r\\n    <mat-list role=\\\"list\\\"  *ngFor=\\\"let teamdata of data.event.tournament.teams.team\\\">\\r\\n        <mat-list-item role=\\\"listitem\\\" (click)=\\\"mainProfiles = (teamdata.name); hideTeam = !hideTeam\\\">\\r\\n      \\r\\n          <span>{{teamdata.name}}</span>\\r\\n      \\r\\n        </mat-list-item>\\r\\n        <mat-divider></mat-divider>\\r\\n        </mat-list>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"hideTeam\\\">\\r\\n      <mat-toolbar id=\\\"team-header-toolbar\\\">\\r\\n          <span id=\\\"title\\\">\\r\\n            <span>\\r\\n                <mat-icon (click)=\\\"hideTeam = !hideTeam; hideScore = !hideScore\\\" >arrow_back</mat-icon>\\r\\n            </span>\\r\\n            {{mainProfiles}}\\r\\n            <button id=\\\"fav-button\\\" mat-button>\\r\\n              <mat-icon class=\\\"fav\\\">star</mat-icon>\\r\\n            </button>\\r\\n          </span>\\r\\n        </mat-toolbar>\\r\\n    <div id=\\\"team-header\\\">\\r\\n      <span>\\r\\n          <span>\\r\\n              <img id=\\\"team-image\\\" class=\\\"thumbnail-image\\\" src=\\\"http://watc.bookgolf365.ie/images/{{mainProfiles | lowercase}}.png\\\"/>\\r\\n          </span>\\r\\n      </span>\\r\\n     \\r\\n      <!-- <mat-card id=\\\"score-Info\\\"> -->\\r\\n      <!-- <table> -->\\r\\n      <!-- <tr *ngFor=\\\"let teams of data.event.tournament.teams.team\\\">\\r\\n              \\r\\n              <ng-container *ngIf=\\\"teams.name == mainProfiles\\\"> -->\\r\\n      <!-- <tr>\\r\\n            <th>Thru</th>test\\r\\n            <th>Today</th>null\\r\\n            <th>Total</th>test\\r\\n            <th>Rank</th>test -->\\r\\n      <!-- </ng-container> -->\\r\\n      <!-- </tr>\\r\\n        </table>\\r\\n      </mat-card> -->\\r\\n    </div>\\r\\n    <div class=\\\"scroll-main\\\">\\r\\n      <div class=\\\"scroll-child\\\">\\r\\n  \\r\\n        <!-- Round one -->\\r\\n        \\r\\n        <mat-expansion-panel id=\\\"team-expansion\\\">\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n                  <td>Round One</td>\\r\\n            </mat-panel-title>\\r\\n          </mat-expansion-panel-header>\\r\\n  \\r\\n          <div id=\\\"staticTable\\\">\\r\\n            <table>\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>Holes</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n                <ng-container *ngIf=\\\"playerdata.teamname == mainProfiles\\\">\\r\\n                  <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n                    <td (click)=\\\"hideTeam = !hideTeam; hidePlayer = !hidePlayer; teamProfiles = [playerdata.teamname]; playerProfilesFirst = [playerdata.firstname]; playerProfilesLast = [playerdata.lastname]\\\">{{playerdata.firstname}} {{playerdata.lastname}}</td>\\r\\n                  </tr>\\r\\n  \\r\\n                </ng-container>\\r\\n              </tbody>\\r\\n  \\r\\n            </table>\\r\\n          </div>\\r\\n          <div id=\\\"scrollingTable\\\">\\r\\n            <div class=\\\"scrollingCard\\\">\\r\\n              <table>\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>01</th>\\r\\n                    <th>02</th>\\r\\n                    <th>03</th>\\r\\n                    <th>04</th>\\r\\n                    <th>05</th>\\r\\n                    <th>06</th>\\r\\n                    <th>07</th>\\r\\n                    <th>08</th>\\r\\n                    <th>09</th>\\r\\n                    <th>Out</th>\\r\\n                    <th>10</th>\\r\\n                    <th>11</th>\\r\\n                    <th>12</th>\\r\\n                    <th>13</th>\\r\\n                    <th>14</th>\\r\\n                    <th>15</th>\\r\\n                    <th>16</th>\\r\\n                    <th>17</th>\\r\\n                    <th>18</th>\\r\\n                    <th>In</th>\\r\\n                    <th>Total</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n                  <ng-container *ngIf=\\\"playerdata.teamname == mainProfiles\\\">\\r\\n                    <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n                      <td *ngFor=\\\"let loop of [0,1,2,3,4,5,6,7,8]\\\">{{playerdata.round[0].score[loop].strokes}}</td>\\r\\n                      <td id=\\\"total\\\">{{(playerdata.round[0].score[0].strokes * 1) + (playerdata.round[0].score[1].strokes * 1) + (playerdata.round[0].score[2].strokes\\r\\n                        * 1) + (playerdata.round[0].score[3].strokes * 1) + (playerdata.round[0].score[4].strokes * 1) + (playerdata.round[0].score[5].strokes\\r\\n                        * 1) + (playerdata.round[0].score[6].strokes * 1) + (playerdata.round[0].score[7].strokes * 1) + (playerdata.round[0].score[8].strokes\\r\\n                        * 1)}}</td>\\r\\n                      <td *ngFor=\\\"let loop of [9,10,11,12,13,14,15,16,17]\\\">{{playerdata.round[0].score[loop].strokes}}</td>\\r\\n                      <td id=\\\"total\\\">{{(playerdata.round[0].score[9].strokes * 1) + (playerdata.round[0].score[10].strokes * 1) + (playerdata.round[0].score[11].strokes\\r\\n                        * 1) + (playerdata.round[0].score[12].strokes * 1) + (playerdata.round[0].score[13].strokes * 1) +\\r\\n                        (playerdata.round[0].score[14].strokes * 1) + (playerdata.round[0].score[15].strokes * 1) + (playerdata.round[0].score[17].strokes\\r\\n                        * 1) + (playerdata.round[0].score[17].strokes * 1)}}</td>\\r\\n                      <td id=\\\"total\\\">{{(playerdata.round[0].score[0].strokes * 1) + (playerdata.round[0].score[1].strokes * 1) + (playerdata.round[0].score[2].strokes\\r\\n                        * 1) + (playerdata.round[0].score[3].strokes * 1) + (playerdata.round[0].score[4].strokes * 1) + (playerdata.round[0].score[5].strokes\\r\\n                        * 1) + (playerdata.round[0].score[6].strokes * 1) + (playerdata.round[0].score[7].strokes * 1) + (playerdata.round[0].score[8].strokes\\r\\n                        * 1) + (playerdata.round[0].score[9].strokes * 1) + (playerdata.round[0].score[10].strokes * 1) + (playerdata.round[0].score[11].strokes\\r\\n                        * 1) + (playerdata.round[0].score[12].strokes * 1) + (playerdata.round[0].score[13].strokes * 1) +\\r\\n                        (playerdata.round[0].score[14].strokes * 1) + (playerdata.round[0].score[15].strokes * 1) + (playerdata.round[0].score[16].strokes\\r\\n                        * 1) + (playerdata.round[0].score[17].strokes * 1)}}</td>\\r\\n                    </tr>\\r\\n                  </ng-container>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-expansion-panel>\\r\\n        <!-- </div> -->\\r\\n        <!-- </mat-card> -->\\r\\n  \\r\\n        <!-- Round Two -->\\r\\n        <mat-expansion-panel id=\\\"team-expansion\\\">\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n               \\r\\n              Round Two\\r\\n            </mat-panel-title>\\r\\n          </mat-expansion-panel-header>\\r\\n          <div id=\\\"staticTable\\\">\\r\\n            <table>\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>Holes</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n                  <ng-container *ngIf=\\\"playerdata.teamname == mainProfiles\\\">\\r\\n                    <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n                      <td (click)=\\\"hideTeam = !hideTeam; hidePlayer = !hidePlayer; teamProfiles = [playerdata.teamname]; playerProfilesFirst = [playerdata.firstname]; playerProfilesLast = [playerdata.lastname]\\\">{{playerdata.firstname}} {{playerdata.lastname}}</td>\\r\\n                    </tr>\\r\\n    \\r\\n                  </ng-container>\\r\\n                </tbody>\\r\\n  \\r\\n            </table>\\r\\n          </div>\\r\\n          <div id=\\\"scrollingTable\\\">\\r\\n            <div class=\\\"scrollingCard\\\">\\r\\n              <table>\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>01</th>\\r\\n                    <th>02</th>\\r\\n                    <th>03</th>\\r\\n                    <th>04</th>\\r\\n                    <th>05</th>\\r\\n                    <th>06</th>\\r\\n                    <th>07</th>\\r\\n                    <th>08</th>\\r\\n                    <th>09</th>\\r\\n                    <th>Out</th>\\r\\n                    <th>10</th>\\r\\n                    <th>11</th>\\r\\n                    <th>12</th>\\r\\n                    <th>13</th>\\r\\n                    <th>14</th>\\r\\n                    <th>15</th>\\r\\n                    <th>16</th>\\r\\n                    <th>17</th>\\r\\n                    <th>18</th>\\r\\n                    <th>In</th>\\r\\n                    <th>Total</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n                  <ng-container *ngIf=\\\"playerdata.teamname == mainProfiles\\\">\\r\\n                    <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n                      <td *ngFor=\\\"let loop of [0,1,2,3,4,5,6,7,8]\\\">{{playerdata.round[1].score[loop].strokes}}</td>\\r\\n                      <td id=\\\"total\\\">{{(playerdata.round[1].score[0].strokes * 1) + (playerdata.round[1].score[1].strokes * 1) + (playerdata.round[1].score[2].strokes\\r\\n                        * 1) + (playerdata.round[1].score[3].strokes * 1) + (playerdata.round[1].score[4].strokes * 1) + (playerdata.round[1].score[5].strokes\\r\\n                        * 1) + (playerdata.round[1].score[6].strokes * 1) + (playerdata.round[1].score[7].strokes * 1) + (playerdata.round[1].score[8].strokes\\r\\n                        * 1)}}</td>\\r\\n                      <td *ngFor=\\\"let loop of [9,10,11,12,13,14,15,16,17]\\\">{{playerdata.round[1].score[loop].strokes}}</td>\\r\\n                      <td id=\\\"total\\\">{{(playerdata.round[1].score[9].strokes * 1) + (playerdata.round[1].score[10].strokes * 1) + (playerdata.round[1].score[11].strokes\\r\\n                        * 1) + (playerdata.round[1].score[12].strokes * 1) + (playerdata.round[1].score[13].strokes * 1) +\\r\\n                        (playerdata.round[1].score[14].strokes * 1) + (playerdata.round[1].score[15].strokes * 1) + (playerdata.round[1].score[17].strokes\\r\\n                        * 1) + (playerdata.round[1].score[17].strokes * 1)}}</td>\\r\\n                      <td id=\\\"total\\\">{{(playerdata.round[1].score[0].strokes * 1) + (playerdata.round[1].score[1].strokes * 1) + (playerdata.round[1].score[2].strokes\\r\\n                        * 1) + (playerdata.round[1].score[3].strokes * 1) + (playerdata.round[1].score[4].strokes * 1) + (playerdata.round[1].score[5].strokes\\r\\n                        * 1) + (playerdata.round[1].score[6].strokes * 1) + (playerdata.round[1].score[7].strokes * 1) + (playerdata.round[1].score[8].strokes\\r\\n                        * 1) + (playerdata.round[1].score[9].strokes * 1) + (playerdata.round[1].score[10].strokes * 1) + (playerdata.round[1].score[11].strokes\\r\\n                        * 1) + (playerdata.round[1].score[12].strokes * 1) + (playerdata.round[1].score[13].strokes * 1) +\\r\\n                        (playerdata.round[1].score[14].strokes * 1) + (playerdata.round[1].score[15].strokes * 1) + (playerdata.round[1].score[16].strokes\\r\\n                        * 1) + (playerdata.round[1].score[17].strokes * 1)}}</td>\\r\\n  \\r\\n                    </tr>\\r\\n                  </ng-container>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-expansion-panel>\\r\\n  \\r\\n  \\r\\n        <!-- Round three -->\\r\\n        <mat-expansion-panel id=\\\"team-expansion\\\">\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n                Round Three\\r\\n            </mat-panel-title>\\r\\n          </mat-expansion-panel-header>\\r\\n          <div id=\\\"staticTable\\\">\\r\\n            <table>\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>Holes</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n                  <ng-container *ngIf=\\\"playerdata.teamname == mainProfiles\\\">\\r\\n                    <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n                      <td (click)=\\\"hideTeam = !hideTeam; hidePlayer = !hidePlayer; teamProfiles = [playerdata.teamname]; playerProfilesFirst = [playerdata.firstname]; playerProfilesLast = [playerdata.lastname]\\\">{{playerdata.firstname}} {{playerdata.lastname}}</td>\\r\\n                    </tr>\\r\\n    \\r\\n                  </ng-container>\\r\\n                </tbody>\\r\\n  \\r\\n            </table>\\r\\n          </div>\\r\\n          <div id=\\\"scrollingTable\\\">\\r\\n            <div class=\\\"scrollingCard\\\">\\r\\n              <table>\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>01</th>\\r\\n                    <th>02</th>\\r\\n                    <th>03</th>\\r\\n                    <th>04</th>\\r\\n                    <th>05</th>\\r\\n                    <th>06</th>\\r\\n                    <th>07</th>\\r\\n                    <th>08</th>\\r\\n                    <th>09</th>\\r\\n                    <th>Out</th>\\r\\n                    <th>10</th>\\r\\n                    <th>11</th>\\r\\n                    <th>12</th>\\r\\n                    <th>13</th>\\r\\n                    <th>14</th>\\r\\n                    <th>15</th>\\r\\n                    <th>16</th>\\r\\n                    <th>17</th>\\r\\n                    <th>18</th>\\r\\n                    <th>In</th>\\r\\n                    <th>Total</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n                  <ng-container *ngIf=\\\"playerdata.teamname == mainProfiles\\\">\\r\\n                    <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n                      <td *ngFor=\\\"let loop of [0,1,2,3,4,5,6,7,8]\\\">{{playerdata.round[2].score[loop].strokes}}</td>\\r\\n                      <td id=\\\"total\\\">{{(playerdata.round[2].score[0].strokes * 1) + (playerdata.round[2].score[1].strokes * 1) + (playerdata.round[2].score[2].strokes\\r\\n                        * 1) + (playerdata.round[2].score[3].strokes * 1) + (playerdata.round[2].score[4].strokes * 1) + (playerdata.round[2].score[5].strokes\\r\\n                        * 1) + (playerdata.round[2].score[6].strokes * 1) + (playerdata.round[2].score[7].strokes * 1) + (playerdata.round[2].score[8].strokes\\r\\n                        * 1)}}</td>\\r\\n                      <td *ngFor=\\\"let loop of [9,10,11,12,13,14,15,16,17]\\\">{{playerdata.round[2].score[loop].strokes}}</td>\\r\\n                      <td id=\\\"total\\\">{{(playerdata.round[2].score[9].strokes * 1) + (playerdata.round[2].score[10].strokes * 1) + (playerdata.round[2].score[11].strokes\\r\\n                        * 1) + (playerdata.round[2].score[12].strokes * 1) + (playerdata.round[2].score[13].strokes * 1) +\\r\\n                        (playerdata.round[2].score[14].strokes * 1) + (playerdata.round[2].score[15].strokes * 1) + (playerdata.round[2].score[17].strokes\\r\\n                        * 1) + (playerdata.round[2].score[17].strokes * 1)}}</td>\\r\\n                      <td id=\\\"total\\\">{{(playerdata.round[2].score[0].strokes * 1) + (playerdata.round[2].score[1].strokes * 1) + (playerdata.round[2].score[2].strokes\\r\\n                        * 1) + (playerdata.round[2].score[3].strokes * 1) + (playerdata.round[2].score[4].strokes * 1) + (playerdata.round[2].score[5].strokes\\r\\n                        * 1) + (playerdata.round[2].score[6].strokes * 1) + (playerdata.round[2].score[7].strokes * 1) + (playerdata.round[2].score[8].strokes\\r\\n                        * 1) + (playerdata.round[2].score[9].strokes * 1) + (playerdata.round[2].score[10].strokes * 1) + (playerdata.round[2].score[11].strokes\\r\\n                        * 1) + (playerdata.round[2].score[12].strokes * 1) + (playerdata.round[2].score[13].strokes * 1) +\\r\\n                        (playerdata.round[2].score[14].strokes * 1) + (playerdata.round[2].score[15].strokes * 1) + (playerdata.round[2].score[16].strokes\\r\\n                        * 1) + (playerdata.round[2].score[17].strokes * 1)}}</td>\\r\\n  \\r\\n                    </tr>\\r\\n                  </ng-container>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-expansion-panel>\\r\\n  \\r\\n        <!-- Round Four -->\\r\\n  \\r\\n        <mat-expansion-panel id=\\\"team-expansion\\\">\\r\\n          <mat-expansion-panel-header>\\r\\n            <mat-panel-title>\\r\\n                Round Four\\r\\n            </mat-panel-title>\\r\\n          </mat-expansion-panel-header>\\r\\n          <div id=\\\"staticTable\\\">\\r\\n            <table>\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>Holes</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n                  <ng-container *ngIf=\\\"playerdata.teamname == mainProfiles\\\">\\r\\n                    <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n                      <td (click)=\\\"hideTeam = !hideTeam; hidePlayer = !hidePlayer; teamProfiles = [playerdata.teamname]; playerProfilesFirst = [playerdata.firstname]; playerProfilesLast = [playerdata.lastname]\\\">{{playerdata.firstname}} {{playerdata.lastname}}</td>\\r\\n                    </tr>\\r\\n    \\r\\n                  </ng-container>\\r\\n                </tbody>\\r\\n  \\r\\n            </table>\\r\\n          </div>\\r\\n          <div id=\\\"scrollingTable\\\">\\r\\n            <div class=\\\"scrollingCard\\\">\\r\\n              <table>\\r\\n                <thead>\\r\\n                  <tr>\\r\\n                    <th>1</th>\\r\\n                    <th>2</th>\\r\\n                    <th>3</th>\\r\\n                    <th>4</th>\\r\\n                    <th>5</th>\\r\\n                    <th>6</th>\\r\\n                    <th>7</th>\\r\\n                    <th>8</th>\\r\\n                    <th>9</th>\\r\\n                    <th>Out</th>\\r\\n                    <th>10</th>\\r\\n                    <th>11</th>\\r\\n                    <th>12</th>\\r\\n                    <th>13</th>\\r\\n                    <th>14</th>\\r\\n                    <th>15</th>\\r\\n                    <th>16</th>\\r\\n                    <th>17</th>\\r\\n                    <th>18</th>\\r\\n                    <th>In</th>\\r\\n                    <th>Total</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody *ngFor=\\\"let playerdata of data.event.tournament.players.player; let i = index\\\">\\r\\n                  <ng-container *ngIf=\\\"playerdata.teamname == mainProfiles\\\">\\r\\n                    <tr *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n                      <td *ngFor=\\\"let loop of [0,1,2,3,4,5,6,7,8]\\\">{{playerdata.round[3].score[loop].strokes}}</td>\\r\\n                      <td id=\\\"total\\\">{{(playerdata.round[3].score[0].strokes * 1) + (playerdata.round[3].score[1].strokes * 1) + (playerdata.round[3].score[2].strokes\\r\\n                        * 1) + (playerdata.round[3].score[3].strokes * 1) + (playerdata.round[3].score[4].strokes * 1) + (playerdata.round[3].score[5].strokes\\r\\n                        * 1) + (playerdata.round[3].score[6].strokes * 1) + (playerdata.round[3].score[7].strokes * 1) + (playerdata.round[3].score[8].strokes\\r\\n                        * 1)}}</td>\\r\\n                      <td *ngFor=\\\"let loop of [9,10,11,12,13,14,15,16,17]\\\">{{playerdata.round[3].score[loop].strokes}}</td>\\r\\n                      <td id=\\\"total\\\">{{(playerdata.round[3].score[9].strokes * 1) + (playerdata.round[3].score[10].strokes * 1) + (playerdata.round[3].score[11].strokes\\r\\n                        * 1) + (playerdata.round[3].score[12].strokes * 1) + (playerdata.round[3].score[13].strokes * 1) +\\r\\n                        (playerdata.round[3].score[14].strokes * 1) + (playerdata.round[3].score[15].strokes * 1) + (playerdata.round[3].score[17].strokes\\r\\n                        * 1) + (playerdata.round[3].score[17].strokes * 1)}}</td>\\r\\n                      <td id=\\\"total\\\">{{(playerdata.round[3].score[0].strokes * 1) + (playerdata.round[3].score[1].strokes * 1) + (playerdata.round[3].score[2].strokes\\r\\n                        * 1) + (playerdata.round[3].score[3].strokes * 1) + (playerdata.round[3].score[4].strokes * 1) + (playerdata.round[3].score[5].strokes\\r\\n                        * 1) + (playerdata.round[3].score[6].strokes * 1) + (playerdata.round[3].score[7].strokes * 1) + (playerdata.round[3].score[8].strokes\\r\\n                        * 1) + (playerdata.round[3].score[9].strokes * 1) + (playerdata.round[3].score[10].strokes * 1) + (playerdata.round[3].score[11].strokes\\r\\n                        * 1) + (playerdata.round[3].score[12].strokes * 1) + (playerdata.round[3].score[13].strokes * 1) +\\r\\n                        (playerdata.round[3].score[14].strokes * 1) + (playerdata.round[3].score[15].strokes * 1) + (playerdata.round[3].score[16].strokes\\r\\n                        * 1) + (playerdata.round[3].score[17].strokes * 1)}}</td>\\r\\n  \\r\\n                    </tr>\\r\\n                  </ng-container>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-expansion-panel>\\r\\n        </div>\\r\\n        </div>\\r\\n        </div>\\r\\n        \"","module.exports = \"#live-main {\\n  margin-bottom: 31%; }\\n\\n#main {\\n  margin-bottom: 30%; }\\n\\n.holeHeader {\\n  text-align: center;\\n  border: 1px solid black; }\\n\\n.holeByHole {\\n  width: 100%;\\n  border-collapse: collapse; }\\n\\n.holeTotal {\\n  text-align: center;\\n  border: 1px solid black;\\n  color: red; }\\n\\n.holeBody {\\n  text-align: center;\\n  border: 1px solid black; }\\n\\n#staticTable {\\n  width: 40%;\\n  float: left; }\\n\\n#scrollingTable {\\n  overflow-x: scroll;\\n  overflow-y: hidden;\\n  white-space: nowrap;\\n  text-align: center; }\\n\\n.scrollingCard {\\n  display: inline-block;\\n  width: 100%; }\\n\\n#live-table {\\n  font-size: 75%;\\n  width: 100%;\\n  border-collapse: collapse; }\\n\\n#live-table-header-title {\\n  height: 40px;\\n  text-align: center; }\\n\\n#live-table-header {\\n  text-align: center; }\\n\\n.player {\\n  text-align: center; }\\n\\n.scroll-main {\\n  height: 100%;\\n  margin-top: 3%;\\n  overflow: hidden; }\\n\\n.scroll-child {\\n  height: 250px;\\n  overflow-y: scroll; }\\n\\n.hide-btn {\\n  min-width: 1%;\\n  background-color: Transparent;\\n  background-repeat: no-repeat;\\n  border: none;\\n  cursor: pointer;\\n  overflow: hidden;\\n  outline: none; }\\n\\n.roundCard {\\n  margin: 2%; }\\n\\n#player-expansion {\\n  margin: 2%; }\\n\\n.roundCard span {\\n  font-size: 75%; }\\n\\n#live-search {\\n  width: 100%; }\\n\\n#live-search mat-form-field {\\n  width: 45%;\\n  font-size: 68%; }\\n\\n#total {\\n  color: red; }\\n\\n#parblue {\\n  color: blue; }\\n\\n#parred {\\n  color: red; }\\n\\n#player-tbody:nth-child(even) {\\n  background: #adebad; }\\n\\n.example-fill-remaining-space {\\n  /* This fills the remaining space, by using flexbox. \\r\\n       Every toolbar row uses a flexbox row layout. */\\n  flex: 1 1 auto; }\\n\\n.fav {\\n  color: #cccc00; }\\n\\n#fav-button {\\n  min-width: 1%; }\\n\\n#team-header-toolbar #title {\\n  width: 100%;\\n  font-size: 130%; }\\n\\n#team-header {\\n  text-align: center; }\\n\\n#score-Info table {\\n  width: 100%;\\n  text-align: center; }\\n\\n#team-image {\\n  width: 50%;\\n  height: 50%;\\n  margin: auto; }\\n\\n#teamNameImage {\\n  width: 25%; }\\n\\n.example-fill-remaining-space {\\n  /* This fills the remaining space, by using flexbox. \\r\\n       Every toolbar row uses a flexbox row layout. */\\n  flex: 1 1 auto; }\\n\\n.flexcontainer {\\n  display: flex; }\\n\\n#team-expansion {\\n  margin: 2%; }\\n\\n.static-table {\\n  width: 40%;\\n  float: left;\\n  table-layout: fixed;\\n  border-collapse: collapse;\\n  white-space: nowrap;\\n  overflow: hidden; }\\n\\n.static-table th {\\n  font-size: 120%;\\n  text-align: left; }\\n\\n.static-table td {\\n  font-size: 100%;\\n  text-align: left; }\\n\\n.scrolling-wrapper {\\n  overflow-x: scroll;\\n  overflow-y: hidden;\\n  white-space: nowrap; }\\n\\n.scroll-table {\\n  width: 100%;\\n  border-collapse: collapse; }\\n\\n.scroll-table th {\\n  font-size: 120%;\\n  text-align: center; }\\n\\n.scroll-table td {\\n  font-size: 100%;\\n  text-align: center; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { LiveScoreService } from '../live-score/live-score.service';\r\ndeclare var $:any;\r\n\r\n@Component({\r\n  selector: 'app-team-profiles',\r\n  templateUrl: './team-profiles.component.html',\r\n  styleUrls: ['./team-profiles.component.scss']\r\n})\r\nexport class TeamProfilesComponent implements OnInit {\r\nerrorMessage: string;\r\ndata;\r\n\r\n  constructor(public _liveScoreService:LiveScoreService) { }\r\n\r\n  ngOnInit(){\r\n\r\n    this._liveScoreService.getRealJsonData()\r\n    .subscribe(data => {\r\n      this.data = data;},\r\n    error => this.errorMessage=<any>error);\r\n      }\r\n     \r\n\r\n}\r\n","module.exports = \"<button (click)=\\\"removeTodo()\\\">REmove</button>{{todo.text}}\\r\\n<table id=\\\"live-table\\\">\\r\\n        <thead>\\r\\n          <tr id=\\\"live-table-header-title\\\">\\r\\n            <th>Pos</th>\\r\\n            <th>Player</th>\\r\\n            <th>Team</th>\\r\\n            <th>R1</th>\\r\\n            <th>R2</th>\\r\\n            <th>R3</th>\\r\\n            <th>R4</th>\\r\\n            <th>Total</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody id=\\\"player-tbody\\\" *ngFor=\\\"let playerdata of playerdata.event.tournament.players.player; let i = index\\\">\\r\\n            <tr id=\\\"player-tr\\\" *ngIf=\\\"playerdata.totals.status == 'ok'\\\">\\r\\n    \\r\\n              <td>{{playerdata.totals.position}}</td>\\r\\n              <td (click)=\\\"hideall = !hideall; teamProfiles = (playerdata.teamname); playerProfilesFirst = [playerdata.firstname]; playerProfilesLast = [playerdata.lastname]\\\">{{playerdata.firstname}} {{playerdata.lastname}}</td>\\r\\n              <td>\\r\\n    \\r\\n                  <img (click)=\\\" id=\\\"teamNameImage\\\" class=\\\"thumbnail-image\\\" src=\\\"http://watc.bookgolf365.ie/images/{{playerdata.teamname | lowercase}}.png\\\"\\r\\n                  onError=\\\"this.src='./assets/img/team.jpg';\\\"  alt=\\\"...\\\" />\\r\\n    \\r\\n              </td>\\r\\n              <td>{{playerdata.round[0].strokes}}</td>\\r\\n              <td>{{playerdata.round[1].strokes}}</td>\\r\\n              <td>{{playerdata.round[2].strokes}}</td>\\r\\n              <td>{{playerdata.round[3].strokes}}</td>\\r\\n              <td id=\\\"total\\\">{{(playerdata.round[0].strokes * 1) + (playerdata.round[1].strokes * 1) + (playerdata.round[2].strokes * 1) + (playerdata.round[3].strokes\\r\\n                * 1)}}</td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    \\r\\n      </table>\"","module.exports = \"#live-table {\\n  font-size: 75%;\\n  width: 100%;\\n  border-collapse: collapse; }\\n\\n#player-tbody:nth-child(even) {\\n  background-color: #adebad; }\\n\\n#player-expansion {\\n  margin: 2%; }\\n\\n.example-fill-remaining-space {\\n  /* This fills the remaining space, by using flexbox. \\r\\n       Every toolbar row uses a flexbox row layout. */\\n  flex: 1 1 auto; }\\n\\n.roundsPanel {\\n  width: 100%; }\\n\\n#teamNameImage {\\n  width: 28%; }\\n\\n.mat-button {\\n  min-width: 1%; }\\n\\n#live-search {\\n  width: 100%; }\\n\\n#live-search mat-form-field {\\n  width: 45%;\\n  font-size: 68%; }\\n\\n#live-table-header-title {\\n  height: 40px;\\n  text-align: center; }\\n\\n#live-main {\\n  margin-bottom: 31%; }\\n\\n#total_plus {\\n  color: blue; }\\n\\n#total {\\n  color: red; }\\n\\n#total_Even {\\n  color: red; }\\n\\n#player-tr:nth-child(even) {\\n  background: #56ab2f;\\n  /* fallback for old browsers */\\n  /* Chrome 10-25, Safari 5.1-6 */\\n  background: linear-gradient(to right, #a8e063, #56ab2f);\\n  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */ }\\n\\n#live-table td {\\n  text-align: center; }\\n\\n#main {\\n  margin-bottom: 30%; }\\n\\n#team-header-toolbar #title {\\n  width: 100%;\\n  font-size: 130%; }\\n\\n.hide-btn {\\n  min-width: 1%;\\n  background-color: Transparent;\\n  background-repeat: no-repeat;\\n  border: none;\\n  cursor: pointer;\\n  overflow: hidden;\\n  outline: none; }\\n\\n.fav {\\n  color: #cccc00; }\\n\\n#fav-button {\\n  min-width: 1%; }\\n\\n#team-header {\\n  text-align: center; }\\n\\n#team-image {\\n  width: 50%;\\n  height: 50%;\\n  margin: auto; }\\n\\n#score-Info table {\\n  width: 100%;\\n  text-align: center; }\\n\\n.scroll-main {\\n  height: 100%;\\n  margin-top: 3%;\\n  overflow: hidden; }\\n\\n.scroll-child {\\n  height: 250px;\\n  overflow-y: scroll; }\\n\\n.roundCard {\\n  margin: 2%; }\\n\\n.roundCard span {\\n  font-size: 75%; }\\n\\n#team-body {\\n  margin-bottom: 5%; }\\n\\n.holeHeader {\\n  text-align: center;\\n  border: 1px solid black; }\\n\\n.holeByHole {\\n  width: 100%;\\n  border-collapse: collapse; }\\n\\n.holeTotal {\\n  text-align: center;\\n  border: 1px solid black;\\n  color: red; }\\n\\n.holeBody {\\n  text-align: center;\\n  border: 1px solid black; }\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Todo } from '../../classes/todo';\nimport { TodoService} from '../../services/todo.service';\nimport { LiveScoreService } from '../live-score/live-score.service';\n\n\n\n@Component({\n  selector: 'app-todo-item',\n  templateUrl: './todo-item.component.html',\n  styleUrls: ['./todo-item.component.scss']\n})\nexport class TodoItemComponent implements OnInit {\n\n  @Input()\n  private todo: Todo;\n\n  errorMessage: string;\n  playerdata;\n\n  constructor(private todoService: TodoService, public _liveScoreService:LiveScoreService ) { }\n\n  ngOnInit() {\n    // this._liveScoreService.getRealJsonData()\n    // .subscribe(playerdata => {\n    //   this.playerdata = playerdata;},\n    // error => this.errorMessage=<any>error);\n      }\n  \n\n  private removeTodo(): void {\n    this.todoService.removeTodo(this.todo.id);\n  }\n\n}\n","module.exports = \"<div class=\\\"centre\\\">\\r\\n  <h3>Currently awaiting Kinesis API for bus tracking.</h3>\\r\\n  \\r\\n</div>\\r\\n\"","module.exports = \"h3 {\\n  display: flex;\\n  justify-content: center;\\n  flex-direction: column;\\n  text-align: center; }\\n\\n.centre {\\n  position: absolute;\\n  top: 40%; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { trigger, state, transition, style, animate } from '@angular/animations';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-transport',\r\n  templateUrl: './transport.component.html',\r\n  styleUrls: ['./transport.component.scss'],\r\n  // animations: [\r\n  //   trigger('fade', [\r\n  //     transition('void => *', [\r\n  //       style({opacity: 0}),\r\n  //       animate(2000, style({opacity: 1}))\r\n  //     ])\r\n  //   ])\r\n  // ]\r\n  \r\n})\r\nexport class TransportComponent{\r\n\r\n \r\n  \r\n  constructor() {\r\n    \r\n  }\r\n\r\n  \r\n\r\n  zoom = 14;\r\n\r\n  displayedColumns = ['bus', 'times'];\r\n  dataSource = ELEMENT_DATA;\r\n\r\n  NationalAcademylat = 53.394427;\r\n  NationalAcademylng = -6.560887;\r\n\r\n  HotelReceptionlat = 53.391241;\r\n  HotelReceptionlng = -6.566353;\r\n\r\n  ClubHouseRoundaboutlat = 53.390675;\r\n  ClubHouseRoundaboutlng = -6.567644;\r\n\r\n  Cartondefaultlat = 53.390995;\r\n  Cartondefaultlng = -6.566462;\r\n\r\n  MaynoothDefaultlat = 53.380809;\r\n  MaynoothDefaultlng = -6.594588;\r\n\r\n  ApartmentComplexlat = 53.380337;\r\n  ApartmentComplexlng = -6.595629;\r\n\r\n  PhoenixRestaurantlat = 53.383985;\r\n  PhoenixRestaurantlng = -6.604083;\r\n\r\n  PedestrianCrosslat = 53.382562;\r\n  PedestrianCrosslng = -6.600772;\r\n}\r\n\r\nexport interface Element {\r\n  name: string;\r\n  position: number;\r\n}\r\n\r\nconst ELEMENT_DATA: Element[] = [\r\n  {position: 1, name: '11:30'},\r\n  {position: 2, name: '11:00'},\r\n\r\n\r\n];\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ITeam } from '../../components/live-score/live-team-score/live-team-score';\r\n\r\n@Pipe({\r\n  name: 'teamFilter'\r\n})\r\nexport class SortPipe implements PipeTransform {\r\n  transform(value: any[], args: string): any {\r\n    if(args == 'up'){\r\n        return value.sort();\r\n      \r\n    } else if (args == 'down'){\r\n        return value.sort();\r\n    }\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\nimport { TodoTeam} from '../classes/todo-team';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoTeamService {\n\nprivate todosTeam: TodoTeam[];\nprivate nextId: number;\n\n  constructor() { \n   let todosTeam = this.getTodosTeam();\n\n    if(todosTeam.length == 0){\n      this.nextId = 0;\n    } else {\n      let maxId = todosTeam[todosTeam.length -1].id;\n      this.nextId = maxId + 1;\n    }\n  }\n\n  public addTodoTeam(teamName: string): void{\n    let todoTeam = new TodoTeam(this.nextId, teamName);\n    let todosTeam = this.getTodosTeam();\n    todosTeam.push(todoTeam);\n\n    this.setLocalStorageTodosTeam(todosTeam);\n    this.nextId;\n  }\n\n  public getTodosTeam(): TodoTeam[] {\n    let localStorageItem = JSON.parse(localStorage.getItem('todosTeam'));\n    return localStorageItem == null ? [] : localStorageItem.todosTeam;\n  }\n\n  public removeTodoTeam(id: number): void{\n    let todosTeam = this.getTodosTeam();\n   todosTeam = todosTeam.filter((todoTeam) => todoTeam.id !== id);\n   this.setLocalStorageTodosTeam(todosTeam);\n  }\n\n  private setLocalStorageTodosTeam(todosTeam: TodoTeam[]): void {\n    localStorage.setItem('todosTeam', JSON.stringify({todosTeam: todosTeam}));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Todo} from '../classes/todo';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n  private todos: Todo[];\n  private nextId: number;\n\n  constructor() { \n   let todos= this.getTodos();\n  \n   if(todos.length == 0){\n     this.nextId=0;\n   } else {\n\n    let maxId = todos[todos.length -1].id;\n    this.nextId= maxId +1;\n\n   }\n  }\n\n  public addTodo(firstname: string, lastname: string): void{\n    console.log(this.todos);\n    let todo = new Todo(this.nextId, firstname, lastname);\n    let todos = this.getTodos();\n    todos.push(todo);\n\n    this.setLocalStorageTodos(todos);\n    this.nextId++;\n  }\n\n  public getTodos(): Todo[]{\n    let localStorageItem = JSON.parse(window.localStorage.getItem('todos'));\n    return localStorageItem == null ? [] : localStorageItem.todos;\n  }\n\n  public removeTodo(id: number): void{\n    let todos = this.getTodos();\n    todos = todos.filter((todo) => todo.id !== id);\n    this.setLocalStorageTodos(todos);\n  }\n\n  private setLocalStorageTodos(todos: Todo[]): void{\n    window.localStorage.setItem('todos',JSON.stringify({ todos: todos}));\n  }\n}\n","import {CdkTableModule} from '@angular/cdk/table';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {NgModule} from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n} from '@angular/material';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {BottomSheetOverviewComponent} from '../components/geolocation/bottom-sheet/bottom-sheet-overview.component';\r\n\r\n@NgModule({\r\n  exports: [\r\n    CdkTableModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class QuoteService {\r\n  constructor(private http: Http) {\r\n\r\n  }\r\n\r\n  addQuote(title: string, content: string, severity: string ) {\r\n    const body = JSON.stringify({content: content, title: title, severity: severity });\r\n    const headers = new Headers({'Content-Type': 'application/json'});\r\n    return this.http.post('http://localhost:8000/api/quote/', body, {headers: headers});\r\n  }\r\n\r\n  getQuotes(): Observable<any> {\r\n    return this.http.get('http://localhost:8000/api/quotes')\r\n    .pipe(map(\r\n        (response: Response) => {\r\n          return response.json().quotes;\r\n        }\r\n      ));\r\n    }\r\n\r\n\r\n  updateQuote(id: number, newTitle: string, newContent: string, newSeverity: string) {\r\n    const body = JSON.stringify({title: newTitle, content: newContent, severity: newSeverity});\r\n    const headers = new Headers({'Content-Type': 'application/json'});\r\n    return this.http.put('http://localhost:8000/api/quote/' + id, body, {headers: headers})\r\n    .pipe(map(\r\n        (response: Response) => response.json()\r\n    ));\r\n  }\r\n\r\n  deleteQuote(id: number) {\r\n    return this.http.delete('http://localhost:8000/api/quote/' + id);\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  mapbox: 'https://api.mapbox.com/styles/v1/cavinn/cjgnnbb82009v2rp3jjepsgva/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiY2F2aW5uIiwiYSI6ImNqZW9nNjduejVrcTIyd21xMGhsYnB0bGwifQ.d1szzRngrK0u-qP_aiD64A'\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}
